{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "7": "contracts/utils/ERC20.sol",
    "8": "contracts/utils/Ownable.sol"
  },
  "ast": {
    "absolutePath": "contracts/utils/ERC20.sol",
    "exportedSymbols": {
      "Context": [4108],
      "ERC20": [4693],
      "Ownable": [4795]
    },
    "id": 4694,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4088,
        "literals": ["solidity", "^", "0.8", ".0"],
        "nodeType": "PragmaDirective",
        "src": "91:23:7"
      },
      {
        "absolutePath": "contracts/utils/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 4089,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4694,
        "sourceUnit": 4796,
        "src": "116:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "Context",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4108,
        "linearizedBaseContracts": [4108],
        "name": "Context",
        "nameLocation": "161:7:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 4097,
              "nodeType": "Block",
              "src": "238:36:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 4094,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "256:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 4095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "256:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 4093,
                  "id": 4096,
                  "nodeType": "Return",
                  "src": "249:17:7"
                }
              ]
            },
            "id": 4098,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgSender",
            "nameLocation": "185:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "195:2:7"
            },
            "returnParameters": {
              "id": 4093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4092,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4098,
                  "src": "229:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "228:9:7"
            },
            "scope": 4108,
            "src": "176:98:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4106,
              "nodeType": "Block",
              "src": "349:34:7",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 4103,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "367:3:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 4104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "data",
                    "nodeType": "MemberAccess",
                    "src": "367:8:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_calldata_ptr",
                      "typeString": "bytes calldata"
                    }
                  },
                  "functionReturnParameters": 4102,
                  "id": 4105,
                  "nodeType": "Return",
                  "src": "360:15:7"
                }
              ]
            },
            "id": 4107,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_msgData",
            "nameLocation": "291:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:2:7"
            },
            "returnParameters": {
              "id": 4102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4101,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4107,
                  "src": "333:14:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4100,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "332:16:7"
            },
            "scope": 4108,
            "src": "282:101:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4694,
        "src": "143:243:7",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4110,
              "name": "Context",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4108,
              "src": "1606:7:7"
            },
            "id": 4111,
            "nodeType": "InheritanceSpecifier",
            "src": "1606:7:7"
          },
          {
            "baseName": {
              "id": 4112,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4795,
              "src": "1615:7:7"
            },
            "id": 4113,
            "nodeType": "InheritanceSpecifier",
            "src": "1615:7:7"
          }
        ],
        "canonicalName": "ERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4109,
          "nodeType": "StructuredDocumentation",
          "src": "390:1196:7",
          "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
        },
        "fullyImplemented": true,
        "id": 4693,
        "linearizedBaseContracts": [4693, 4795, 4108],
        "name": "ERC20",
        "nameLocation": "1597:5:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4117,
            "mutability": "mutable",
            "name": "_balances",
            "nameLocation": "1666:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "1630:45:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 4116,
              "keyType": {
                "id": 4114,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1638:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1630:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 4115,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1649:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4123,
            "mutability": "mutable",
            "name": "_allowances",
            "nameLocation": "1740:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "1684:67:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 4122,
              "keyType": {
                "id": 4118,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1692:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1684:47:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 4121,
                "keyType": {
                  "id": 4119,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1711:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1703:27:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 4120,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1722:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4125,
            "mutability": "mutable",
            "name": "_totalSupply",
            "nameLocation": "1776:12:7",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "1760:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4124,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1760:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4127,
            "mutability": "mutable",
            "name": "_name",
            "nameLocation": "1812:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "1797:20:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4126,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1797:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 4129,
            "mutability": "mutable",
            "name": "_symbol",
            "nameLocation": "1839:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 4693,
            "src": "1824:22:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 4128,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1824:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "id": 4137,
            "name": "Transfer",
            "nameLocation": "1859:8:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4136,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4131,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1876:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "1868:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1868:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1890:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "1882:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1882:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4135,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1902:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4137,
                  "src": "1894:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4134,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1894:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1867:41:7"
            },
            "src": "1853:56:7"
          },
          {
            "anonymous": false,
            "id": 4145,
            "name": "Approval",
            "nameLocation": "1921:8:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4144,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4139,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1938:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "1930:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1930:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4141,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1953:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "1945:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4140,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1945:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4143,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "1970:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4145,
                  "src": "1962:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4142,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1962:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1929:47:7"
            },
            "src": "1915:62:7"
          },
          {
            "body": {
              "id": 4161,
              "nodeType": "Block",
              "src": "2353:60:7",
              "statements": [
                {
                  "expression": {
                    "id": 4155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4153,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4127,
                      "src": "2364:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4154,
                      "name": "name_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4148,
                      "src": "2372:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2364:13:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4156,
                  "nodeType": "ExpressionStatement",
                  "src": "2364:13:7"
                },
                {
                  "expression": {
                    "id": 4159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4157,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4129,
                      "src": "2388:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4158,
                      "name": "symbol_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4150,
                      "src": "2398:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2388:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 4160,
                  "nodeType": "ExpressionStatement",
                  "src": "2388:17:7"
                }
              ]
            },
            "documentation": {
              "id": 4146,
              "nodeType": "StructuredDocumentation",
              "src": "1985:306:7",
              "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
            },
            "id": 4162,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4148,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "2323:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4162,
                  "src": "2309:19:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4147,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4150,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "2344:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4162,
                  "src": "2330:21:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4149,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2330:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2308:44:7"
            },
            "returnParameters": {
              "id": 4152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2353:0:7"
            },
            "scope": 4693,
            "src": "2297:116:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4170,
              "nodeType": "Block",
              "src": "2543:31:7",
              "statements": [
                {
                  "expression": {
                    "id": 4168,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4127,
                    "src": "2561:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4167,
                  "id": 4169,
                  "nodeType": "Return",
                  "src": "2554:12:7"
                }
              ]
            },
            "documentation": {
              "id": 4163,
              "nodeType": "StructuredDocumentation",
              "src": "2421:56:7",
              "text": " @dev Returns the name of the token."
            },
            "functionSelector": "06fdde03",
            "id": 4171,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nameLocation": "2492:4:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2496:2:7"
            },
            "returnParameters": {
              "id": 4167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4166,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4171,
                  "src": "2528:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4165,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2528:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2527:15:7"
            },
            "scope": 4693,
            "src": "2483:91:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4179,
              "nodeType": "Block",
              "src": "2755:33:7",
              "statements": [
                {
                  "expression": {
                    "id": 4177,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4129,
                    "src": "2773:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 4176,
                  "id": 4178,
                  "nodeType": "Return",
                  "src": "2766:14:7"
                }
              ]
            },
            "documentation": {
              "id": 4172,
              "nodeType": "StructuredDocumentation",
              "src": "2582:105:7",
              "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
            },
            "functionSelector": "95d89b41",
            "id": 4180,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nameLocation": "2702:6:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2708:2:7"
            },
            "returnParameters": {
              "id": 4176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4175,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4180,
                  "src": "2740:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4174,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2740:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2739:15:7"
            },
            "scope": 4693,
            "src": "2693:95:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4188,
              "nodeType": "Block",
              "src": "3483:28:7",
              "statements": [
                {
                  "expression": {
                    "hexValue": "3138",
                    "id": 4186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3501:2:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  "functionReturnParameters": 4185,
                  "id": 4187,
                  "nodeType": "Return",
                  "src": "3494:9:7"
                }
              ]
            },
            "documentation": {
              "id": 4181,
              "nodeType": "StructuredDocumentation",
              "src": "2796:625:7",
              "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
            },
            "functionSelector": "313ce567",
            "id": 4189,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3436:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3444:2:7"
            },
            "returnParameters": {
              "id": 4185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4184,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4189,
                  "src": "3476:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 4183,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3476:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3475:7:7"
            },
            "scope": 4693,
            "src": "3427:84:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4197,
              "nodeType": "Block",
              "src": "3637:38:7",
              "statements": [
                {
                  "expression": {
                    "id": 4195,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4125,
                    "src": "3655:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4194,
                  "id": 4196,
                  "nodeType": "Return",
                  "src": "3648:19:7"
                }
              ]
            },
            "documentation": {
              "id": 4190,
              "nodeType": "StructuredDocumentation",
              "src": "3519:51:7",
              "text": " @dev See {IERC20-totalSupply}."
            },
            "functionSelector": "18160ddd",
            "id": 4198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupply",
            "nameLocation": "3585:11:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3596:2:7"
            },
            "returnParameters": {
              "id": 4194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4198,
                  "src": "3628:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4192,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3628:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3627:9:7"
            },
            "scope": 4693,
            "src": "3576:99:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4210,
              "nodeType": "Block",
              "src": "3812:44:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4206,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4117,
                      "src": "3830:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4208,
                    "indexExpression": {
                      "id": 4207,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4201,
                      "src": "3840:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3830:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4205,
                  "id": 4209,
                  "nodeType": "Return",
                  "src": "3823:25:7"
                }
              ]
            },
            "documentation": {
              "id": 4199,
              "nodeType": "StructuredDocumentation",
              "src": "3683:49:7",
              "text": " @dev See {IERC20-balanceOf}."
            },
            "functionSelector": "70a08231",
            "id": 4211,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "3747:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4201,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3765:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4211,
                  "src": "3757:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4200,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3757:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3756:17:7"
            },
            "returnParameters": {
              "id": 4205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4211,
                  "src": "3803:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4203,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3803:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3802:9:7"
            },
            "scope": 4693,
            "src": "3738:118:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4230,
              "nodeType": "Block",
              "src": "4184:83:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4222,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4098,
                          "src": "4205:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4205:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4224,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4214,
                        "src": "4219:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4225,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4216,
                        "src": "4230:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4221,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4467,
                      "src": "4195:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4195:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4227,
                  "nodeType": "ExpressionStatement",
                  "src": "4195:42:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4255:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4220,
                  "id": 4229,
                  "nodeType": "Return",
                  "src": "4248:11:7"
                }
              ]
            },
            "documentation": {
              "id": 4212,
              "nodeType": "StructuredDocumentation",
              "src": "3864:199:7",
              "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
            },
            "functionSelector": "a9059cbb",
            "id": 4231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transfer",
            "nameLocation": "4078:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4214,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "4095:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4231,
                  "src": "4087:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4213,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4087:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4216,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4114:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4231,
                  "src": "4106:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4106:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4086:35:7"
            },
            "returnParameters": {
              "id": 4220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4231,
                  "src": "4173:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4173:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4172:6:7"
            },
            "scope": 4693,
            "src": "4069:198:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4247,
              "nodeType": "Block",
              "src": "4460:53:7",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4241,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4123,
                        "src": "4478:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4243,
                      "indexExpression": {
                        "id": 4242,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4234,
                        "src": "4490:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4478:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4245,
                    "indexExpression": {
                      "id": 4244,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4236,
                      "src": "4497:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4478:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4240,
                  "id": 4246,
                  "nodeType": "Return",
                  "src": "4471:34:7"
                }
              ]
            },
            "documentation": {
              "id": 4232,
              "nodeType": "StructuredDocumentation",
              "src": "4275:49:7",
              "text": " @dev See {IERC20-allowance}."
            },
            "functionSelector": "dd62ed3e",
            "id": 4248,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allowance",
            "nameLocation": "4339:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4234,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "4357:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4248,
                  "src": "4349:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4349:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4236,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4372:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4248,
                  "src": "4364:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4235,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4364:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4348:32:7"
            },
            "returnParameters": {
              "id": 4240,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4239,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4248,
                  "src": "4446:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4238,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4446:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4445:9:7"
            },
            "scope": 4693,
            "src": "4330:183:7",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4267,
              "nodeType": "Block",
              "src": "4945:80:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4259,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4098,
                          "src": "4965:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4965:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4261,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4251,
                        "src": "4979:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4262,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4253,
                        "src": "4988:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4258,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4670,
                      "src": "4956:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4956:39:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4264,
                  "nodeType": "ExpressionStatement",
                  "src": "4956:39:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5013:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4257,
                  "id": 4266,
                  "nodeType": "Return",
                  "src": "5006:11:7"
                }
              ]
            },
            "documentation": {
              "id": 4249,
              "nodeType": "StructuredDocumentation",
              "src": "4521:306:7",
              "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "095ea7b3",
            "id": 4268,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "4842:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4251,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "4858:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4268,
                  "src": "4850:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4850:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4253,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4875:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4268,
                  "src": "4867:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4849:33:7"
            },
            "returnParameters": {
              "id": 4257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4268,
                  "src": "4934:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4255,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4934:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4933:6:7"
            },
            "scope": 4693,
            "src": "4833:192:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4323,
              "nodeType": "Block",
              "src": "5755:476:7",
              "statements": [
                {
                  "assignments": [4281],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4281,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "5774:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 4323,
                      "src": "5766:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4280,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5766:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4288,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4282,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4123,
                        "src": "5793:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4284,
                      "indexExpression": {
                        "id": 4283,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "5805:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5793:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4287,
                    "indexExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 4285,
                        "name": "_msgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4098,
                        "src": "5813:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 4286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5813:12:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5793:33:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5766:60:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4289,
                      "name": "currentAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4281,
                      "src": "5841:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 4292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5866:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 4291,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "5866:7:7",
                              "typeDescriptions": {}
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            }
                          ],
                          "id": 4290,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -27,
                          "src": "5861:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 4293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5861:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_uint256",
                          "typeString": "type(uint256)"
                        }
                      },
                      "id": 4294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "max",
                      "nodeType": "MemberAccess",
                      "src": "5861:17:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5841:37:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4314,
                  "nodeType": "IfStatement",
                  "src": "5837:314:7",
                  "trueBody": {
                    "id": 4313,
                    "nodeType": "Block",
                    "src": "5880:271:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 4299,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 4297,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4281,
                                "src": "5921:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 4298,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4275,
                                "src": "5941:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5921:26:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
                              "id": 4300,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5966:42:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                                "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                              },
                              "value": "ERC20: transfer amount exceeds allowance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
                                "typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
                              }
                            ],
                            "id": 4296,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5895:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 4301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5895:128:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 4302,
                        "nodeType": "ExpressionStatement",
                        "src": "5895:128:7"
                      },
                      {
                        "id": 4312,
                        "nodeType": "UncheckedBlock",
                        "src": "6038:102:7",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 4304,
                                  "name": "sender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4271,
                                  "src": "6076:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 4305,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4098,
                                    "src": "6084:10:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 4306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6084:12:7",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 4309,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 4307,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4281,
                                    "src": "6098:16:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 4308,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4275,
                                    "src": "6117:6:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "6098:25:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 4303,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4670,
                                "src": "6067:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 4310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6067:57:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 4311,
                            "nodeType": "ExpressionStatement",
                            "src": "6067:57:7"
                          }
                        ]
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4316,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4271,
                        "src": "6173:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4317,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4273,
                        "src": "6181:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4318,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4275,
                        "src": "6192:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4315,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4467,
                      "src": "6163:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6163:36:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4320,
                  "nodeType": "ExpressionStatement",
                  "src": "6163:36:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6219:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4279,
                  "id": 4322,
                  "nodeType": "Return",
                  "src": "6212:11:7"
                }
              ]
            },
            "documentation": {
              "id": 4269,
              "nodeType": "StructuredDocumentation",
              "src": "5033:579:7",
              "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
            },
            "functionSelector": "23b872dd",
            "id": 4324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "5627:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4271,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "5658:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "5650:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5650:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4273,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "5683:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "5675:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5675:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4275,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5711:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "5703:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5703:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5639:85:7"
            },
            "returnParameters": {
              "id": 4279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4278,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4324,
                  "src": "5749:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4277,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5749:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5748:6:7"
            },
            "scope": 4693,
            "src": "5618:613:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4350,
              "nodeType": "Block",
              "src": "6766:171:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4335,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4098,
                          "src": "6800:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6800:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4337,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4327,
                        "src": "6827:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 4338,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4123,
                              "src": "6849:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 4341,
                            "indexExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4339,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4098,
                                "src": "6861:10:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 4340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6861:12:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6849:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4343,
                          "indexExpression": {
                            "id": 4342,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4327,
                            "src": "6875:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6849:34:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 4344,
                          "name": "addedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4329,
                          "src": "6886:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6849:47:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4334,
                      "name": "_approve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4670,
                      "src": "6777:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6777:130:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4347,
                  "nodeType": "ExpressionStatement",
                  "src": "6777:130:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6925:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4333,
                  "id": 4349,
                  "nodeType": "Return",
                  "src": "6918:11:7"
                }
              ]
            },
            "documentation": {
              "id": 4325,
              "nodeType": "StructuredDocumentation",
              "src": "6239:395:7",
              "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
            },
            "functionSelector": "39509351",
            "id": 4351,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increaseAllowance",
            "nameLocation": "6649:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4327,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "6675:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4351,
                  "src": "6667:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4326,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6667:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4329,
                  "mutability": "mutable",
                  "name": "addedValue",
                  "nameLocation": "6692:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4351,
                  "src": "6684:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4328,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6684:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6666:37:7"
            },
            "returnParameters": {
              "id": 4333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4332,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4351,
                  "src": "6755:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4331,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6755:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6754:6:7"
            },
            "scope": 4693,
            "src": "6640:297:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4389,
              "nodeType": "Block",
              "src": "7571:351:7",
              "statements": [
                {
                  "assignments": [4362],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4362,
                      "mutability": "mutable",
                      "name": "currentAllowance",
                      "nameLocation": "7590:16:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 4389,
                      "src": "7582:24:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4361,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7582:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4369,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 4363,
                        "name": "_allowances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4123,
                        "src": "7609:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 4366,
                      "indexExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 4364,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4098,
                          "src": "7621:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 4365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7621:12:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "7609:25:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4368,
                    "indexExpression": {
                      "id": 4367,
                      "name": "spender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4354,
                      "src": "7635:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7609:34:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7582:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4371,
                          "name": "currentAllowance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4362,
                          "src": "7676:16:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4372,
                          "name": "subtractedValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4356,
                          "src": "7696:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7676:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                        "id": 4374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7726:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        },
                        "value": "ERC20: decreased allowance below zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                          "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                        }
                      ],
                      "id": 4370,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "7654:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7654:122:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4376,
                  "nodeType": "ExpressionStatement",
                  "src": "7654:122:7"
                },
                {
                  "id": 4386,
                  "nodeType": "UncheckedBlock",
                  "src": "7787:104:7",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 4378,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4098,
                              "src": "7821:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 4379,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7821:12:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 4380,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4354,
                            "src": "7835:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 4383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 4381,
                              "name": "currentAllowance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4362,
                              "src": "7844:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 4382,
                              "name": "subtractedValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4356,
                              "src": "7863:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7844:34:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4377,
                          "name": "_approve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4670,
                          "src": "7812:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function (address,address,uint256)"
                          }
                        },
                        "id": 4384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7812:67:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 4385,
                      "nodeType": "ExpressionStatement",
                      "src": "7812:67:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 4387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7910:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 4360,
                  "id": 4388,
                  "nodeType": "Return",
                  "src": "7903:11:7"
                }
              ]
            },
            "documentation": {
              "id": 4352,
              "nodeType": "StructuredDocumentation",
              "src": "6945:489:7",
              "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
            },
            "functionSelector": "a457c2d7",
            "id": 4390,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decreaseAllowance",
            "nameLocation": "7449:17:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4354,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "7475:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4390,
                  "src": "7467:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7467:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4356,
                  "mutability": "mutable",
                  "name": "subtractedValue",
                  "nameLocation": "7492:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4390,
                  "src": "7484:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7484:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7466:42:7"
            },
            "returnParameters": {
              "id": 4360,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4359,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4390,
                  "src": "7560:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4358,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7560:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7559:6:7"
            },
            "scope": 4693,
            "src": "7440:482:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4466,
              "nodeType": "Block",
              "src": "8533:649:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4401,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4393,
                          "src": "8552:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8570:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4403,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8562:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4402,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8562:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8562:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8552:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                        "id": 4407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8574:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        },
                        "value": "ERC20: transfer from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                          "typeString": "literal_string \"ERC20: transfer from the zero address\""
                        }
                      ],
                      "id": 4400,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "8544:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8544:70:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4409,
                  "nodeType": "ExpressionStatement",
                  "src": "8544:70:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4411,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4395,
                          "src": "8633:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8654:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8646:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4412,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8646:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8646:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8633:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                        "id": 4417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8658:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        },
                        "value": "ERC20: transfer to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                          "typeString": "literal_string \"ERC20: transfer to the zero address\""
                        }
                      ],
                      "id": 4410,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "8625:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8625:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4419,
                  "nodeType": "ExpressionStatement",
                  "src": "8625:71:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4421,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4393,
                        "src": "8730:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4422,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "8738:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4423,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4397,
                        "src": "8749:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4420,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4681,
                      "src": "8709:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8709:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4425,
                  "nodeType": "ExpressionStatement",
                  "src": "8709:47:7"
                },
                {
                  "assignments": [4427],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4427,
                      "mutability": "mutable",
                      "name": "senderBalance",
                      "nameLocation": "8777:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 4466,
                      "src": "8769:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4426,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8769:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4431,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4428,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4117,
                      "src": "8793:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4430,
                    "indexExpression": {
                      "id": 4429,
                      "name": "sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4393,
                      "src": "8803:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8793:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8769:41:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4433,
                          "name": "senderBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4427,
                          "src": "8843:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4434,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4397,
                          "src": "8860:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8843:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                        "id": 4436,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8881:40:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        },
                        "value": "ERC20: transfer amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                          "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                        }
                      ],
                      "id": 4432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "8821:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8821:111:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4438,
                  "nodeType": "ExpressionStatement",
                  "src": "8821:111:7"
                },
                {
                  "id": 4447,
                  "nodeType": "UncheckedBlock",
                  "src": "8943:79:7",
                  "statements": [
                    {
                      "expression": {
                        "id": 4445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4439,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4117,
                            "src": "8968:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4441,
                          "indexExpression": {
                            "id": 4440,
                            "name": "sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4393,
                            "src": "8978:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "8968:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4442,
                            "name": "senderBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4427,
                            "src": "8988:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4443,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4397,
                            "src": "9004:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8988:22:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8968:42:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4446,
                      "nodeType": "ExpressionStatement",
                      "src": "8968:42:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4448,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4117,
                        "src": "9032:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4450,
                      "indexExpression": {
                        "id": 4449,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "9042:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9032:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4451,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4397,
                      "src": "9056:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9032:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4453,
                  "nodeType": "ExpressionStatement",
                  "src": "9032:30:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4455,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4393,
                        "src": "9089:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4456,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "9097:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4457,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4397,
                        "src": "9108:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4454,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4137,
                      "src": "9080:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9080:35:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4459,
                  "nodeType": "EmitStatement",
                  "src": "9075:40:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4461,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4393,
                        "src": "9148:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4462,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4395,
                        "src": "9156:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4463,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4397,
                        "src": "9167:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4460,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4692,
                      "src": "9128:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9128:46:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4465,
                  "nodeType": "ExpressionStatement",
                  "src": "9128:46:7"
                }
              ]
            },
            "documentation": {
              "id": 4391,
              "nodeType": "StructuredDocumentation",
              "src": "7930:476:7",
              "text": " @dev Moves `amount` of tokens from `sender` to `recipient`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
            },
            "id": 4467,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "8421:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4393,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8449:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4467,
                  "src": "8441:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8441:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4395,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8474:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4467,
                  "src": "8466:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8466:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4397,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8502:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4467,
                  "src": "8494:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8494:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8430:85:7"
            },
            "returnParameters": {
              "id": 4399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8533:0:7"
            },
            "scope": 4693,
            "src": "8412:770:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4482,
              "nodeType": "Block",
              "src": "9545:41:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4478,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4470,
                        "src": "9562:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4479,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4472,
                        "src": "9571:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4477,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4553,
                      "src": "9556:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9556:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4481,
                  "nodeType": "ExpressionStatement",
                  "src": "9556:22:7"
                }
              ]
            },
            "documentation": {
              "id": 4468,
              "nodeType": "StructuredDocumentation",
              "src": "9190:273:7",
              "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
            },
            "functionSelector": "40c10f19",
            "id": 4483,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4475,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4474,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4737,
                  "src": "9535:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "9535:9:7"
              }
            ],
            "name": "mint",
            "nameLocation": "9480:4:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4473,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4470,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9493:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4483,
                  "src": "9485:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9485:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4472,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9510:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4483,
                  "src": "9502:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9502:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9484:33:7"
            },
            "returnParameters": {
              "id": 4476,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9545:0:7"
            },
            "scope": 4693,
            "src": "9471:115:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4497,
              "nodeType": "Block",
              "src": "9668:41:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4493,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4485,
                        "src": "9685:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4494,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4487,
                        "src": "9694:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4492,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4625,
                      "src": "9679:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9679:22:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4496,
                  "nodeType": "ExpressionStatement",
                  "src": "9679:22:7"
                }
              ]
            },
            "functionSelector": "9dc29fac",
            "id": 4498,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4490,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4489,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4737,
                  "src": "9658:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "9658:9:7"
              }
            ],
            "name": "burn",
            "nameLocation": "9603:4:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4488,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4485,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9616:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4498,
                  "src": "9608:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9608:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4487,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9633:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4498,
                  "src": "9625:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9625:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9607:33:7"
            },
            "returnParameters": {
              "id": 4491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9668:0:7"
            },
            "scope": 4693,
            "src": "9594:115:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4552,
              "nodeType": "Block",
              "src": "9782:334:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4511,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4506,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4500,
                          "src": "9801:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9820:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4508,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9812:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4507,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9812:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9812:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9801:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "id": 4512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9824:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        },
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                          "typeString": "literal_string \"ERC20: mint to the zero address\""
                        }
                      ],
                      "id": 4505,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "9793:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9793:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4514,
                  "nodeType": "ExpressionStatement",
                  "src": "9793:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9900:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9892:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4516,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9892:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9892:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4520,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4500,
                        "src": "9904:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4521,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4502,
                        "src": "9913:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4515,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4681,
                      "src": "9871:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9871:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4523,
                  "nodeType": "ExpressionStatement",
                  "src": "9871:49:7"
                },
                {
                  "expression": {
                    "id": 4526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4524,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4125,
                      "src": "9933:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4525,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4502,
                      "src": "9949:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9933:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4527,
                  "nodeType": "ExpressionStatement",
                  "src": "9933:22:7"
                },
                {
                  "expression": {
                    "id": 4532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4528,
                        "name": "_balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4117,
                        "src": "9966:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4530,
                      "indexExpression": {
                        "id": 4529,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4500,
                        "src": "9976:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9966:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 4531,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4502,
                      "src": "9988:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9966:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4533,
                  "nodeType": "ExpressionStatement",
                  "src": "9966:28:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10027:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10019:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4535,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10019:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10019:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4539,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4500,
                        "src": "10031:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4540,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4502,
                        "src": "10040:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4534,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4137,
                      "src": "10010:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10010:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4542,
                  "nodeType": "EmitStatement",
                  "src": "10005:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4546,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10088:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10080:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4544,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10080:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10080:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4548,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4500,
                        "src": "10092:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4549,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4502,
                        "src": "10101:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4543,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4692,
                      "src": "10060:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10060:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4551,
                  "nodeType": "ExpressionStatement",
                  "src": "10060:48:7"
                }
              ]
            },
            "id": 4553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "9726:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4500,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "9740:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4553,
                  "src": "9732:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9732:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4502,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "9757:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4553,
                  "src": "9749:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9749:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9731:33:7"
            },
            "returnParameters": {
              "id": 4504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9782:0:7"
            },
            "scope": 4693,
            "src": "9717:399:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4624,
              "nodeType": "Block",
              "src": "10514:526:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4562,
                          "name": "account",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4556,
                          "src": "10533:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4565,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10552:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4564,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10544:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4563,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10544:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4566,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10544:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10533:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                        "id": 4568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10556:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        },
                        "value": "ERC20: burn from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                          "typeString": "literal_string \"ERC20: burn from the zero address\""
                        }
                      ],
                      "id": 4561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "10525:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10525:67:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4570,
                  "nodeType": "ExpressionStatement",
                  "src": "10525:67:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4572,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4556,
                        "src": "10626:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10643:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10635:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4573,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10635:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10635:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4577,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "10647:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4571,
                      "name": "_beforeTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4681,
                      "src": "10605:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10605:49:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4579,
                  "nodeType": "ExpressionStatement",
                  "src": "10605:49:7"
                },
                {
                  "assignments": [4581],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4581,
                      "mutability": "mutable",
                      "name": "accountBalance",
                      "nameLocation": "10675:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 4624,
                      "src": "10667:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4580,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10667:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4585,
                  "initialValue": {
                    "baseExpression": {
                      "id": 4582,
                      "name": "_balances",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4117,
                      "src": "10692:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 4584,
                    "indexExpression": {
                      "id": 4583,
                      "name": "account",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4556,
                      "src": "10702:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10692:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10667:43:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4587,
                          "name": "accountBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4581,
                          "src": "10729:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4588,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4558,
                          "src": "10747:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10729:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                        "id": 4590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10755:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        },
                        "value": "ERC20: burn amount exceeds balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                          "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                        }
                      ],
                      "id": 4586,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "10721:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10721:71:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4592,
                  "nodeType": "ExpressionStatement",
                  "src": "10721:71:7"
                },
                {
                  "id": 4601,
                  "nodeType": "UncheckedBlock",
                  "src": "10803:81:7",
                  "statements": [
                    {
                      "expression": {
                        "id": 4599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 4593,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4117,
                            "src": "10828:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 4595,
                          "indexExpression": {
                            "id": 4594,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4556,
                            "src": "10838:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "10828:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 4596,
                            "name": "accountBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4581,
                            "src": "10849:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 4597,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4558,
                            "src": "10866:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10849:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10828:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 4600,
                      "nodeType": "ExpressionStatement",
                      "src": "10828:44:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 4604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4602,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4125,
                      "src": "10894:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 4603,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4558,
                      "src": "10910:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10894:22:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4605,
                  "nodeType": "ExpressionStatement",
                  "src": "10894:22:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4607,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4556,
                        "src": "10943:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4610,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10960:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10952:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4608,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10952:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10952:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4612,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "10964:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4606,
                      "name": "Transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4137,
                      "src": "10934:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10934:37:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4614,
                  "nodeType": "EmitStatement",
                  "src": "10929:42:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4616,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4556,
                        "src": "11004:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 4619,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11021:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 4618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11013:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4617,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11013:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11013:10:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4621,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4558,
                        "src": "11025:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4615,
                      "name": "_afterTokenTransfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4692,
                      "src": "10984:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4622,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10984:48:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4623,
                  "nodeType": "ExpressionStatement",
                  "src": "10984:48:7"
                }
              ]
            },
            "documentation": {
              "id": 4554,
              "nodeType": "StructuredDocumentation",
              "src": "10124:319:7",
              "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
            },
            "id": 4625,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nameLocation": "10458:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4556,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "10472:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4625,
                  "src": "10464:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10464:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4558,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10489:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4625,
                  "src": "10481:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4557,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10481:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10463:33:7"
            },
            "returnParameters": {
              "id": 4560,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10514:0:7"
            },
            "scope": 4693,
            "src": "10449:591:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4669,
              "nodeType": "Block",
              "src": "11595:263:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4636,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4628,
                          "src": "11614:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11631:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11623:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4637,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11623:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11623:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11614:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                        "id": 4642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11635:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        },
                        "value": "ERC20: approve from the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                          "typeString": "literal_string \"ERC20: approve from the zero address\""
                        }
                      ],
                      "id": 4635,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "11606:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11606:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4644,
                  "nodeType": "ExpressionStatement",
                  "src": "11606:68:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4646,
                          "name": "spender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4630,
                          "src": "11693:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4649,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11712:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4648,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11704:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4647,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11704:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11704:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11693:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                        "id": 4652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11716:36:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        },
                        "value": "ERC20: approve to the zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                          "typeString": "literal_string \"ERC20: approve to the zero address\""
                        }
                      ],
                      "id": 4645,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "11685:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11685:68:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4654,
                  "nodeType": "ExpressionStatement",
                  "src": "11685:68:7"
                },
                {
                  "expression": {
                    "id": 4661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 4655,
                          "name": "_allowances",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4123,
                          "src": "11766:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 4658,
                        "indexExpression": {
                          "id": 4656,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4628,
                          "src": "11778:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11766:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 4659,
                      "indexExpression": {
                        "id": 4657,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4630,
                        "src": "11785:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11766:27:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4660,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4632,
                      "src": "11796:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11766:36:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4662,
                  "nodeType": "ExpressionStatement",
                  "src": "11766:36:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4664,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4628,
                        "src": "11827:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4665,
                        "name": "spender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4630,
                        "src": "11834:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4666,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4632,
                        "src": "11843:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4663,
                      "name": "Approval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4145,
                      "src": "11818:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 4667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11818:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4668,
                  "nodeType": "EmitStatement",
                  "src": "11813:37:7"
                }
              ]
            },
            "documentation": {
              "id": 4626,
              "nodeType": "StructuredDocumentation",
              "src": "11048:424:7",
              "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
            },
            "id": 4670,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approve",
            "nameLocation": "11487:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4633,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4628,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11514:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4670,
                  "src": "11506:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4627,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11506:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4630,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "11538:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4670,
                  "src": "11530:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4629,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11530:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4632,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "11564:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4670,
                  "src": "11556:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11556:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11495:82:7"
            },
            "returnParameters": {
              "id": 4634,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11595:0:7"
            },
            "scope": 4693,
            "src": "11478:380:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4680,
              "nodeType": "Block",
              "src": "12581:2:7",
              "statements": []
            },
            "documentation": {
              "id": 4671,
              "nodeType": "StructuredDocumentation",
              "src": "11866:586:7",
              "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4681,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "12467:20:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4673,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "12506:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "12498:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12498:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4675,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "12529:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "12521:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12521:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4677,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12550:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4681,
                  "src": "12542:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12542:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12487:76:7"
            },
            "returnParameters": {
              "id": 4679,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12581:0:7"
            },
            "scope": 4693,
            "src": "12458:125:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4691,
              "nodeType": "Block",
              "src": "13309:2:7",
              "statements": []
            },
            "documentation": {
              "id": 4682,
              "nodeType": "StructuredDocumentation",
              "src": "12591:590:7",
              "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
            },
            "id": 4692,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_afterTokenTransfer",
            "nameLocation": "13196:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4689,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4684,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "13234:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "13226:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13226:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4686,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "13257:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "13249:10:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4685,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13249:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4688,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "13278:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 4692,
                  "src": "13270:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4687,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13270:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13215:76:7"
            },
            "returnParameters": {
              "id": 4690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13309:0:7"
            },
            "scope": 4693,
            "src": "13187:124:7",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 4694,
        "src": "1588:11726:7",
        "usedErrors": []
      }
    ],
    "src": "91:13225:7"
  },
  "bytecode": "",
  "bytecodeSha1": "07053dfc23cdea4dabc5128fbdddf75c08b66a4c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 10
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "ERC20",
  "coverageMap": {
    "branches": {
      "7": {
        "ERC20._approve": {
          "48": [11614, 11633, true],
          "49": [11693, 11714, true]
        },
        "ERC20._burn": {
          "54": [10533, 10554, true],
          "55": [10729, 10753, true]
        },
        "ERC20._mint": {
          "53": [9801, 9822, true]
        },
        "ERC20._transfer": {
          "50": [8552, 8572, true],
          "51": [8633, 8656, true],
          "52": [8843, 8866, true]
        },
        "ERC20.decreaseAllowance": {
          "47": [7676, 7711, true]
        },
        "ERC20.transferFrom": {
          "45": [5841, 5878, false],
          "46": [5921, 5947, true]
        }
      },
      "8": {
        "Ownable.transferOwnership": {
          "56": [1268, 1289, true],
          "57": [2058, 2080, true]
        }
      }
    },
    "statements": {
      "7": {
        "Context._msgSender": {
          "6": [249, 266]
        },
        "ERC20._approve": {
          "24": [11606, 11674],
          "25": [11685, 11753],
          "26": [11766, 11802],
          "27": [11813, 11850]
        },
        "ERC20._burn": {
          "40": [10525, 10592],
          "41": [10721, 10792],
          "42": [10828, 10872],
          "43": [10894, 10916],
          "44": [10929, 10971]
        },
        "ERC20._mint": {
          "34": [9793, 9858],
          "35": [9933, 9955],
          "36": [9966, 9994],
          "37": [10005, 10047]
        },
        "ERC20._transfer": {
          "28": [8544, 8614],
          "29": [8625, 8696],
          "30": [8821, 8932],
          "31": [8968, 9010],
          "32": [9032, 9062],
          "33": [9075, 9115]
        },
        "ERC20.allowance": {
          "3": [4471, 4505]
        },
        "ERC20.approve": {
          "5": [4956, 4995],
          "7": [5006, 5017]
        },
        "ERC20.balanceOf": {
          "2": [3823, 3848]
        },
        "ERC20.burn": {
          "17": [9679, 9701]
        },
        "ERC20.decimals": {
          "1": [3494, 3503]
        },
        "ERC20.decreaseAllowance": {
          "18": [7654, 7776],
          "19": [7812, 7879],
          "20": [7903, 7914]
        },
        "ERC20.increaseAllowance": {
          "12": [6777, 6907]
        },
        "ERC20.mint": {
          "13": [9556, 9578]
        },
        "ERC20.name": {
          "4": [2554, 2566]
        },
        "ERC20.symbol": {
          "16": [2766, 2780]
        },
        "ERC20.totalSupply": {
          "0": [3648, 3667]
        },
        "ERC20.transfer": {
          "21": [4195, 4237]
        },
        "ERC20.transferFrom": {
          "8": [5895, 6023],
          "9": [6067, 6124],
          "10": [6163, 6199],
          "11": [6212, 6223]
        }
      },
      "8": {
        "Ownable._transferOwnership": {
          "38": [2463, 2480],
          "39": [2491, 2536]
        },
        "Ownable.owner": {
          "15": [1114, 1127]
        },
        "Ownable.renounceOwnership": {
          "14": [1762, 1792]
        },
        "Ownable.transferOwnership": {
          "22": [2036, 2146],
          "23": [2157, 2185]
        }
      }
    }
  },
  "dependencies": ["Context", "Ownable"],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100d05760003560e01c806306fdde03146100d5578063095ea7b3146100f357806318160ddd1461011657806323b872dd14610128578063313ce5671461013b578063395093511461014a57806340c10f191461015d57806370a0823114610172578063715018a61461019b5780638da5cb5b146101a357806395d89b41146101c35780639dc29fac146101cb578063a457c2d7146101de578063a9059cbb146101f1578063dd62ed3e14610204578063f2fde38b1461023d575b600080fd5b6100dd610250565b6040516100ea9190610b19565b60405180910390f35b610106610101366004610b8a565b6102e2565b60405190151581526020016100ea565b6003545b6040519081526020016100ea565b610106610136366004610bb4565b6102f8565b604051601281526020016100ea565b610106610158366004610b8a565b6103ae565b61017061016b366004610b8a565b6103ea565b005b61011a610180366004610bf0565b6001600160a01b031660009081526001602052604090205490565b610170610427565b6101ab610462565b6040516001600160a01b0390911681526020016100ea565b6100dd610471565b6101706101d9366004610b8a565b610480565b6101066101ec366004610b8a565b6104b9565b6101066101ff366004610b8a565b610552565b61011a610212366004610c12565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61017061024b366004610bf0565b61055f565b60606004805461025f90610c45565b80601f016020809104026020016040519081016040528092919081815260200182805461028b90610c45565b80156102d85780601f106102ad576101008083540402835291602001916102d8565b820191906000526020600020905b8154815290600101906020018083116102bb57829003601f168201915b5050505050905090565b60006102ef3384846105ff565b50600192915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120546000198114610398578281101561038b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b61039885338584036105ff565b6103a385858561072b565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916102ef9185906103e5908690610c96565b6105ff565b336103f3610462565b6001600160a01b0316146104195760405162461bcd60e51b815260040161038290610cae565b61042382826108d5565b5050565b33610430610462565b6001600160a01b0316146104565760405162461bcd60e51b815260040161038290610cae565b610460600061099e565b565b6000546001600160a01b031690565b60606005805461025f90610c45565b33610489610462565b6001600160a01b0316146104af5760405162461bcd60e51b815260040161038290610cae565b61042382826109ee565b3360009081526002602090815260408083206001600160a01b03861684529091528120548281101561053b5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610382565b61054833858584036105ff565b5060019392505050565b60006102ef33848461072b565b33610568610462565b6001600160a01b03161461058e5760405162461bcd60e51b815260040161038290610cae565b6001600160a01b0381166105f35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610382565b6105fc8161099e565b50565b6001600160a01b0383166106615760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610382565b6001600160a01b0382166106c25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610382565b6001600160a01b0380841660009081526002602090815260408083209386168352929052819020829055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061071e90859085908590610ce3565b60405180910390a1505050565b6001600160a01b03831661078f5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610382565b6001600160a01b0382166107f15760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610382565b6001600160a01b038316600090815260016020526040902054818110156108695760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610382565b6001600160a01b038085166000908152600160205260408082208585039055918516815290812080548492906108a0908490610c96565b9091555050604051600080516020610d1f833981519152906108c790869086908690610ce3565b60405180910390a150505050565b6001600160a01b03821661092b5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610382565b806003600082825461093d9190610c96565b90915550506001600160a01b0382166000908152600160205260408120805483929061096a908490610c96565b9091555050604051600080516020610d1f833981519152906109929060009085908590610ce3565b60405180910390a15050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038216610a4e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610382565b6001600160a01b03821660009081526001602052604090205481811015610ac25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610382565b6001600160a01b0383166000908152600160205260408120838303905560038054849290610af1908490610d07565b9091555050604051600080516020610d1f8339815191529061071e9085906000908690610ce3565b600060208083528351808285015260005b81811015610b4657858101830151858201604001528201610b2a565b81811115610b58576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b8557600080fd5b919050565b60008060408385031215610b9d57600080fd5b610ba683610b6e565b946020939093013593505050565b600080600060608486031215610bc957600080fd5b610bd284610b6e565b9250610be060208501610b6e565b9150604084013590509250925092565b600060208284031215610c0257600080fd5b610c0b82610b6e565b9392505050565b60008060408385031215610c2557600080fd5b610c2e83610b6e565b9150610c3c60208401610b6e565b90509250929050565b600181811c90821680610c5957607f821691505b60208210811415610c7a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610ca957610ca9610c80565b500190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600082821015610d1957610d19610c80565b50039056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220bbcb065987199cd3e6c5996e9d875dfa32bc97f4cf651ae70bfc20bd8ca71d4464736f6c634300080b0033",
  "deployedSourceMap": "1588:11726:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4833:192;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:19;;1211:22;1193:41;;1181:2;1166:18;4833:192:7;1053:187:19;3576:99:7;3655:12;;3576:99;;;1391:25:19;;;1379:2;1364:18;3576:99:7;1245:177:19;5618:613:7;;;;;;:::i;:::-;;:::i;3427:84::-;;;3501:2;1902:36:19;;1890:2;1875:18;3427:84:7;1760:184:19;6640:297:7;;;;;;:::i;:::-;;:::i;9471:115::-;;;;;;:::i;:::-;;:::i;:::-;;3738:118;;;;;;:::i;:::-;-1:-1:-1;;;;;3830:18:7;3803:7;3830:18;;;:9;:18;;;;;;;3738:118;1697:103:8;;;:::i;1048:87::-;;;:::i;:::-;;;-1:-1:-1;;;;;2304:32:19;;;2286:51;;2274:2;2259:18;1048:87:8;2140:203:19;2693:95:7;;;:::i;9594:115::-;;;;;;:::i;:::-;;:::i;7440:482::-;;;;;;:::i;:::-;;:::i;4069:198::-;;;;;;:::i;:::-;;:::i;4330:183::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4478:18:7;;;4446:7;4478:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4330:183;1955:238:8;;;;;;:::i;:::-;;:::i;2483:91:7:-;2528:13;2561:5;2554:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:91;:::o;4833:192::-;4934:4;4956:39;256:10;4979:7;4988:6;4956:8;:39::i;:::-;-1:-1:-1;5013:4:7;4833:192;;;;:::o;5618:613::-;-1:-1:-1;;;;;5793:19:7;;5749:4;5793:19;;;:11;:19;;;;;;;;256:10;5793:33;;;;;;;;-1:-1:-1;;5841:37:7;;5837:314;;5941:6;5921:16;:26;;5895:128;;;;-1:-1:-1;;;5895:128:7;;3200:2:19;5895:128:7;;;3182:21:19;3239:2;3219:18;;;3212:30;3278:34;3258:18;;;3251:62;-1:-1:-1;;;3329:18:19;;;3322:38;3377:19;;5895:128:7;;;;;;;;;6067:57;6076:6;256:10;6117:6;6098:16;:25;6067:8;:57::i;:::-;6163:36;6173:6;6181:9;6192:6;6163:9;:36::i;:::-;-1:-1:-1;6219:4:7;;5618:613;-1:-1:-1;;;;5618:613:7:o;6640:297::-;256:10;6755:4;6849:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;6849:34:7;;;;;;;;;;6755:4;;6777:130;;6827:7;;6849:47;;6886:10;;6849:47;:::i;:::-;6777:8;:130::i;9471:115::-;1279:10:8;1268:7;:5;:7::i;:::-;-1:-1:-1;;;;;1268:21:8;;1260:66;;;;-1:-1:-1;;;1260:66:8;;;;;;;:::i;:::-;9556:22:7::1;9562:7;9571:6;9556:5;:22::i;:::-;9471:115:::0;;:::o;1697:103:8:-;1279:10;1268:7;:5;:7::i;:::-;-1:-1:-1;;;;;1268:21:8;;1260:66;;;;-1:-1:-1;;;1260:66:8;;;;;;;:::i;:::-;1762:30:::1;1789:1;1762:18;:30::i;:::-;1697:103::o:0;1048:87::-;1094:7;1121:6;-1:-1:-1;;;;;1121:6:8;;1048:87::o;2693:95:7:-;2740:13;2773:7;2766:14;;;;;:::i;9594:115::-;1279:10:8;1268:7;:5;:7::i;:::-;-1:-1:-1;;;;;1268:21:8;;1260:66;;;;-1:-1:-1;;;1260:66:8;;;;;;;:::i;:::-;9679:22:7::1;9685:7;9694:6;9679:5;:22::i;7440:482::-:0;256:10;7560:4;7609:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;7609:34:7;;;;;;;;;;7676:35;;;;7654:122;;;;-1:-1:-1;;;7654:122:7;;4235:2:19;7654:122:7;;;4217:21:19;4274:2;4254:18;;;4247:30;4313:34;4293:18;;;4286:62;-1:-1:-1;;;4364:18:19;;;4357:35;4409:19;;7654:122:7;4033:401:19;7654:122:7;7812:67;256:10;7835:7;7863:15;7844:16;:34;7812:8;:67::i;:::-;-1:-1:-1;7910:4:7;;7440:482;-1:-1:-1;;;7440:482:7:o;4069:198::-;4173:4;4195:42;256:10;4219:9;4230:6;4195:9;:42::i;1955:238:8:-;1279:10;1268:7;:5;:7::i;:::-;-1:-1:-1;;;;;1268:21:8;;1260:66;;;;-1:-1:-1;;;1260:66:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;2058:22:8;::::1;2036:110;;;::::0;-1:-1:-1;;;2036:110:8;;4641:2:19;2036:110:8::1;::::0;::::1;4623:21:19::0;4680:2;4660:18;;;4653:30;4719:34;4699:18;;;4692:62;-1:-1:-1;;;4770:18:19;;;4763:36;4816:19;;2036:110:8::1;4439:402:19::0;2036:110:8::1;2157:28;2176:8;2157:18;:28::i;:::-;1955:238:::0;:::o;11478:380:7:-;-1:-1:-1;;;;;11614:19:7;;11606:68;;;;-1:-1:-1;;;11606:68:7;;5048:2:19;11606:68:7;;;5030:21:19;5087:2;5067:18;;;5060:30;5126:34;5106:18;;;5099:62;-1:-1:-1;;;5177:18:19;;;5170:34;5221:19;;11606:68:7;4846:400:19;11606:68:7;-1:-1:-1;;;;;11693:21:7;;11685:68;;;;-1:-1:-1;;;11685:68:7;;5453:2:19;11685:68:7;;;5435:21:19;5492:2;5472:18;;;5465:30;5531:34;5511:18;;;5504:62;-1:-1:-1;;;5582:18:19;;;5575:32;5624:19;;11685:68:7;5251:398:19;11685:68:7;-1:-1:-1;;;;;11766:18:7;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;:36;;;11818:32;;;;;11778:5;;11785:7;;11796:6;;11818:32;:::i;:::-;;;;;;;;11478:380;;;:::o;8412:770::-;-1:-1:-1;;;;;8552:20:7;;8544:70;;;;-1:-1:-1;;;8544:70:7;;6236:2:19;8544:70:7;;;6218:21:19;6275:2;6255:18;;;6248:30;6314:34;6294:18;;;6287:62;-1:-1:-1;;;6365:18:19;;;6358:35;6410:19;;8544:70:7;6034:401:19;8544:70:7;-1:-1:-1;;;;;8633:23:7;;8625:71;;;;-1:-1:-1;;;8625:71:7;;6642:2:19;8625:71:7;;;6624:21:19;6681:2;6661:18;;;6654:30;6720:34;6700:18;;;6693:62;-1:-1:-1;;;6771:18:19;;;6764:33;6814:19;;8625:71:7;6440:399:19;8625:71:7;-1:-1:-1;;;;;8793:17:7;;8769:21;8793:17;;;:9;:17;;;;;;8843:23;;;;8821:111;;;;-1:-1:-1;;;8821:111:7;;7046:2:19;8821:111:7;;;7028:21:19;7085:2;7065:18;;;7058:30;7124:34;7104:18;;;7097:62;-1:-1:-1;;;7175:18:19;;;7168:36;7221:19;;8821:111:7;6844:402:19;8821:111:7;-1:-1:-1;;;;;8968:17:7;;;;;;;:9;:17;;;;;;8988:22;;;8968:42;;9032:20;;;;;;;;:30;;9004:6;;8968:17;9032:30;;9004:6;;9032:30;:::i;:::-;;;;-1:-1:-1;;9080:35:7;;-1:-1:-1;;;;;;;;;;;9080:35:7;;;9089:6;;9097:9;;9108:6;;9080:35;:::i;:::-;;;;;;;;8533:649;8412:770;;;:::o;9717:399::-;-1:-1:-1;;;;;9801:21:7;;9793:65;;;;-1:-1:-1;;;9793:65:7;;7453:2:19;9793:65:7;;;7435:21:19;7492:2;7472:18;;;7465:30;7531:33;7511:18;;;7504:61;7582:18;;9793:65:7;7251:355:19;9793:65:7;9949:6;9933:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9966:18:7;;;;;;:9;:18;;;;;:28;;9988:6;;9966:18;:28;;9988:6;;9966:28;:::i;:::-;;;;-1:-1:-1;;10010:37:7;;-1:-1:-1;;;;;;;;;;;10010:37:7;;;10027:1;;10031:7;;10040:6;;10010:37;:::i;:::-;;;;;;;;9471:115;;:::o;2353:191:8:-;2427:16;2446:6;;-1:-1:-1;;;;;2463:17:8;;;-1:-1:-1;;;;;;2463:17:8;;;;;;2496:40;;2446:6;;;;;;;2496:40;;2427:16;2496:40;2416:128;2353:191;:::o;10449:591:7:-;-1:-1:-1;;;;;10533:21:7;;10525:67;;;;-1:-1:-1;;;10525:67:7;;7813:2:19;10525:67:7;;;7795:21:19;7852:2;7832:18;;;7825:30;7891:34;7871:18;;;7864:62;-1:-1:-1;;;7942:18:19;;;7935:31;7983:19;;10525:67:7;7611:397:19;10525:67:7;-1:-1:-1;;;;;10692:18:7;;10667:22;10692:18;;;:9;:18;;;;;;10729:24;;;;10721:71;;;;-1:-1:-1;;;10721:71:7;;8215:2:19;10721:71:7;;;8197:21:19;8254:2;8234:18;;;8227:30;8293:34;8273:18;;;8266:62;-1:-1:-1;;;8344:18:19;;;8337:32;8386:19;;10721:71:7;8013:398:19;10721:71:7;-1:-1:-1;;;;;10828:18:7;;;;;;:9;:18;;;;;10849:23;;;10828:44;;10894:12;:22;;10866:6;;10828:18;10894:22;;10866:6;;10894:22;:::i;:::-;;;;-1:-1:-1;;10934:37:7;;-1:-1:-1;;;;;;;;;;;10934:37:7;;;10943:7;;10960:1;;10964:6;;10934:37;:::i;14:597:19:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:19;574:15;-1:-1:-1;;570:29:19;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:19:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:19;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:19:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:19:o;2348:260::-;2416:6;2424;2477:2;2465:9;2456:7;2452:23;2448:32;2445:52;;;2493:1;2490;2483:12;2445:52;2516:29;2535:9;2516:29;:::i;:::-;2506:39;;2564:38;2598:2;2587:9;2583:18;2564:38;:::i;:::-;2554:48;;2348:260;;;;;:::o;2613:380::-;2692:1;2688:12;;;;2735;;;2756:61;;2810:4;2802:6;2798:17;2788:27;;2756:61;2863:2;2855:6;2852:14;2832:18;2829:38;2826:161;;;2909:10;2904:3;2900:20;2897:1;2890:31;2944:4;2941:1;2934:15;2972:4;2969:1;2962:15;2826:161;;2613:380;;;:::o;3407:127::-;3468:10;3463:3;3459:20;3456:1;3449:31;3499:4;3496:1;3489:15;3523:4;3520:1;3513:15;3539:128;3579:3;3610:1;3606:6;3603:1;3600:13;3597:39;;;3616:18;;:::i;:::-;-1:-1:-1;3652:9:19;;3539:128::o;3672:356::-;3874:2;3856:21;;;3893:18;;;3886:30;3952:34;3947:2;3932:18;;3925:62;4019:2;4004:18;;3672:356::o;5654:375::-;-1:-1:-1;;;;;5912:15:19;;;5894:34;;5964:15;;;;5959:2;5944:18;;5937:43;6011:2;5996:18;;5989:34;;;;5844:2;5829:18;;5654:375::o;8416:125::-;8456:4;8484:1;8481;8478:8;8475:34;;;8489:18;;:::i;:::-;-1:-1:-1;8526:9:19;;8416:125::o",
  "language": "Solidity",
  "natspec": {
    "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "constructor": {
        "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Creates `amount` tokens and assigns them to `account`, increasing the total supply. Emits a {Transfer} event with `from` set to the zero address. Requirements: - `account` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [1588, 13314],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xD0 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x116 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x128 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x15D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x19B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x23D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDD PUSH2 0x250 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xEA SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x106 PUSH2 0x101 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0x106 PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0xBB4 JUMP JUMPDEST PUSH2 0x2F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0x106 PUSH2 0x158 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x3AE JUMP JUMPDEST PUSH2 0x170 PUSH2 0x16B CALLDATASIZE PUSH1 0x4 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x3EA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11A PUSH2 0x180 CALLDATASIZE PUSH1 0x4 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x427 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x462 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xEA JUMP JUMPDEST PUSH2 0xDD PUSH2 0x471 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x1D9 CALLDATASIZE PUSH1 0x4 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x480 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x4B9 JUMP JUMPDEST PUSH2 0x106 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xB8A JUMP JUMPDEST PUSH2 0x552 JUMP JUMPDEST PUSH2 0x11A PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0xC12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x170 PUSH2 0x24B CALLDATASIZE PUSH1 0x4 PUSH2 0xBF0 JUMP JUMPDEST PUSH2 0x55F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xC45 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x28B SWAP1 PUSH2 0xC45 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2D8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2AD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2D8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2BB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF CALLER DUP5 DUP5 PUSH2 0x5FF JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x398 JUMPI DUP3 DUP2 LT ISZERO PUSH2 0x38B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732061 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x6C6C6F77616E6365 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x398 DUP6 CALLER DUP6 DUP5 SUB PUSH2 0x5FF JUMP JUMPDEST PUSH2 0x3A3 DUP6 DUP6 DUP6 PUSH2 0x72B JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x2EF SWAP2 DUP6 SWAP1 PUSH2 0x3E5 SWAP1 DUP7 SWAP1 PUSH2 0xC96 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST CALLER PUSH2 0x3F3 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x419 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x382 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x423 DUP3 DUP3 PUSH2 0x8D5 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH2 0x430 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x456 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x382 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x460 PUSH1 0x0 PUSH2 0x99E JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x25F SWAP1 PUSH2 0xC45 JUMP JUMPDEST CALLER PUSH2 0x489 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x382 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH2 0x423 DUP3 DUP3 PUSH2 0x9EE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x53B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x382 JUMP JUMPDEST PUSH2 0x548 CALLER DUP6 DUP6 DUP5 SUB PUSH2 0x5FF JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EF CALLER DUP5 DUP5 PUSH2 0x72B JUMP JUMPDEST CALLER PUSH2 0x568 PUSH2 0x462 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x58E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x382 SWAP1 PUSH2 0xCAE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x382 JUMP JUMPDEST PUSH2 0x5FC DUP2 PUSH2 0x99E JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x661 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6C2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE DUP2 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP1 PUSH2 0x71E SWAP1 DUP6 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x78F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x7F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x8A0 SWAP1 DUP5 SWAP1 PUSH2 0xC96 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD1F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x8C7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 DUP7 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x92B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x382 JUMP JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0xC96 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x96A SWAP1 DUP5 SWAP1 PUSH2 0xC96 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD1F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x992 SWAP1 PUSH1 0x0 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xA4E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xAC2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x3 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xAF1 SWAP1 DUP5 SWAP1 PUSH2 0xD07 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xD1F DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x71E SWAP1 DUP6 SWAP1 PUSH1 0x0 SWAP1 DUP7 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB46 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB2A JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB58 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBA6 DUP4 PUSH2 0xB6E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBD2 DUP5 PUSH2 0xB6E JUMP JUMPDEST SWAP3 POP PUSH2 0xBE0 PUSH1 0x20 DUP6 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC0B DUP3 PUSH2 0xB6E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC25 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC2E DUP4 PUSH2 0xB6E JUMP JUMPDEST SWAP2 POP PUSH2 0xC3C PUSH1 0x20 DUP5 ADD PUSH2 0xB6E JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC59 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC7A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCA9 JUMPI PUSH2 0xCA9 PUSH2 0xC80 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xD19 JUMPI PUSH2 0xD19 PUSH2 0xC80 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xCB MOD MSIZE DUP8 NOT SWAP13 0xD3 0xE6 0xC5 SWAP10 PUSH15 0x9D875DFA32BC97F4CF651AE70BFC20 0xBD DUP13 0xA7 SAR DIFFICULTY PUSH5 0x736F6C6343 STOP ADDMOD SIGNEXTEND STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [1588, 13314],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [1588, 13314],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD0"
    },
    "25": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "38": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD5"
    },
    "42": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95EA7B3"
    },
    "49": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF3"
    },
    "53": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x18160DDD"
    },
    "60": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x116"
    },
    "64": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x23B872DD"
    },
    "71": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x128"
    },
    "75": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x313CE567"
    },
    "82": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13B"
    },
    "86": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x39509351"
    },
    "93": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x14A"
    },
    "97": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "99": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x40C10F19"
    },
    "104": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "105": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15D"
    },
    "108": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "109": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "110": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "115": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "116": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x172"
    },
    "119": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "120": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "126": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "127": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x19B"
    },
    "130": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "131": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "137": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "138": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A3"
    },
    "141": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "142": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "148": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "149": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1C3"
    },
    "152": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "153": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "154": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0x9DC29FAC"
    },
    "159": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "160": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1CB"
    },
    "163": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "164": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "165": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA457C2D7"
    },
    "170": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "171": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1DE"
    },
    "174": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "176": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0xA9059CBB"
    },
    "181": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "182": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F1"
    },
    "185": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "187": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDD62ED3E"
    },
    "192": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "193": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x204"
    },
    "196": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "198": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "203": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "EQ",
      "path": "7"
    },
    "204": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23D"
    },
    "207": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPI",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "JUMPDEST",
      "path": "7"
    },
    "209": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "211": {
      "fn": null,
      "offset": [1588, 13314],
      "op": "DUP1",
      "path": "7"
    },
    "212": {
      "first_revert": true,
      "fn": null,
      "offset": [1588, 13314],
      "op": "REVERT",
      "path": "7"
    },
    "213": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "JUMPDEST",
      "path": "7"
    },
    "214": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDD"
    },
    "217": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "PUSH2",
      "path": "7",
      "value": "0x250"
    },
    "220": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [2483, 2574],
      "op": "JUMP",
      "path": "7"
    },
    "221": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "JUMPDEST",
      "path": "7"
    },
    "222": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "224": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "MLOAD",
      "path": "7"
    },
    "225": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA"
    },
    "228": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "SWAP2",
      "path": "7"
    },
    "229": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "SWAP1",
      "path": "7"
    },
    "230": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB19"
    },
    "233": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [2483, 2574],
      "op": "JUMP",
      "path": "7"
    },
    "234": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "JUMPDEST",
      "path": "7"
    },
    "235": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "237": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "MLOAD",
      "path": "7"
    },
    "238": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "DUP1",
      "path": "7"
    },
    "239": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "SWAP2",
      "path": "7"
    },
    "240": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "SUB",
      "path": "7"
    },
    "241": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "SWAP1",
      "path": "7"
    },
    "242": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "RETURN",
      "path": "7"
    },
    "243": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "JUMPDEST",
      "path": "7"
    },
    "244": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "PUSH2",
      "path": "7",
      "value": "0x106"
    },
    "247": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "PUSH2",
      "path": "7",
      "value": "0x101"
    },
    "250": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "251": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "253": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8A"
    },
    "256": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [4833, 5025],
      "op": "JUMP",
      "path": "7"
    },
    "257": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "JUMPDEST",
      "path": "7"
    },
    "258": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2E2"
    },
    "261": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [4833, 5025],
      "op": "JUMP",
      "path": "7"
    },
    "262": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "JUMPDEST",
      "path": "7"
    },
    "263": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "265": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "MLOAD",
      "path": "7"
    },
    "266": {
      "op": "SWAP1"
    },
    "267": {
      "op": "ISZERO"
    },
    "268": {
      "op": "ISZERO"
    },
    "269": {
      "op": "DUP2"
    },
    "270": {
      "op": "MSTORE"
    },
    "271": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "273": {
      "op": "ADD"
    },
    "274": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA"
    },
    "277": {
      "op": "JUMP"
    },
    "278": {
      "fn": "ERC20.totalSupply",
      "offset": [3576, 3675],
      "op": "JUMPDEST",
      "path": "7"
    },
    "279": {
      "fn": "ERC20.totalSupply",
      "offset": [3655, 3667],
      "op": "PUSH1",
      "path": "7",
      "statement": 0,
      "value": "0x3"
    },
    "281": {
      "fn": "ERC20.totalSupply",
      "offset": [3655, 3667],
      "op": "SLOAD",
      "path": "7"
    },
    "282": {
      "fn": "ERC20.totalSupply",
      "offset": [3576, 3675],
      "op": "JUMPDEST",
      "path": "7"
    },
    "283": {
      "fn": "ERC20.totalSupply",
      "offset": [3576, 3675],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "285": {
      "fn": "ERC20.totalSupply",
      "offset": [3576, 3675],
      "op": "MLOAD",
      "path": "7"
    },
    "286": {
      "op": "SWAP1"
    },
    "287": {
      "op": "DUP2"
    },
    "288": {
      "op": "MSTORE"
    },
    "289": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "291": {
      "op": "ADD"
    },
    "292": {
      "fn": "ERC20.totalSupply",
      "offset": [3576, 3675],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA"
    },
    "295": {
      "op": "JUMP"
    },
    "296": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "JUMPDEST",
      "path": "7"
    },
    "297": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "PUSH2",
      "path": "7",
      "value": "0x106"
    },
    "300": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "PUSH2",
      "path": "7",
      "value": "0x136"
    },
    "303": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "304": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "306": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBB4"
    },
    "309": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [5618, 6231],
      "op": "JUMP",
      "path": "7"
    },
    "310": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "JUMPDEST",
      "path": "7"
    },
    "311": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2F8"
    },
    "314": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [5618, 6231],
      "op": "JUMP",
      "path": "7"
    },
    "315": {
      "fn": "ERC20.decimals",
      "offset": [3427, 3511],
      "op": "JUMPDEST",
      "path": "7"
    },
    "316": {
      "fn": "ERC20.decimals",
      "offset": [3427, 3511],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "318": {
      "fn": "ERC20.decimals",
      "offset": [3427, 3511],
      "op": "MLOAD",
      "path": "7"
    },
    "319": {
      "fn": "ERC20.decimals",
      "offset": [3501, 3503],
      "op": "PUSH1",
      "path": "7",
      "statement": 1,
      "value": "0x12"
    },
    "321": {
      "op": "DUP2"
    },
    "322": {
      "op": "MSTORE"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "325": {
      "op": "ADD"
    },
    "326": {
      "fn": "ERC20.decimals",
      "offset": [3427, 3511],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA"
    },
    "329": {
      "op": "JUMP"
    },
    "330": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6640, 6937],
      "op": "JUMPDEST",
      "path": "7"
    },
    "331": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6640, 6937],
      "op": "PUSH2",
      "path": "7",
      "value": "0x106"
    },
    "334": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6640, 6937],
      "op": "PUSH2",
      "path": "7",
      "value": "0x158"
    },
    "337": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6640, 6937],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "338": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6640, 6937],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "340": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6640, 6937],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8A"
    },
    "343": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [6640, 6937],
      "op": "JUMP",
      "path": "7"
    },
    "344": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6640, 6937],
      "op": "JUMPDEST",
      "path": "7"
    },
    "345": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6640, 6937],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AE"
    },
    "348": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [6640, 6937],
      "op": "JUMP",
      "path": "7"
    },
    "349": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "JUMPDEST",
      "path": "7"
    },
    "350": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "PUSH2",
      "path": "7",
      "value": "0x170"
    },
    "353": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16B"
    },
    "356": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "357": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "359": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8A"
    },
    "362": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [9471, 9586],
      "op": "JUMP",
      "path": "7"
    },
    "363": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "JUMPDEST",
      "path": "7"
    },
    "364": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3EA"
    },
    "367": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [9471, 9586],
      "op": "JUMP",
      "path": "7"
    },
    "368": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "JUMPDEST",
      "path": "7"
    },
    "369": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "STOP",
      "path": "7"
    },
    "370": {
      "fn": "ERC20.balanceOf",
      "offset": [3738, 3856],
      "op": "JUMPDEST",
      "path": "7"
    },
    "371": {
      "fn": "ERC20.balanceOf",
      "offset": [3738, 3856],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11A"
    },
    "374": {
      "fn": "ERC20.balanceOf",
      "offset": [3738, 3856],
      "op": "PUSH2",
      "path": "7",
      "value": "0x180"
    },
    "377": {
      "fn": "ERC20.balanceOf",
      "offset": [3738, 3856],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "378": {
      "fn": "ERC20.balanceOf",
      "offset": [3738, 3856],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "380": {
      "fn": "ERC20.balanceOf",
      "offset": [3738, 3856],
      "op": "PUSH2",
      "path": "7",
      "value": "0xBF0"
    },
    "383": {
      "fn": "ERC20.balanceOf",
      "jump": "i",
      "offset": [3738, 3856],
      "op": "JUMP",
      "path": "7"
    },
    "384": {
      "fn": "ERC20.balanceOf",
      "offset": [3738, 3856],
      "op": "JUMPDEST",
      "path": "7"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "391": {
      "op": "SHL"
    },
    "392": {
      "op": "SUB"
    },
    "393": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "AND",
      "path": "7",
      "statement": 2
    },
    "394": {
      "fn": "ERC20.balanceOf",
      "offset": [3803, 3810],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "396": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "SWAP1",
      "path": "7"
    },
    "397": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "DUP2",
      "path": "7"
    },
    "398": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "MSTORE",
      "path": "7"
    },
    "399": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3839],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "401": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "403": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "MSTORE",
      "path": "7"
    },
    "404": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "406": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "SWAP1",
      "path": "7"
    },
    "407": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "KECCAK256",
      "path": "7"
    },
    "408": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "SLOAD",
      "path": "7"
    },
    "409": {
      "fn": "ERC20.balanceOf",
      "offset": [3830, 3848],
      "op": "SWAP1",
      "path": "7"
    },
    "410": {
      "fn": "ERC20.balanceOf",
      "offset": [3738, 3856],
      "op": "JUMP",
      "path": "7"
    },
    "411": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1697, 1800],
      "op": "JUMPDEST",
      "path": "8"
    },
    "412": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1697, 1800],
      "op": "PUSH2",
      "path": "8",
      "value": "0x170"
    },
    "415": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1697, 1800],
      "op": "PUSH2",
      "path": "8",
      "value": "0x427"
    },
    "418": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1697, 1800],
      "op": "JUMP",
      "path": "8"
    },
    "419": {
      "fn": "Ownable.owner",
      "offset": [1048, 1135],
      "op": "JUMPDEST",
      "path": "8"
    },
    "420": {
      "fn": "Ownable.owner",
      "offset": [1048, 1135],
      "op": "PUSH2",
      "path": "8",
      "value": "0x1AB"
    },
    "423": {
      "fn": "Ownable.owner",
      "offset": [1048, 1135],
      "op": "PUSH2",
      "path": "8",
      "value": "0x462"
    },
    "426": {
      "fn": "Ownable.owner",
      "jump": "i",
      "offset": [1048, 1135],
      "op": "JUMP",
      "path": "8"
    },
    "427": {
      "fn": "Ownable.owner",
      "offset": [1048, 1135],
      "op": "JUMPDEST",
      "path": "8"
    },
    "428": {
      "fn": "Ownable.owner",
      "offset": [1048, 1135],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "430": {
      "fn": "Ownable.owner",
      "offset": [1048, 1135],
      "op": "MLOAD",
      "path": "8"
    },
    "431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "435": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "437": {
      "op": "SHL"
    },
    "438": {
      "op": "SUB"
    },
    "439": {
      "op": "SWAP1"
    },
    "440": {
      "op": "SWAP2"
    },
    "441": {
      "op": "AND"
    },
    "442": {
      "op": "DUP2"
    },
    "443": {
      "op": "MSTORE"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "446": {
      "op": "ADD"
    },
    "447": {
      "fn": "Ownable.owner",
      "offset": [1048, 1135],
      "op": "PUSH2",
      "path": "8",
      "value": "0xEA"
    },
    "450": {
      "op": "JUMP"
    },
    "451": {
      "fn": "ERC20.symbol",
      "offset": [2693, 2788],
      "op": "JUMPDEST",
      "path": "7"
    },
    "452": {
      "fn": "ERC20.symbol",
      "offset": [2693, 2788],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDD"
    },
    "455": {
      "fn": "ERC20.symbol",
      "offset": [2693, 2788],
      "op": "PUSH2",
      "path": "7",
      "value": "0x471"
    },
    "458": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [2693, 2788],
      "op": "JUMP",
      "path": "7"
    },
    "459": {
      "fn": "ERC20.burn",
      "offset": [9594, 9709],
      "op": "JUMPDEST",
      "path": "7"
    },
    "460": {
      "fn": "ERC20.burn",
      "offset": [9594, 9709],
      "op": "PUSH2",
      "path": "7",
      "value": "0x170"
    },
    "463": {
      "fn": "ERC20.burn",
      "offset": [9594, 9709],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1D9"
    },
    "466": {
      "fn": "ERC20.burn",
      "offset": [9594, 9709],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "467": {
      "fn": "ERC20.burn",
      "offset": [9594, 9709],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "469": {
      "fn": "ERC20.burn",
      "offset": [9594, 9709],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8A"
    },
    "472": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [9594, 9709],
      "op": "JUMP",
      "path": "7"
    },
    "473": {
      "fn": "ERC20.burn",
      "offset": [9594, 9709],
      "op": "JUMPDEST",
      "path": "7"
    },
    "474": {
      "fn": "ERC20.burn",
      "offset": [9594, 9709],
      "op": "PUSH2",
      "path": "7",
      "value": "0x480"
    },
    "477": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [9594, 9709],
      "op": "JUMP",
      "path": "7"
    },
    "478": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "JUMPDEST",
      "path": "7"
    },
    "479": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "PUSH2",
      "path": "7",
      "value": "0x106"
    },
    "482": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1EC"
    },
    "485": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "486": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "488": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8A"
    },
    "491": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [7440, 7922],
      "op": "JUMP",
      "path": "7"
    },
    "492": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "JUMPDEST",
      "path": "7"
    },
    "493": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4B9"
    },
    "496": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [7440, 7922],
      "op": "JUMP",
      "path": "7"
    },
    "497": {
      "fn": "ERC20.transfer",
      "offset": [4069, 4267],
      "op": "JUMPDEST",
      "path": "7"
    },
    "498": {
      "fn": "ERC20.transfer",
      "offset": [4069, 4267],
      "op": "PUSH2",
      "path": "7",
      "value": "0x106"
    },
    "501": {
      "fn": "ERC20.transfer",
      "offset": [4069, 4267],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1FF"
    },
    "504": {
      "fn": "ERC20.transfer",
      "offset": [4069, 4267],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "505": {
      "fn": "ERC20.transfer",
      "offset": [4069, 4267],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "507": {
      "fn": "ERC20.transfer",
      "offset": [4069, 4267],
      "op": "PUSH2",
      "path": "7",
      "value": "0xB8A"
    },
    "510": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [4069, 4267],
      "op": "JUMP",
      "path": "7"
    },
    "511": {
      "fn": "ERC20.transfer",
      "offset": [4069, 4267],
      "op": "JUMPDEST",
      "path": "7"
    },
    "512": {
      "fn": "ERC20.transfer",
      "offset": [4069, 4267],
      "op": "PUSH2",
      "path": "7",
      "value": "0x552"
    },
    "515": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [4069, 4267],
      "op": "JUMP",
      "path": "7"
    },
    "516": {
      "fn": "ERC20.allowance",
      "offset": [4330, 4513],
      "op": "JUMPDEST",
      "path": "7"
    },
    "517": {
      "fn": "ERC20.allowance",
      "offset": [4330, 4513],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11A"
    },
    "520": {
      "fn": "ERC20.allowance",
      "offset": [4330, 4513],
      "op": "PUSH2",
      "path": "7",
      "value": "0x212"
    },
    "523": {
      "fn": "ERC20.allowance",
      "offset": [4330, 4513],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "524": {
      "fn": "ERC20.allowance",
      "offset": [4330, 4513],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "526": {
      "fn": "ERC20.allowance",
      "offset": [4330, 4513],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC12"
    },
    "529": {
      "fn": "ERC20.allowance",
      "jump": "i",
      "offset": [4330, 4513],
      "op": "JUMP",
      "path": "7"
    },
    "530": {
      "fn": "ERC20.allowance",
      "offset": [4330, 4513],
      "op": "JUMPDEST",
      "path": "7"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "535": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "537": {
      "op": "SHL"
    },
    "538": {
      "op": "SUB"
    },
    "539": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "SWAP2",
      "path": "7",
      "statement": 3
    },
    "540": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "DUP3",
      "path": "7"
    },
    "541": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "AND",
      "path": "7"
    },
    "542": {
      "fn": "ERC20.allowance",
      "offset": [4446, 4453],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "544": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "SWAP1",
      "path": "7"
    },
    "545": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "DUP2",
      "path": "7"
    },
    "546": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "MSTORE",
      "path": "7"
    },
    "547": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4489],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "549": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "551": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "SWAP1",
      "path": "7"
    },
    "552": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "DUP2",
      "path": "7"
    },
    "553": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "MSTORE",
      "path": "7"
    },
    "554": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "556": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "DUP1",
      "path": "7"
    },
    "557": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "DUP4",
      "path": "7"
    },
    "558": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4496],
      "op": "KECCAK256",
      "path": "7"
    },
    "559": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "SWAP4",
      "path": "7"
    },
    "560": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "SWAP1",
      "path": "7"
    },
    "561": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "SWAP5",
      "path": "7"
    },
    "562": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "AND",
      "path": "7"
    },
    "563": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "DUP3",
      "path": "7"
    },
    "564": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "MSTORE",
      "path": "7"
    },
    "565": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "SWAP2",
      "path": "7"
    },
    "566": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "SWAP1",
      "path": "7"
    },
    "567": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "SWAP2",
      "path": "7"
    },
    "568": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "MSTORE",
      "path": "7"
    },
    "569": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "KECCAK256",
      "path": "7"
    },
    "570": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "SLOAD",
      "path": "7"
    },
    "571": {
      "fn": "ERC20.allowance",
      "offset": [4478, 4505],
      "op": "SWAP1",
      "path": "7"
    },
    "572": {
      "fn": "ERC20.allowance",
      "offset": [4330, 4513],
      "op": "JUMP",
      "path": "7"
    },
    "573": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "JUMPDEST",
      "path": "8"
    },
    "574": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "PUSH2",
      "path": "8",
      "value": "0x170"
    },
    "577": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "PUSH2",
      "path": "8",
      "value": "0x24B"
    },
    "580": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "CALLDATASIZE",
      "path": "8"
    },
    "581": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "583": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "PUSH2",
      "path": "8",
      "value": "0xBF0"
    },
    "586": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1955, 2193],
      "op": "JUMP",
      "path": "8"
    },
    "587": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "JUMPDEST",
      "path": "8"
    },
    "588": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "PUSH2",
      "path": "8",
      "value": "0x55F"
    },
    "591": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1955, 2193],
      "op": "JUMP",
      "path": "8"
    },
    "592": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "JUMPDEST",
      "path": "7"
    },
    "593": {
      "fn": "ERC20.name",
      "offset": [2528, 2541],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "595": {
      "fn": "ERC20.name",
      "offset": [2561, 2566],
      "op": "PUSH1",
      "path": "7",
      "statement": 4,
      "value": "0x4"
    },
    "597": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP1",
      "path": "7"
    },
    "598": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SLOAD",
      "path": "7"
    },
    "599": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25F"
    },
    "602": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "603": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC45"
    },
    "606": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [2554, 2566],
      "op": "JUMP",
      "path": "7"
    },
    "607": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "JUMPDEST",
      "path": "7"
    },
    "608": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP1",
      "path": "7"
    },
    "609": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "611": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ADD",
      "path": "7"
    },
    "612": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "614": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP1",
      "path": "7"
    },
    "615": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP2",
      "path": "7"
    },
    "616": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DIV",
      "path": "7"
    },
    "617": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "MUL",
      "path": "7"
    },
    "618": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "620": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ADD",
      "path": "7"
    },
    "621": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "623": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "MLOAD",
      "path": "7"
    },
    "624": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "625": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP2",
      "path": "7"
    },
    "626": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ADD",
      "path": "7"
    },
    "627": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "629": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "MSTORE",
      "path": "7"
    },
    "630": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP1",
      "path": "7"
    },
    "631": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP3",
      "path": "7"
    },
    "632": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP2",
      "path": "7"
    },
    "633": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "634": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP2",
      "path": "7"
    },
    "635": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP2",
      "path": "7"
    },
    "636": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "MSTORE",
      "path": "7"
    },
    "637": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "639": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ADD",
      "path": "7"
    },
    "640": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP3",
      "path": "7"
    },
    "641": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP1",
      "path": "7"
    },
    "642": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SLOAD",
      "path": "7"
    },
    "643": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28B"
    },
    "646": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "647": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC45"
    },
    "650": {
      "fn": "ERC20.name",
      "jump": "i",
      "offset": [2554, 2566],
      "op": "JUMP",
      "path": "7"
    },
    "651": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "JUMPDEST",
      "path": "7"
    },
    "652": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP1",
      "path": "7"
    },
    "653": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ISZERO",
      "path": "7"
    },
    "654": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D8"
    },
    "657": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "JUMPI",
      "path": "7"
    },
    "658": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP1",
      "path": "7"
    },
    "659": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "661": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "LT",
      "path": "7"
    },
    "662": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AD"
    },
    "665": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "JUMPI",
      "path": "7"
    },
    "666": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "669": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP1",
      "path": "7"
    },
    "670": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP4",
      "path": "7"
    },
    "671": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SLOAD",
      "path": "7"
    },
    "672": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DIV",
      "path": "7"
    },
    "673": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "MUL",
      "path": "7"
    },
    "674": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP4",
      "path": "7"
    },
    "675": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "MSTORE",
      "path": "7"
    },
    "676": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP2",
      "path": "7"
    },
    "677": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "679": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ADD",
      "path": "7"
    },
    "680": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP2",
      "path": "7"
    },
    "681": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2D8"
    },
    "684": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "JUMP",
      "path": "7"
    },
    "685": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "JUMPDEST",
      "path": "7"
    },
    "686": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP3",
      "path": "7"
    },
    "687": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ADD",
      "path": "7"
    },
    "688": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP2",
      "path": "7"
    },
    "689": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "690": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "692": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "MSTORE",
      "path": "7"
    },
    "693": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "695": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "697": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "KECCAK256",
      "path": "7"
    },
    "698": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "699": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "JUMPDEST",
      "path": "7"
    },
    "700": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP2",
      "path": "7"
    },
    "701": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SLOAD",
      "path": "7"
    },
    "702": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP2",
      "path": "7"
    },
    "703": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "MSTORE",
      "path": "7"
    },
    "704": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "705": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "707": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ADD",
      "path": "7"
    },
    "708": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "709": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "711": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ADD",
      "path": "7"
    },
    "712": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP1",
      "path": "7"
    },
    "713": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP4",
      "path": "7"
    },
    "714": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "GT",
      "path": "7"
    },
    "715": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2BB"
    },
    "718": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "JUMPI",
      "path": "7"
    },
    "719": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP3",
      "path": "7"
    },
    "720": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "721": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SUB",
      "path": "7"
    },
    "722": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "724": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "AND",
      "path": "7"
    },
    "725": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "DUP3",
      "path": "7"
    },
    "726": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "ADD",
      "path": "7"
    },
    "727": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP2",
      "path": "7"
    },
    "728": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "JUMPDEST",
      "path": "7"
    },
    "729": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "POP",
      "path": "7"
    },
    "730": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "POP",
      "path": "7"
    },
    "731": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "POP",
      "path": "7"
    },
    "732": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "POP",
      "path": "7"
    },
    "733": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "POP",
      "path": "7"
    },
    "734": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "SWAP1",
      "path": "7"
    },
    "735": {
      "fn": "ERC20.name",
      "offset": [2554, 2566],
      "op": "POP",
      "path": "7"
    },
    "736": {
      "fn": "ERC20.name",
      "offset": [2483, 2574],
      "op": "SWAP1",
      "path": "7"
    },
    "737": {
      "fn": "ERC20.name",
      "jump": "o",
      "offset": [2483, 2574],
      "op": "JUMP",
      "path": "7"
    },
    "738": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "JUMPDEST",
      "path": "7"
    },
    "739": {
      "fn": "ERC20.approve",
      "offset": [4934, 4938],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "741": {
      "fn": "ERC20.approve",
      "offset": [4956, 4995],
      "op": "PUSH2",
      "path": "7",
      "statement": 5,
      "value": "0x2EF"
    },
    "744": {
      "fn": "Context._msgSender",
      "offset": [256, 266],
      "op": "CALLER",
      "path": "7",
      "statement": 6
    },
    "745": {
      "fn": "ERC20.approve",
      "offset": [4979, 4986],
      "op": "DUP5",
      "path": "7"
    },
    "746": {
      "fn": "ERC20.approve",
      "offset": [4988, 4994],
      "op": "DUP5",
      "path": "7"
    },
    "747": {
      "fn": "ERC20.approve",
      "offset": [4956, 4964],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FF"
    },
    "750": {
      "fn": "ERC20.approve",
      "jump": "i",
      "offset": [4956, 4995],
      "op": "JUMP",
      "path": "7"
    },
    "751": {
      "fn": "ERC20.approve",
      "offset": [4956, 4995],
      "op": "JUMPDEST",
      "path": "7"
    },
    "752": {
      "op": "POP"
    },
    "753": {
      "fn": "ERC20.approve",
      "offset": [5013, 5017],
      "op": "PUSH1",
      "path": "7",
      "statement": 7,
      "value": "0x1"
    },
    "755": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "SWAP3",
      "path": "7"
    },
    "756": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "SWAP2",
      "path": "7"
    },
    "757": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "POP",
      "path": "7"
    },
    "758": {
      "fn": "ERC20.approve",
      "offset": [4833, 5025],
      "op": "POP",
      "path": "7"
    },
    "759": {
      "fn": "ERC20.approve",
      "jump": "o",
      "offset": [4833, 5025],
      "op": "JUMP",
      "path": "7"
    },
    "760": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "JUMPDEST",
      "path": "7"
    },
    "761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "765": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "767": {
      "op": "SHL"
    },
    "768": {
      "op": "SUB"
    },
    "769": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "DUP4",
      "path": "7"
    },
    "770": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "AND",
      "path": "7"
    },
    "771": {
      "fn": "ERC20.transferFrom",
      "offset": [5749, 5753],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "773": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "SWAP1",
      "path": "7"
    },
    "774": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "DUP2",
      "path": "7"
    },
    "775": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "MSTORE",
      "path": "7"
    },
    "776": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5804],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "778": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "780": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "SWAP1",
      "path": "7"
    },
    "781": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "DUP2",
      "path": "7"
    },
    "782": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "MSTORE",
      "path": "7"
    },
    "783": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "785": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "DUP1",
      "path": "7"
    },
    "786": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "DUP4",
      "path": "7"
    },
    "787": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5812],
      "op": "KECCAK256",
      "path": "7"
    },
    "788": {
      "fn": "Context._msgSender",
      "offset": [256, 266],
      "op": "CALLER",
      "path": "7"
    },
    "789": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5826],
      "op": "DUP5",
      "path": "7"
    },
    "790": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5826],
      "op": "MSTORE",
      "path": "7"
    },
    "791": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5826],
      "op": "SWAP1",
      "path": "7"
    },
    "792": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5826],
      "op": "SWAP2",
      "path": "7"
    },
    "793": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5826],
      "op": "MSTORE",
      "path": "7"
    },
    "794": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5826],
      "op": "DUP2",
      "path": "7"
    },
    "795": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5826],
      "op": "KECCAK256",
      "path": "7"
    },
    "796": {
      "fn": "ERC20.transferFrom",
      "offset": [5793, 5826],
      "op": "SLOAD",
      "path": "7"
    },
    "797": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "799": {
      "op": "NOT"
    },
    "800": {
      "fn": "ERC20.transferFrom",
      "offset": [5841, 5878],
      "op": "DUP2",
      "path": "7"
    },
    "801": {
      "branch": 45,
      "fn": "ERC20.transferFrom",
      "offset": [5841, 5878],
      "op": "EQ",
      "path": "7"
    },
    "802": {
      "fn": "ERC20.transferFrom",
      "offset": [5837, 6151],
      "op": "PUSH2",
      "path": "7",
      "value": "0x398"
    },
    "805": {
      "branch": 45,
      "fn": "ERC20.transferFrom",
      "offset": [5837, 6151],
      "op": "JUMPI",
      "path": "7"
    },
    "806": {
      "fn": "ERC20.transferFrom",
      "offset": [5941, 5947],
      "op": "DUP3",
      "path": "7",
      "statement": 8
    },
    "807": {
      "fn": "ERC20.transferFrom",
      "offset": [5921, 5937],
      "op": "DUP2",
      "path": "7"
    },
    "808": {
      "fn": "ERC20.transferFrom",
      "offset": [5921, 5947],
      "op": "LT",
      "path": "7"
    },
    "809": {
      "branch": 46,
      "fn": "ERC20.transferFrom",
      "offset": [5921, 5947],
      "op": "ISZERO",
      "path": "7"
    },
    "810": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "PUSH2",
      "path": "7",
      "value": "0x38B"
    },
    "813": {
      "branch": 46,
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "JUMPI",
      "path": "7"
    },
    "814": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "816": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "MLOAD",
      "path": "7"
    },
    "817": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "821": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "823": {
      "op": "SHL"
    },
    "824": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "DUP2",
      "path": "7"
    },
    "825": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "MSTORE",
      "path": "7"
    },
    "826": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "828": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "830": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "DUP3",
      "path": "7"
    },
    "831": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "ADD",
      "path": "7"
    },
    "832": {
      "op": "MSTORE"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "835": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "837": {
      "op": "DUP3"
    },
    "838": {
      "op": "ADD"
    },
    "839": {
      "op": "MSTORE"
    },
    "840": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732061"
    },
    "873": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "875": {
      "op": "DUP3"
    },
    "876": {
      "op": "ADD"
    },
    "877": {
      "op": "MSTORE"
    },
    "878": {
      "op": "PUSH8",
      "value": "0x6C6C6F77616E6365"
    },
    "887": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "889": {
      "op": "SHL"
    },
    "890": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "892": {
      "op": "DUP3"
    },
    "893": {
      "op": "ADD"
    },
    "894": {
      "op": "MSTORE"
    },
    "895": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "897": {
      "op": "ADD"
    },
    "898": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "JUMPDEST",
      "path": "7"
    },
    "899": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "901": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "MLOAD",
      "path": "7"
    },
    "902": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "DUP1",
      "path": "7"
    },
    "903": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "SWAP2",
      "path": "7"
    },
    "904": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "SUB",
      "path": "7"
    },
    "905": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "SWAP1",
      "path": "7"
    },
    "906": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "907": {
      "fn": "ERC20.transferFrom",
      "offset": [5895, 6023],
      "op": "JUMPDEST",
      "path": "7"
    },
    "908": {
      "fn": "ERC20.transferFrom",
      "offset": [6067, 6124],
      "op": "PUSH2",
      "path": "7",
      "statement": 9,
      "value": "0x398"
    },
    "911": {
      "fn": "ERC20.transferFrom",
      "offset": [6076, 6082],
      "op": "DUP6",
      "path": "7"
    },
    "912": {
      "fn": "Context._msgSender",
      "offset": [256, 266],
      "op": "CALLER",
      "path": "7"
    },
    "913": {
      "fn": "ERC20.transferFrom",
      "offset": [6117, 6123],
      "op": "DUP6",
      "path": "7"
    },
    "914": {
      "fn": "ERC20.transferFrom",
      "offset": [6098, 6114],
      "op": "DUP5",
      "path": "7"
    },
    "915": {
      "fn": "ERC20.transferFrom",
      "offset": [6098, 6123],
      "op": "SUB",
      "path": "7"
    },
    "916": {
      "fn": "ERC20.transferFrom",
      "offset": [6067, 6075],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FF"
    },
    "919": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [6067, 6124],
      "op": "JUMP",
      "path": "7"
    },
    "920": {
      "fn": "ERC20.transferFrom",
      "offset": [6067, 6124],
      "op": "JUMPDEST",
      "path": "7"
    },
    "921": {
      "fn": "ERC20.transferFrom",
      "offset": [6163, 6199],
      "op": "PUSH2",
      "path": "7",
      "statement": 10,
      "value": "0x3A3"
    },
    "924": {
      "fn": "ERC20.transferFrom",
      "offset": [6173, 6179],
      "op": "DUP6",
      "path": "7"
    },
    "925": {
      "fn": "ERC20.transferFrom",
      "offset": [6181, 6190],
      "op": "DUP6",
      "path": "7"
    },
    "926": {
      "fn": "ERC20.transferFrom",
      "offset": [6192, 6198],
      "op": "DUP6",
      "path": "7"
    },
    "927": {
      "fn": "ERC20.transferFrom",
      "offset": [6163, 6172],
      "op": "PUSH2",
      "path": "7",
      "value": "0x72B"
    },
    "930": {
      "fn": "ERC20.transferFrom",
      "jump": "i",
      "offset": [6163, 6199],
      "op": "JUMP",
      "path": "7"
    },
    "931": {
      "fn": "ERC20.transferFrom",
      "offset": [6163, 6199],
      "op": "JUMPDEST",
      "path": "7"
    },
    "932": {
      "op": "POP"
    },
    "933": {
      "fn": "ERC20.transferFrom",
      "offset": [6219, 6223],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x1"
    },
    "935": {
      "fn": "ERC20.transferFrom",
      "offset": [6219, 6223],
      "op": "SWAP5",
      "path": "7"
    },
    "936": {
      "fn": "ERC20.transferFrom",
      "offset": [5618, 6231],
      "op": "SWAP4",
      "path": "7"
    },
    "937": {
      "op": "POP"
    },
    "938": {
      "op": "POP"
    },
    "939": {
      "op": "POP"
    },
    "940": {
      "op": "POP"
    },
    "941": {
      "fn": "ERC20.transferFrom",
      "jump": "o",
      "offset": [5618, 6231],
      "op": "JUMP",
      "path": "7"
    },
    "942": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6640, 6937],
      "op": "JUMPDEST",
      "path": "7"
    },
    "943": {
      "fn": "Context._msgSender",
      "offset": [256, 266],
      "op": "CALLER",
      "path": "7"
    },
    "944": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6755, 6759],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "946": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "DUP2",
      "path": "7",
      "statement": 12
    },
    "947": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "DUP2",
      "path": "7"
    },
    "948": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "MSTORE",
      "path": "7"
    },
    "949": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6860],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "951": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "953": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "SWAP1",
      "path": "7"
    },
    "954": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "DUP2",
      "path": "7"
    },
    "955": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "MSTORE",
      "path": "7"
    },
    "956": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "958": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "DUP1",
      "path": "7"
    },
    "959": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "DUP4",
      "path": "7"
    },
    "960": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6874],
      "op": "KECCAK256",
      "path": "7"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "963": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "965": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "967": {
      "op": "SHL"
    },
    "968": {
      "op": "SUB"
    },
    "969": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "DUP8",
      "path": "7"
    },
    "970": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "AND",
      "path": "7"
    },
    "971": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "DUP5",
      "path": "7"
    },
    "972": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "MSTORE",
      "path": "7"
    },
    "973": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "SWAP1",
      "path": "7"
    },
    "974": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "SWAP2",
      "path": "7"
    },
    "975": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "MSTORE",
      "path": "7"
    },
    "976": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "DUP2",
      "path": "7"
    },
    "977": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "KECCAK256",
      "path": "7"
    },
    "978": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6883],
      "op": "SLOAD",
      "path": "7"
    },
    "979": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6755, 6759],
      "op": "SWAP1",
      "path": "7"
    },
    "980": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6755, 6759],
      "op": "SWAP2",
      "path": "7"
    },
    "981": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6777, 6907],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2EF"
    },
    "984": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6777, 6907],
      "op": "SWAP2",
      "path": "7"
    },
    "985": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6827, 6834],
      "op": "DUP6",
      "path": "7"
    },
    "986": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6827, 6834],
      "op": "SWAP1",
      "path": "7"
    },
    "987": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6896],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3E5"
    },
    "990": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6896],
      "op": "SWAP1",
      "path": "7"
    },
    "991": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6886, 6896],
      "op": "DUP7",
      "path": "7"
    },
    "992": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6886, 6896],
      "op": "SWAP1",
      "path": "7"
    },
    "993": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6896],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC96"
    },
    "996": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [6849, 6896],
      "op": "JUMP",
      "path": "7"
    },
    "997": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6849, 6896],
      "op": "JUMPDEST",
      "path": "7"
    },
    "998": {
      "fn": "ERC20.increaseAllowance",
      "offset": [6777, 6785],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FF"
    },
    "1001": {
      "fn": "ERC20.increaseAllowance",
      "jump": "i",
      "offset": [6777, 6907],
      "op": "JUMP",
      "path": "7"
    },
    "1002": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1003": {
      "offset": [1279, 1289],
      "op": "CALLER",
      "path": "8"
    },
    "1004": {
      "offset": [1268, 1275],
      "op": "PUSH2",
      "path": "8",
      "value": "0x3F3"
    },
    "1007": {
      "offset": [1268, 1273],
      "op": "PUSH2",
      "path": "8",
      "value": "0x462"
    },
    "1010": {
      "jump": "i",
      "offset": [1268, 1275],
      "op": "JUMP",
      "path": "8"
    },
    "1011": {
      "fn": "ERC20.mint",
      "offset": [1268, 1275],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1014": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1016": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1018": {
      "op": "SHL"
    },
    "1019": {
      "op": "SUB"
    },
    "1020": {
      "offset": [1268, 1289],
      "op": "AND",
      "path": "8"
    },
    "1021": {
      "fn": "ERC20.mint",
      "offset": [1268, 1289],
      "op": "EQ",
      "path": "8"
    },
    "1022": {
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0x419"
    },
    "1025": {
      "offset": [1260, 1326],
      "op": "JUMPI",
      "path": "8"
    },
    "1026": {
      "fn": "ERC20.mint",
      "offset": [1260, 1326],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1028": {
      "fn": "ERC20.mint",
      "offset": [1260, 1326],
      "op": "MLOAD",
      "path": "8"
    },
    "1029": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1033": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1035": {
      "op": "SHL"
    },
    "1036": {
      "offset": [1260, 1326],
      "op": "DUP2",
      "path": "8"
    },
    "1037": {
      "fn": "ERC20.mint",
      "offset": [1260, 1326],
      "op": "MSTORE",
      "path": "8"
    },
    "1038": {
      "fn": "ERC20.mint",
      "offset": [1260, 1326],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1040": {
      "fn": "ERC20.mint",
      "offset": [1260, 1326],
      "op": "ADD",
      "path": "8"
    },
    "1041": {
      "fn": "ERC20.mint",
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0x382"
    },
    "1044": {
      "fn": "ERC20.mint",
      "offset": [1260, 1326],
      "op": "SWAP1",
      "path": "8"
    },
    "1045": {
      "fn": "ERC20.mint",
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCAE"
    },
    "1048": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [1260, 1326],
      "op": "JUMP",
      "path": "8"
    },
    "1049": {
      "fn": "ERC20.mint",
      "offset": [1260, 1326],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1050": {
      "fn": "ERC20.mint",
      "offset": [9556, 9578],
      "op": "PUSH2",
      "path": "7",
      "statement": 13,
      "value": "0x423"
    },
    "1053": {
      "fn": "ERC20.mint",
      "offset": [9562, 9569],
      "op": "DUP3",
      "path": "7"
    },
    "1054": {
      "fn": "ERC20.mint",
      "offset": [9571, 9577],
      "op": "DUP3",
      "path": "7"
    },
    "1055": {
      "fn": "ERC20.mint",
      "offset": [9556, 9561],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8D5"
    },
    "1058": {
      "fn": "ERC20.mint",
      "jump": "i",
      "offset": [9556, 9578],
      "op": "JUMP",
      "path": "7"
    },
    "1059": {
      "fn": "ERC20.mint",
      "offset": [9556, 9578],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1060": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "POP",
      "path": "7"
    },
    "1061": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "POP",
      "path": "7"
    },
    "1062": {
      "fn": "ERC20.mint",
      "jump": "o",
      "offset": [9471, 9586],
      "op": "JUMP",
      "path": "7"
    },
    "1063": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1697, 1800],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1064": {
      "offset": [1279, 1289],
      "op": "CALLER",
      "path": "8"
    },
    "1065": {
      "offset": [1268, 1275],
      "op": "PUSH2",
      "path": "8",
      "value": "0x430"
    },
    "1068": {
      "offset": [1268, 1273],
      "op": "PUSH2",
      "path": "8",
      "value": "0x462"
    },
    "1071": {
      "jump": "i",
      "offset": [1268, 1275],
      "op": "JUMP",
      "path": "8"
    },
    "1072": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1268, 1275],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1077": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1079": {
      "op": "SHL"
    },
    "1080": {
      "op": "SUB"
    },
    "1081": {
      "offset": [1268, 1289],
      "op": "AND",
      "path": "8"
    },
    "1082": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1268, 1289],
      "op": "EQ",
      "path": "8"
    },
    "1083": {
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0x456"
    },
    "1086": {
      "offset": [1260, 1326],
      "op": "JUMPI",
      "path": "8"
    },
    "1087": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1260, 1326],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1089": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1260, 1326],
      "op": "MLOAD",
      "path": "8"
    },
    "1090": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1094": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1096": {
      "op": "SHL"
    },
    "1097": {
      "offset": [1260, 1326],
      "op": "DUP2",
      "path": "8"
    },
    "1098": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1260, 1326],
      "op": "MSTORE",
      "path": "8"
    },
    "1099": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1260, 1326],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1101": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1260, 1326],
      "op": "ADD",
      "path": "8"
    },
    "1102": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0x382"
    },
    "1105": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1260, 1326],
      "op": "SWAP1",
      "path": "8"
    },
    "1106": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCAE"
    },
    "1109": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1260, 1326],
      "op": "JUMP",
      "path": "8"
    },
    "1110": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1260, 1326],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1111": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1762, 1792],
      "op": "PUSH2",
      "path": "8",
      "statement": 14,
      "value": "0x460"
    },
    "1114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1789, 1790],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1116": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1762, 1780],
      "op": "PUSH2",
      "path": "8",
      "value": "0x99E"
    },
    "1119": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [1762, 1792],
      "op": "JUMP",
      "path": "8"
    },
    "1120": {
      "fn": "Ownable.renounceOwnership",
      "offset": [1762, 1792],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1121": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [1697, 1800],
      "op": "JUMP",
      "path": "8"
    },
    "1122": {
      "fn": "Ownable.owner",
      "offset": [1048, 1135],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1123": {
      "fn": "Ownable.owner",
      "offset": [1094, 1101],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "1125": {
      "fn": "Ownable.owner",
      "offset": [1121, 1127],
      "op": "SLOAD",
      "path": "8",
      "statement": 15
    },
    "1126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1132": {
      "op": "SHL"
    },
    "1133": {
      "op": "SUB"
    },
    "1134": {
      "fn": "Ownable.owner",
      "offset": [1121, 1127],
      "op": "AND",
      "path": "8"
    },
    "1135": {
      "fn": "Ownable.owner",
      "offset": [1121, 1127],
      "op": "SWAP1",
      "path": "8"
    },
    "1136": {
      "fn": "Ownable.owner",
      "jump": "o",
      "offset": [1048, 1135],
      "op": "JUMP",
      "path": "8"
    },
    "1137": {
      "fn": "ERC20.symbol",
      "offset": [2693, 2788],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1138": {
      "fn": "ERC20.symbol",
      "offset": [2740, 2753],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1140": {
      "fn": "ERC20.symbol",
      "offset": [2773, 2780],
      "op": "PUSH1",
      "path": "7",
      "statement": 16,
      "value": "0x5"
    },
    "1142": {
      "fn": "ERC20.symbol",
      "offset": [2766, 2780],
      "op": "DUP1",
      "path": "7"
    },
    "1143": {
      "fn": "ERC20.symbol",
      "offset": [2766, 2780],
      "op": "SLOAD",
      "path": "7"
    },
    "1144": {
      "fn": "ERC20.symbol",
      "offset": [2766, 2780],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25F"
    },
    "1147": {
      "fn": "ERC20.symbol",
      "offset": [2766, 2780],
      "op": "SWAP1",
      "path": "7"
    },
    "1148": {
      "fn": "ERC20.symbol",
      "offset": [2766, 2780],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC45"
    },
    "1151": {
      "fn": "ERC20.symbol",
      "jump": "i",
      "offset": [2766, 2780],
      "op": "JUMP",
      "path": "7"
    },
    "1152": {
      "fn": "ERC20.burn",
      "offset": [9594, 9709],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1153": {
      "offset": [1279, 1289],
      "op": "CALLER",
      "path": "8"
    },
    "1154": {
      "offset": [1268, 1275],
      "op": "PUSH2",
      "path": "8",
      "value": "0x489"
    },
    "1157": {
      "offset": [1268, 1273],
      "op": "PUSH2",
      "path": "8",
      "value": "0x462"
    },
    "1160": {
      "jump": "i",
      "offset": [1268, 1275],
      "op": "JUMP",
      "path": "8"
    },
    "1161": {
      "fn": "ERC20.burn",
      "offset": [1268, 1275],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1166": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1168": {
      "op": "SHL"
    },
    "1169": {
      "op": "SUB"
    },
    "1170": {
      "offset": [1268, 1289],
      "op": "AND",
      "path": "8"
    },
    "1171": {
      "fn": "ERC20.burn",
      "offset": [1268, 1289],
      "op": "EQ",
      "path": "8"
    },
    "1172": {
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0x4AF"
    },
    "1175": {
      "offset": [1260, 1326],
      "op": "JUMPI",
      "path": "8"
    },
    "1176": {
      "fn": "ERC20.burn",
      "offset": [1260, 1326],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1178": {
      "fn": "ERC20.burn",
      "offset": [1260, 1326],
      "op": "MLOAD",
      "path": "8"
    },
    "1179": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1183": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1185": {
      "op": "SHL"
    },
    "1186": {
      "offset": [1260, 1326],
      "op": "DUP2",
      "path": "8"
    },
    "1187": {
      "fn": "ERC20.burn",
      "offset": [1260, 1326],
      "op": "MSTORE",
      "path": "8"
    },
    "1188": {
      "fn": "ERC20.burn",
      "offset": [1260, 1326],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1190": {
      "fn": "ERC20.burn",
      "offset": [1260, 1326],
      "op": "ADD",
      "path": "8"
    },
    "1191": {
      "fn": "ERC20.burn",
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0x382"
    },
    "1194": {
      "fn": "ERC20.burn",
      "offset": [1260, 1326],
      "op": "SWAP1",
      "path": "8"
    },
    "1195": {
      "fn": "ERC20.burn",
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCAE"
    },
    "1198": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [1260, 1326],
      "op": "JUMP",
      "path": "8"
    },
    "1199": {
      "fn": "ERC20.burn",
      "offset": [1260, 1326],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1200": {
      "fn": "ERC20.burn",
      "offset": [9679, 9701],
      "op": "PUSH2",
      "path": "7",
      "statement": 17,
      "value": "0x423"
    },
    "1203": {
      "fn": "ERC20.burn",
      "offset": [9685, 9692],
      "op": "DUP3",
      "path": "7"
    },
    "1204": {
      "fn": "ERC20.burn",
      "offset": [9694, 9700],
      "op": "DUP3",
      "path": "7"
    },
    "1205": {
      "fn": "ERC20.burn",
      "offset": [9679, 9684],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9EE"
    },
    "1208": {
      "fn": "ERC20.burn",
      "jump": "i",
      "offset": [9679, 9701],
      "op": "JUMP",
      "path": "7"
    },
    "1209": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1210": {
      "fn": "Context._msgSender",
      "offset": [256, 266],
      "op": "CALLER",
      "path": "7"
    },
    "1211": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7560, 7564],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1213": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "SWAP1",
      "path": "7"
    },
    "1214": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "DUP2",
      "path": "7"
    },
    "1215": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "MSTORE",
      "path": "7"
    },
    "1216": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7620],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1218": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1220": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "SWAP1",
      "path": "7"
    },
    "1221": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "DUP2",
      "path": "7"
    },
    "1222": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "MSTORE",
      "path": "7"
    },
    "1223": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1225": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "DUP1",
      "path": "7"
    },
    "1226": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "DUP4",
      "path": "7"
    },
    "1227": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7634],
      "op": "KECCAK256",
      "path": "7"
    },
    "1228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1234": {
      "op": "SHL"
    },
    "1235": {
      "op": "SUB"
    },
    "1236": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "DUP7",
      "path": "7"
    },
    "1237": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "AND",
      "path": "7"
    },
    "1238": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "DUP5",
      "path": "7"
    },
    "1239": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "MSTORE",
      "path": "7"
    },
    "1240": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "SWAP1",
      "path": "7"
    },
    "1241": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "SWAP2",
      "path": "7"
    },
    "1242": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "MSTORE",
      "path": "7"
    },
    "1243": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "DUP2",
      "path": "7"
    },
    "1244": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "KECCAK256",
      "path": "7"
    },
    "1245": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7609, 7643],
      "op": "SLOAD",
      "path": "7"
    },
    "1246": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7676, 7711],
      "op": "DUP3",
      "path": "7",
      "statement": 18
    },
    "1247": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7676, 7711],
      "op": "DUP2",
      "path": "7"
    },
    "1248": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7676, 7711],
      "op": "LT",
      "path": "7"
    },
    "1249": {
      "branch": 47,
      "fn": "ERC20.decreaseAllowance",
      "offset": [7676, 7711],
      "op": "ISZERO",
      "path": "7"
    },
    "1250": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "PUSH2",
      "path": "7",
      "value": "0x53B"
    },
    "1253": {
      "branch": 47,
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "JUMPI",
      "path": "7"
    },
    "1254": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1256": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "MLOAD",
      "path": "7"
    },
    "1257": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1261": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1263": {
      "op": "SHL"
    },
    "1264": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "DUP2",
      "path": "7"
    },
    "1265": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "MSTORE",
      "path": "7"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1268": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1270": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "DUP3",
      "path": "7"
    },
    "1271": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "ADD",
      "path": "7"
    },
    "1272": {
      "op": "MSTORE"
    },
    "1273": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1275": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1277": {
      "op": "DUP3"
    },
    "1278": {
      "op": "ADD"
    },
    "1279": {
      "op": "MSTORE"
    },
    "1280": {
      "op": "PUSH32",
      "value": "0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
    },
    "1313": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1315": {
      "op": "DUP3"
    },
    "1316": {
      "op": "ADD"
    },
    "1317": {
      "op": "MSTORE"
    },
    "1318": {
      "op": "PUSH5",
      "value": "0x207A65726F"
    },
    "1324": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1326": {
      "op": "SHL"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1329": {
      "op": "DUP3"
    },
    "1330": {
      "op": "ADD"
    },
    "1331": {
      "op": "MSTORE"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1334": {
      "op": "ADD"
    },
    "1335": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "1338": {
      "op": "JUMP"
    },
    "1339": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7654, 7776],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1340": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7812, 7879],
      "op": "PUSH2",
      "path": "7",
      "statement": 19,
      "value": "0x548"
    },
    "1343": {
      "fn": "Context._msgSender",
      "offset": [256, 266],
      "op": "CALLER",
      "path": "7"
    },
    "1344": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7835, 7842],
      "op": "DUP6",
      "path": "7"
    },
    "1345": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7863, 7878],
      "op": "DUP6",
      "path": "7"
    },
    "1346": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7844, 7860],
      "op": "DUP5",
      "path": "7"
    },
    "1347": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7844, 7878],
      "op": "SUB",
      "path": "7"
    },
    "1348": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7812, 7820],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5FF"
    },
    "1351": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "i",
      "offset": [7812, 7879],
      "op": "JUMP",
      "path": "7"
    },
    "1352": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7812, 7879],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1353": {
      "op": "POP"
    },
    "1354": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7910, 7914],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0x1"
    },
    "1356": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7910, 7914],
      "op": "SWAP4",
      "path": "7"
    },
    "1357": {
      "fn": "ERC20.decreaseAllowance",
      "offset": [7440, 7922],
      "op": "SWAP3",
      "path": "7"
    },
    "1358": {
      "op": "POP"
    },
    "1359": {
      "op": "POP"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "fn": "ERC20.decreaseAllowance",
      "jump": "o",
      "offset": [7440, 7922],
      "op": "JUMP",
      "path": "7"
    },
    "1362": {
      "fn": "ERC20.transfer",
      "offset": [4069, 4267],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1363": {
      "fn": "ERC20.transfer",
      "offset": [4173, 4177],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1365": {
      "fn": "ERC20.transfer",
      "offset": [4195, 4237],
      "op": "PUSH2",
      "path": "7",
      "statement": 21,
      "value": "0x2EF"
    },
    "1368": {
      "fn": "Context._msgSender",
      "offset": [256, 266],
      "op": "CALLER",
      "path": "7"
    },
    "1369": {
      "fn": "ERC20.transfer",
      "offset": [4219, 4228],
      "op": "DUP5",
      "path": "7"
    },
    "1370": {
      "fn": "ERC20.transfer",
      "offset": [4230, 4236],
      "op": "DUP5",
      "path": "7"
    },
    "1371": {
      "fn": "ERC20.transfer",
      "offset": [4195, 4204],
      "op": "PUSH2",
      "path": "7",
      "value": "0x72B"
    },
    "1374": {
      "fn": "ERC20.transfer",
      "jump": "i",
      "offset": [4195, 4237],
      "op": "JUMP",
      "path": "7"
    },
    "1375": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1376": {
      "offset": [1279, 1289],
      "op": "CALLER",
      "path": "8"
    },
    "1377": {
      "offset": [1268, 1275],
      "op": "PUSH2",
      "path": "8",
      "value": "0x568"
    },
    "1380": {
      "offset": [1268, 1273],
      "op": "PUSH2",
      "path": "8",
      "value": "0x462"
    },
    "1383": {
      "jump": "i",
      "offset": [1268, 1275],
      "op": "JUMP",
      "path": "8"
    },
    "1384": {
      "fn": "Ownable.transferOwnership",
      "offset": [1268, 1275],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1389": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1391": {
      "op": "SHL"
    },
    "1392": {
      "op": "SUB"
    },
    "1393": {
      "offset": [1268, 1289],
      "op": "AND",
      "path": "8"
    },
    "1394": {
      "branch": 56,
      "fn": "Ownable.transferOwnership",
      "offset": [1268, 1289],
      "op": "EQ",
      "path": "8"
    },
    "1395": {
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0x58E"
    },
    "1398": {
      "branch": 56,
      "offset": [1260, 1326],
      "op": "JUMPI",
      "path": "8"
    },
    "1399": {
      "fn": "Ownable.transferOwnership",
      "offset": [1260, 1326],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1401": {
      "fn": "Ownable.transferOwnership",
      "offset": [1260, 1326],
      "op": "MLOAD",
      "path": "8"
    },
    "1402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1408": {
      "op": "SHL"
    },
    "1409": {
      "offset": [1260, 1326],
      "op": "DUP2",
      "path": "8"
    },
    "1410": {
      "fn": "Ownable.transferOwnership",
      "offset": [1260, 1326],
      "op": "MSTORE",
      "path": "8"
    },
    "1411": {
      "fn": "Ownable.transferOwnership",
      "offset": [1260, 1326],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1413": {
      "fn": "Ownable.transferOwnership",
      "offset": [1260, 1326],
      "op": "ADD",
      "path": "8"
    },
    "1414": {
      "fn": "Ownable.transferOwnership",
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0x382"
    },
    "1417": {
      "fn": "Ownable.transferOwnership",
      "offset": [1260, 1326],
      "op": "SWAP1",
      "path": "8"
    },
    "1418": {
      "fn": "Ownable.transferOwnership",
      "offset": [1260, 1326],
      "op": "PUSH2",
      "path": "8",
      "value": "0xCAE"
    },
    "1421": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [1260, 1326],
      "op": "JUMP",
      "path": "8"
    },
    "1422": {
      "fn": "Ownable.transferOwnership",
      "offset": [1260, 1326],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1423": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1427": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1429": {
      "op": "SHL"
    },
    "1430": {
      "op": "SUB"
    },
    "1431": {
      "fn": "Ownable.transferOwnership",
      "offset": [2058, 2080],
      "op": "DUP2",
      "path": "8",
      "statement": 22
    },
    "1432": {
      "branch": 57,
      "fn": "Ownable.transferOwnership",
      "offset": [2058, 2080],
      "op": "AND",
      "path": "8"
    },
    "1433": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "PUSH2",
      "path": "8",
      "value": "0x5F3"
    },
    "1436": {
      "branch": 57,
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "JUMPI",
      "path": "8"
    },
    "1437": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "PUSH1",
      "path": "8",
      "value": "0x40"
    },
    "1439": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "MLOAD",
      "path": "8"
    },
    "1440": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1446": {
      "op": "SHL"
    },
    "1447": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "DUP2",
      "path": "8"
    },
    "1448": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "MSTORE",
      "path": "8"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1451": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "PUSH1",
      "path": "8",
      "value": "0x4"
    },
    "1453": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "DUP3",
      "path": "8"
    },
    "1454": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "ADD",
      "path": "8"
    },
    "1455": {
      "op": "MSTORE"
    },
    "1456": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1460": {
      "op": "DUP3"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "MSTORE"
    },
    "1463": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "1496": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1498": {
      "op": "DUP3"
    },
    "1499": {
      "op": "ADD"
    },
    "1500": {
      "op": "MSTORE"
    },
    "1501": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "1508": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "1510": {
      "op": "SHL"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1513": {
      "op": "DUP3"
    },
    "1514": {
      "op": "ADD"
    },
    "1515": {
      "op": "MSTORE"
    },
    "1516": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "PUSH2",
      "path": "8",
      "value": "0x382"
    },
    "1522": {
      "op": "JUMP"
    },
    "1523": {
      "fn": "Ownable.transferOwnership",
      "offset": [2036, 2146],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1524": {
      "fn": "Ownable.transferOwnership",
      "offset": [2157, 2185],
      "op": "PUSH2",
      "path": "8",
      "statement": 23,
      "value": "0x5FC"
    },
    "1527": {
      "fn": "Ownable.transferOwnership",
      "offset": [2176, 2184],
      "op": "DUP2",
      "path": "8"
    },
    "1528": {
      "fn": "Ownable.transferOwnership",
      "offset": [2157, 2175],
      "op": "PUSH2",
      "path": "8",
      "value": "0x99E"
    },
    "1531": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [2157, 2185],
      "op": "JUMP",
      "path": "8"
    },
    "1532": {
      "fn": "Ownable.transferOwnership",
      "offset": [2157, 2185],
      "op": "JUMPDEST",
      "path": "8"
    },
    "1533": {
      "fn": "Ownable.transferOwnership",
      "offset": [1955, 2193],
      "op": "POP",
      "path": "8"
    },
    "1534": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [1955, 2193],
      "op": "JUMP",
      "path": "8"
    },
    "1535": {
      "fn": "ERC20._approve",
      "offset": [11478, 11858],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1542": {
      "op": "SHL"
    },
    "1543": {
      "op": "SUB"
    },
    "1544": {
      "fn": "ERC20._approve",
      "offset": [11614, 11633],
      "op": "DUP4",
      "path": "7",
      "statement": 24
    },
    "1545": {
      "branch": 48,
      "fn": "ERC20._approve",
      "offset": [11614, 11633],
      "op": "AND",
      "path": "7"
    },
    "1546": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "PUSH2",
      "path": "7",
      "value": "0x661"
    },
    "1549": {
      "branch": 48,
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "JUMPI",
      "path": "7"
    },
    "1550": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1552": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "MLOAD",
      "path": "7"
    },
    "1553": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1559": {
      "op": "SHL"
    },
    "1560": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "DUP2",
      "path": "7"
    },
    "1561": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "MSTORE",
      "path": "7"
    },
    "1562": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1564": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1566": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "DUP3",
      "path": "7"
    },
    "1567": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "ADD",
      "path": "7"
    },
    "1568": {
      "op": "MSTORE"
    },
    "1569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1571": {
      "op": "DUP1"
    },
    "1572": {
      "op": "DUP3"
    },
    "1573": {
      "op": "ADD"
    },
    "1574": {
      "op": "MSTORE"
    },
    "1575": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
    },
    "1608": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1610": {
      "op": "DUP3"
    },
    "1611": {
      "op": "ADD"
    },
    "1612": {
      "op": "MSTORE"
    },
    "1613": {
      "op": "PUSH4",
      "value": "0x72657373"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1620": {
      "op": "SHL"
    },
    "1621": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1623": {
      "op": "DUP3"
    },
    "1624": {
      "op": "ADD"
    },
    "1625": {
      "op": "MSTORE"
    },
    "1626": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1628": {
      "op": "ADD"
    },
    "1629": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "1632": {
      "op": "JUMP"
    },
    "1633": {
      "fn": "ERC20._approve",
      "offset": [11606, 11674],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1636": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1638": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1640": {
      "op": "SHL"
    },
    "1641": {
      "op": "SUB"
    },
    "1642": {
      "fn": "ERC20._approve",
      "offset": [11693, 11714],
      "op": "DUP3",
      "path": "7",
      "statement": 25
    },
    "1643": {
      "branch": 49,
      "fn": "ERC20._approve",
      "offset": [11693, 11714],
      "op": "AND",
      "path": "7"
    },
    "1644": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6C2"
    },
    "1647": {
      "branch": 49,
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "JUMPI",
      "path": "7"
    },
    "1648": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1650": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "MLOAD",
      "path": "7"
    },
    "1651": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1657": {
      "op": "SHL"
    },
    "1658": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "DUP2",
      "path": "7"
    },
    "1659": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "MSTORE",
      "path": "7"
    },
    "1660": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1662": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1664": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "DUP3",
      "path": "7"
    },
    "1665": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "ADD",
      "path": "7"
    },
    "1666": {
      "op": "MSTORE"
    },
    "1667": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1671": {
      "op": "DUP3"
    },
    "1672": {
      "op": "ADD"
    },
    "1673": {
      "op": "MSTORE"
    },
    "1674": {
      "op": "PUSH32",
      "value": "0x45524332303A20617070726F766520746F20746865207A65726F206164647265"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1709": {
      "op": "DUP3"
    },
    "1710": {
      "op": "ADD"
    },
    "1711": {
      "op": "MSTORE"
    },
    "1712": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "1715": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "1717": {
      "op": "SHL"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1720": {
      "op": "DUP3"
    },
    "1721": {
      "op": "ADD"
    },
    "1722": {
      "op": "MSTORE"
    },
    "1723": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1725": {
      "op": "ADD"
    },
    "1726": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "1729": {
      "op": "JUMP"
    },
    "1730": {
      "fn": "ERC20._approve",
      "offset": [11685, 11753],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1735": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1737": {
      "op": "SHL"
    },
    "1738": {
      "op": "SUB"
    },
    "1739": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "DUP1",
      "path": "7",
      "statement": 26
    },
    "1740": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "DUP5",
      "path": "7"
    },
    "1741": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "AND",
      "path": "7"
    },
    "1742": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1744": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "SWAP1",
      "path": "7"
    },
    "1745": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "DUP2",
      "path": "7"
    },
    "1746": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "MSTORE",
      "path": "7"
    },
    "1747": {
      "fn": "ERC20._approve",
      "offset": [11766, 11777],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1749": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1751": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "SWAP1",
      "path": "7"
    },
    "1752": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "DUP2",
      "path": "7"
    },
    "1753": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "MSTORE",
      "path": "7"
    },
    "1754": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1756": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "DUP1",
      "path": "7"
    },
    "1757": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "DUP4",
      "path": "7"
    },
    "1758": {
      "fn": "ERC20._approve",
      "offset": [11766, 11784],
      "op": "KECCAK256",
      "path": "7"
    },
    "1759": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "SWAP4",
      "path": "7"
    },
    "1760": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "DUP7",
      "path": "7"
    },
    "1761": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "AND",
      "path": "7"
    },
    "1762": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "DUP4",
      "path": "7"
    },
    "1763": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "MSTORE",
      "path": "7"
    },
    "1764": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "SWAP3",
      "path": "7"
    },
    "1765": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "SWAP1",
      "path": "7"
    },
    "1766": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "MSTORE",
      "path": "7"
    },
    "1767": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "DUP2",
      "path": "7"
    },
    "1768": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "SWAP1",
      "path": "7"
    },
    "1769": {
      "fn": "ERC20._approve",
      "offset": [11766, 11793],
      "op": "KECCAK256",
      "path": "7"
    },
    "1770": {
      "fn": "ERC20._approve",
      "offset": [11766, 11802],
      "op": "DUP3",
      "path": "7"
    },
    "1771": {
      "fn": "ERC20._approve",
      "offset": [11766, 11802],
      "op": "SWAP1",
      "path": "7"
    },
    "1772": {
      "fn": "ERC20._approve",
      "offset": [11766, 11802],
      "op": "SSTORE",
      "path": "7"
    },
    "1773": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "MLOAD",
      "path": "7",
      "statement": 27
    },
    "1774": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "PUSH32",
      "path": "7",
      "value": "0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
    },
    "1807": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "SWAP1",
      "path": "7"
    },
    "1808": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71E"
    },
    "1811": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "SWAP1",
      "path": "7"
    },
    "1812": {
      "fn": "ERC20._approve",
      "offset": [11778, 11783],
      "op": "DUP6",
      "path": "7"
    },
    "1813": {
      "fn": "ERC20._approve",
      "offset": [11778, 11783],
      "op": "SWAP1",
      "path": "7"
    },
    "1814": {
      "fn": "ERC20._approve",
      "offset": [11785, 11792],
      "op": "DUP6",
      "path": "7"
    },
    "1815": {
      "fn": "ERC20._approve",
      "offset": [11785, 11792],
      "op": "SWAP1",
      "path": "7"
    },
    "1816": {
      "fn": "ERC20._approve",
      "offset": [11796, 11802],
      "op": "DUP6",
      "path": "7"
    },
    "1817": {
      "fn": "ERC20._approve",
      "offset": [11796, 11802],
      "op": "SWAP1",
      "path": "7"
    },
    "1818": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCE3"
    },
    "1821": {
      "fn": "ERC20._approve",
      "jump": "i",
      "offset": [11818, 11850],
      "op": "JUMP",
      "path": "7"
    },
    "1822": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1823": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1825": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "MLOAD",
      "path": "7"
    },
    "1826": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "DUP1",
      "path": "7"
    },
    "1827": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "SWAP2",
      "path": "7"
    },
    "1828": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "SUB",
      "path": "7"
    },
    "1829": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "SWAP1",
      "path": "7"
    },
    "1830": {
      "fn": "ERC20._approve",
      "offset": [11818, 11850],
      "op": "LOG1",
      "path": "7"
    },
    "1831": {
      "fn": "ERC20._approve",
      "offset": [11478, 11858],
      "op": "POP",
      "path": "7"
    },
    "1832": {
      "fn": "ERC20._approve",
      "offset": [11478, 11858],
      "op": "POP",
      "path": "7"
    },
    "1833": {
      "fn": "ERC20._approve",
      "offset": [11478, 11858],
      "op": "POP",
      "path": "7"
    },
    "1834": {
      "fn": "ERC20._approve",
      "jump": "o",
      "offset": [11478, 11858],
      "op": "JUMP",
      "path": "7"
    },
    "1835": {
      "fn": "ERC20._transfer",
      "offset": [8412, 9182],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1840": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1842": {
      "op": "SHL"
    },
    "1843": {
      "op": "SUB"
    },
    "1844": {
      "fn": "ERC20._transfer",
      "offset": [8552, 8572],
      "op": "DUP4",
      "path": "7",
      "statement": 28
    },
    "1845": {
      "branch": 50,
      "fn": "ERC20._transfer",
      "offset": [8552, 8572],
      "op": "AND",
      "path": "7"
    },
    "1846": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "PUSH2",
      "path": "7",
      "value": "0x78F"
    },
    "1849": {
      "branch": 50,
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "JUMPI",
      "path": "7"
    },
    "1850": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1852": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "MLOAD",
      "path": "7"
    },
    "1853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "DUP2",
      "path": "7"
    },
    "1861": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "MSTORE",
      "path": "7"
    },
    "1862": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1864": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1866": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "DUP3",
      "path": "7"
    },
    "1867": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "ADD",
      "path": "7"
    },
    "1868": {
      "op": "MSTORE"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1873": {
      "op": "DUP3"
    },
    "1874": {
      "op": "ADD"
    },
    "1875": {
      "op": "MSTORE"
    },
    "1876": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E736665722066726F6D20746865207A65726F206164"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1911": {
      "op": "DUP3"
    },
    "1912": {
      "op": "ADD"
    },
    "1913": {
      "op": "MSTORE"
    },
    "1914": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "1922": {
      "op": "SHL"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1925": {
      "op": "DUP3"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "MSTORE"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1930": {
      "op": "ADD"
    },
    "1931": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "1934": {
      "op": "JUMP"
    },
    "1935": {
      "fn": "ERC20._transfer",
      "offset": [8544, 8614],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1942": {
      "op": "SHL"
    },
    "1943": {
      "op": "SUB"
    },
    "1944": {
      "fn": "ERC20._transfer",
      "offset": [8633, 8656],
      "op": "DUP3",
      "path": "7",
      "statement": 29
    },
    "1945": {
      "branch": 51,
      "fn": "ERC20._transfer",
      "offset": [8633, 8656],
      "op": "AND",
      "path": "7"
    },
    "1946": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7F1"
    },
    "1949": {
      "branch": 51,
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "JUMPI",
      "path": "7"
    },
    "1950": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1952": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "MLOAD",
      "path": "7"
    },
    "1953": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1957": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1959": {
      "op": "SHL"
    },
    "1960": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "DUP2",
      "path": "7"
    },
    "1961": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "MSTORE",
      "path": "7"
    },
    "1962": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1964": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1966": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "DUP3",
      "path": "7"
    },
    "1967": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "ADD",
      "path": "7"
    },
    "1968": {
      "op": "MSTORE"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x23"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1973": {
      "op": "DUP3"
    },
    "1974": {
      "op": "ADD"
    },
    "1975": {
      "op": "MSTORE"
    },
    "1976": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220746F20746865207A65726F2061646472"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2011": {
      "op": "DUP3"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "MSTORE"
    },
    "2014": {
      "op": "PUSH3",
      "value": "0x657373"
    },
    "2018": {
      "op": "PUSH1",
      "value": "0xE8"
    },
    "2020": {
      "op": "SHL"
    },
    "2021": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2023": {
      "op": "DUP3"
    },
    "2024": {
      "op": "ADD"
    },
    "2025": {
      "op": "MSTORE"
    },
    "2026": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2028": {
      "op": "ADD"
    },
    "2029": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "2032": {
      "op": "JUMP"
    },
    "2033": {
      "fn": "ERC20._transfer",
      "offset": [8625, 8696],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2040": {
      "op": "SHL"
    },
    "2041": {
      "op": "SUB"
    },
    "2042": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "DUP4",
      "path": "7"
    },
    "2043": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "AND",
      "path": "7"
    },
    "2044": {
      "fn": "ERC20._transfer",
      "offset": [8769, 8790],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2046": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "SWAP1",
      "path": "7"
    },
    "2047": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "DUP2",
      "path": "7"
    },
    "2048": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "MSTORE",
      "path": "7"
    },
    "2049": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8802],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2051": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2053": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "MSTORE",
      "path": "7"
    },
    "2054": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2056": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "SWAP1",
      "path": "7"
    },
    "2057": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "KECCAK256",
      "path": "7"
    },
    "2058": {
      "fn": "ERC20._transfer",
      "offset": [8793, 8810],
      "op": "SLOAD",
      "path": "7"
    },
    "2059": {
      "fn": "ERC20._transfer",
      "offset": [8843, 8866],
      "op": "DUP2",
      "path": "7",
      "statement": 30
    },
    "2060": {
      "fn": "ERC20._transfer",
      "offset": [8843, 8866],
      "op": "DUP2",
      "path": "7"
    },
    "2061": {
      "fn": "ERC20._transfer",
      "offset": [8843, 8866],
      "op": "LT",
      "path": "7"
    },
    "2062": {
      "branch": 52,
      "fn": "ERC20._transfer",
      "offset": [8843, 8866],
      "op": "ISZERO",
      "path": "7"
    },
    "2063": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "PUSH2",
      "path": "7",
      "value": "0x869"
    },
    "2066": {
      "branch": 52,
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "JUMPI",
      "path": "7"
    },
    "2067": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2069": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "MLOAD",
      "path": "7"
    },
    "2070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "DUP2",
      "path": "7"
    },
    "2078": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "MSTORE",
      "path": "7"
    },
    "2079": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2081": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2083": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "DUP3",
      "path": "7"
    },
    "2084": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "ADD",
      "path": "7"
    },
    "2085": {
      "op": "MSTORE"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2090": {
      "op": "DUP3"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "MSTORE"
    },
    "2093": {
      "op": "PUSH32",
      "value": "0x45524332303A207472616E7366657220616D6F756E7420657863656564732062"
    },
    "2126": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2128": {
      "op": "DUP3"
    },
    "2129": {
      "op": "ADD"
    },
    "2130": {
      "op": "MSTORE"
    },
    "2131": {
      "op": "PUSH6",
      "value": "0x616C616E6365"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2140": {
      "op": "SHL"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2143": {
      "op": "DUP3"
    },
    "2144": {
      "op": "ADD"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2148": {
      "op": "ADD"
    },
    "2149": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "2152": {
      "op": "JUMP"
    },
    "2153": {
      "fn": "ERC20._transfer",
      "offset": [8821, 8932],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2160": {
      "op": "SHL"
    },
    "2161": {
      "op": "SUB"
    },
    "2162": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "DUP1",
      "path": "7",
      "statement": 31
    },
    "2163": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "DUP6",
      "path": "7"
    },
    "2164": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "AND",
      "path": "7"
    },
    "2165": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2167": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "SWAP1",
      "path": "7"
    },
    "2168": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "DUP2",
      "path": "7"
    },
    "2169": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "MSTORE",
      "path": "7"
    },
    "2170": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8977],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2172": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2174": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "MSTORE",
      "path": "7"
    },
    "2175": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2177": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "DUP1",
      "path": "7"
    },
    "2178": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "DUP3",
      "path": "7"
    },
    "2179": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "KECCAK256",
      "path": "7"
    },
    "2180": {
      "fn": "ERC20._transfer",
      "offset": [8988, 9010],
      "op": "DUP6",
      "path": "7"
    },
    "2181": {
      "fn": "ERC20._transfer",
      "offset": [8988, 9010],
      "op": "DUP6",
      "path": "7"
    },
    "2182": {
      "fn": "ERC20._transfer",
      "offset": [8988, 9010],
      "op": "SUB",
      "path": "7"
    },
    "2183": {
      "fn": "ERC20._transfer",
      "offset": [8968, 9010],
      "op": "SWAP1",
      "path": "7"
    },
    "2184": {
      "fn": "ERC20._transfer",
      "offset": [8968, 9010],
      "op": "SSTORE",
      "path": "7"
    },
    "2185": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9052],
      "op": "SWAP2",
      "path": "7",
      "statement": 32
    },
    "2186": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9052],
      "op": "DUP6",
      "path": "7"
    },
    "2187": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9052],
      "op": "AND",
      "path": "7"
    },
    "2188": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9052],
      "op": "DUP2",
      "path": "7"
    },
    "2189": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9052],
      "op": "MSTORE",
      "path": "7"
    },
    "2190": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9052],
      "op": "SWAP1",
      "path": "7"
    },
    "2191": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9052],
      "op": "DUP2",
      "path": "7"
    },
    "2192": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9052],
      "op": "KECCAK256",
      "path": "7"
    },
    "2193": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9062],
      "op": "DUP1",
      "path": "7"
    },
    "2194": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9062],
      "op": "SLOAD",
      "path": "7"
    },
    "2195": {
      "fn": "ERC20._transfer",
      "offset": [9004, 9010],
      "op": "DUP5",
      "path": "7"
    },
    "2196": {
      "fn": "ERC20._transfer",
      "offset": [9004, 9010],
      "op": "SWAP3",
      "path": "7"
    },
    "2197": {
      "fn": "ERC20._transfer",
      "offset": [8968, 8985],
      "op": "SWAP1",
      "path": "7"
    },
    "2198": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9062],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8A0"
    },
    "2201": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9062],
      "op": "SWAP1",
      "path": "7"
    },
    "2202": {
      "fn": "ERC20._transfer",
      "offset": [9004, 9010],
      "op": "DUP5",
      "path": "7"
    },
    "2203": {
      "fn": "ERC20._transfer",
      "offset": [9004, 9010],
      "op": "SWAP1",
      "path": "7"
    },
    "2204": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9062],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC96"
    },
    "2207": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [9032, 9062],
      "op": "JUMP",
      "path": "7"
    },
    "2208": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9062],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2209": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9062],
      "op": "SWAP1",
      "path": "7"
    },
    "2210": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9062],
      "op": "SWAP2",
      "path": "7"
    },
    "2211": {
      "fn": "ERC20._transfer",
      "offset": [9032, 9062],
      "op": "SSTORE",
      "path": "7"
    },
    "2212": {
      "op": "POP"
    },
    "2213": {
      "op": "POP"
    },
    "2214": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "PUSH1",
      "path": "7",
      "statement": 33,
      "value": "0x40"
    },
    "2216": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "MLOAD",
      "path": "7"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2219": {
      "op": "DUP1"
    },
    "2220": {
      "op": "MLOAD"
    },
    "2221": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2223": {
      "op": "PUSH2",
      "value": "0xD1F"
    },
    "2226": {
      "op": "DUP4"
    },
    "2227": {
      "op": "CODECOPY"
    },
    "2228": {
      "op": "DUP2"
    },
    "2229": {
      "op": "MLOAD"
    },
    "2230": {
      "op": "SWAP2"
    },
    "2231": {
      "op": "MSTORE"
    },
    "2232": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "SWAP1",
      "path": "7"
    },
    "2233": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8C7"
    },
    "2236": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "SWAP1",
      "path": "7"
    },
    "2237": {
      "fn": "ERC20._transfer",
      "offset": [9089, 9095],
      "op": "DUP7",
      "path": "7"
    },
    "2238": {
      "fn": "ERC20._transfer",
      "offset": [9089, 9095],
      "op": "SWAP1",
      "path": "7"
    },
    "2239": {
      "fn": "ERC20._transfer",
      "offset": [9097, 9106],
      "op": "DUP7",
      "path": "7"
    },
    "2240": {
      "fn": "ERC20._transfer",
      "offset": [9097, 9106],
      "op": "SWAP1",
      "path": "7"
    },
    "2241": {
      "fn": "ERC20._transfer",
      "offset": [9108, 9114],
      "op": "DUP7",
      "path": "7"
    },
    "2242": {
      "fn": "ERC20._transfer",
      "offset": [9108, 9114],
      "op": "SWAP1",
      "path": "7"
    },
    "2243": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCE3"
    },
    "2246": {
      "fn": "ERC20._transfer",
      "jump": "i",
      "offset": [9080, 9115],
      "op": "JUMP",
      "path": "7"
    },
    "2247": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2248": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2250": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "MLOAD",
      "path": "7"
    },
    "2251": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "DUP1",
      "path": "7"
    },
    "2252": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "SWAP2",
      "path": "7"
    },
    "2253": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "SUB",
      "path": "7"
    },
    "2254": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "SWAP1",
      "path": "7"
    },
    "2255": {
      "fn": "ERC20._transfer",
      "offset": [9080, 9115],
      "op": "LOG1",
      "path": "7"
    },
    "2256": {
      "fn": "ERC20._transfer",
      "offset": [8533, 9182],
      "op": "POP",
      "path": "7"
    },
    "2257": {
      "fn": "ERC20._transfer",
      "offset": [8412, 9182],
      "op": "POP",
      "path": "7"
    },
    "2258": {
      "fn": "ERC20._transfer",
      "offset": [8412, 9182],
      "op": "POP",
      "path": "7"
    },
    "2259": {
      "fn": "ERC20._transfer",
      "offset": [8412, 9182],
      "op": "POP",
      "path": "7"
    },
    "2260": {
      "fn": "ERC20._transfer",
      "jump": "o",
      "offset": [8412, 9182],
      "op": "JUMP",
      "path": "7"
    },
    "2261": {
      "fn": "ERC20._mint",
      "offset": [9717, 10116],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2264": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2266": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2268": {
      "op": "SHL"
    },
    "2269": {
      "op": "SUB"
    },
    "2270": {
      "fn": "ERC20._mint",
      "offset": [9801, 9822],
      "op": "DUP3",
      "path": "7",
      "statement": 34
    },
    "2271": {
      "branch": 53,
      "fn": "ERC20._mint",
      "offset": [9801, 9822],
      "op": "AND",
      "path": "7"
    },
    "2272": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "PUSH2",
      "path": "7",
      "value": "0x92B"
    },
    "2275": {
      "branch": 53,
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "JUMPI",
      "path": "7"
    },
    "2276": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2278": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "MLOAD",
      "path": "7"
    },
    "2279": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2285": {
      "op": "SHL"
    },
    "2286": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "DUP2",
      "path": "7"
    },
    "2287": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "MSTORE",
      "path": "7"
    },
    "2288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2290": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2292": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "DUP3",
      "path": "7"
    },
    "2293": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "ADD",
      "path": "7"
    },
    "2294": {
      "op": "MSTORE"
    },
    "2295": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2299": {
      "op": "DUP3"
    },
    "2300": {
      "op": "ADD"
    },
    "2301": {
      "op": "MSTORE"
    },
    "2302": {
      "op": "PUSH32",
      "value": "0x45524332303A206D696E7420746F20746865207A65726F206164647265737300"
    },
    "2335": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2337": {
      "op": "DUP3"
    },
    "2338": {
      "op": "ADD"
    },
    "2339": {
      "op": "MSTORE"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2342": {
      "op": "ADD"
    },
    "2343": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "2346": {
      "op": "JUMP"
    },
    "2347": {
      "fn": "ERC20._mint",
      "offset": [9793, 9858],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2348": {
      "fn": "ERC20._mint",
      "offset": [9949, 9955],
      "op": "DUP1",
      "path": "7",
      "statement": 35
    },
    "2349": {
      "fn": "ERC20._mint",
      "offset": [9933, 9945],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2351": {
      "fn": "ERC20._mint",
      "offset": [9933, 9945],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2353": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "DUP3",
      "path": "7"
    },
    "2354": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "DUP3",
      "path": "7"
    },
    "2355": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "SLOAD",
      "path": "7"
    },
    "2356": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "PUSH2",
      "path": "7",
      "value": "0x93D"
    },
    "2359": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "SWAP2",
      "path": "7"
    },
    "2360": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "SWAP1",
      "path": "7"
    },
    "2361": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC96"
    },
    "2364": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [9933, 9955],
      "op": "JUMP",
      "path": "7"
    },
    "2365": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2366": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "SWAP1",
      "path": "7"
    },
    "2367": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "SWAP2",
      "path": "7"
    },
    "2368": {
      "fn": "ERC20._mint",
      "offset": [9933, 9955],
      "op": "SSTORE",
      "path": "7"
    },
    "2369": {
      "op": "POP"
    },
    "2370": {
      "op": "POP"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2377": {
      "op": "SHL"
    },
    "2378": {
      "op": "SUB"
    },
    "2379": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "DUP3",
      "path": "7",
      "statement": 36
    },
    "2380": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "AND",
      "path": "7"
    },
    "2381": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2383": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "SWAP1",
      "path": "7"
    },
    "2384": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "DUP2",
      "path": "7"
    },
    "2385": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "MSTORE",
      "path": "7"
    },
    "2386": {
      "fn": "ERC20._mint",
      "offset": [9966, 9975],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2388": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2390": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "MSTORE",
      "path": "7"
    },
    "2391": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2393": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "DUP2",
      "path": "7"
    },
    "2394": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "KECCAK256",
      "path": "7"
    },
    "2395": {
      "fn": "ERC20._mint",
      "offset": [9966, 9994],
      "op": "DUP1",
      "path": "7"
    },
    "2396": {
      "fn": "ERC20._mint",
      "offset": [9966, 9994],
      "op": "SLOAD",
      "path": "7"
    },
    "2397": {
      "fn": "ERC20._mint",
      "offset": [9988, 9994],
      "op": "DUP4",
      "path": "7"
    },
    "2398": {
      "fn": "ERC20._mint",
      "offset": [9988, 9994],
      "op": "SWAP3",
      "path": "7"
    },
    "2399": {
      "fn": "ERC20._mint",
      "offset": [9966, 9984],
      "op": "SWAP1",
      "path": "7"
    },
    "2400": {
      "fn": "ERC20._mint",
      "offset": [9966, 9994],
      "op": "PUSH2",
      "path": "7",
      "value": "0x96A"
    },
    "2403": {
      "fn": "ERC20._mint",
      "offset": [9966, 9994],
      "op": "SWAP1",
      "path": "7"
    },
    "2404": {
      "fn": "ERC20._mint",
      "offset": [9988, 9994],
      "op": "DUP5",
      "path": "7"
    },
    "2405": {
      "fn": "ERC20._mint",
      "offset": [9988, 9994],
      "op": "SWAP1",
      "path": "7"
    },
    "2406": {
      "fn": "ERC20._mint",
      "offset": [9966, 9994],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC96"
    },
    "2409": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [9966, 9994],
      "op": "JUMP",
      "path": "7"
    },
    "2410": {
      "fn": "ERC20._mint",
      "offset": [9966, 9994],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2411": {
      "fn": "ERC20._mint",
      "offset": [9966, 9994],
      "op": "SWAP1",
      "path": "7"
    },
    "2412": {
      "fn": "ERC20._mint",
      "offset": [9966, 9994],
      "op": "SWAP2",
      "path": "7"
    },
    "2413": {
      "fn": "ERC20._mint",
      "offset": [9966, 9994],
      "op": "SSTORE",
      "path": "7"
    },
    "2414": {
      "op": "POP"
    },
    "2415": {
      "op": "POP"
    },
    "2416": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "PUSH1",
      "path": "7",
      "statement": 37,
      "value": "0x40"
    },
    "2418": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "MLOAD",
      "path": "7"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2421": {
      "op": "DUP1"
    },
    "2422": {
      "op": "MLOAD"
    },
    "2423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2425": {
      "op": "PUSH2",
      "value": "0xD1F"
    },
    "2428": {
      "op": "DUP4"
    },
    "2429": {
      "op": "CODECOPY"
    },
    "2430": {
      "op": "DUP2"
    },
    "2431": {
      "op": "MLOAD"
    },
    "2432": {
      "op": "SWAP2"
    },
    "2433": {
      "op": "MSTORE"
    },
    "2434": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "SWAP1",
      "path": "7"
    },
    "2435": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "PUSH2",
      "path": "7",
      "value": "0x992"
    },
    "2438": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "SWAP1",
      "path": "7"
    },
    "2439": {
      "fn": "ERC20._mint",
      "offset": [10027, 10028],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2441": {
      "fn": "ERC20._mint",
      "offset": [10027, 10028],
      "op": "SWAP1",
      "path": "7"
    },
    "2442": {
      "fn": "ERC20._mint",
      "offset": [10031, 10038],
      "op": "DUP6",
      "path": "7"
    },
    "2443": {
      "fn": "ERC20._mint",
      "offset": [10031, 10038],
      "op": "SWAP1",
      "path": "7"
    },
    "2444": {
      "fn": "ERC20._mint",
      "offset": [10040, 10046],
      "op": "DUP6",
      "path": "7"
    },
    "2445": {
      "fn": "ERC20._mint",
      "offset": [10040, 10046],
      "op": "SWAP1",
      "path": "7"
    },
    "2446": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCE3"
    },
    "2449": {
      "fn": "ERC20._mint",
      "jump": "i",
      "offset": [10010, 10047],
      "op": "JUMP",
      "path": "7"
    },
    "2450": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2451": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2453": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "MLOAD",
      "path": "7"
    },
    "2454": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "DUP1",
      "path": "7"
    },
    "2455": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "SWAP2",
      "path": "7"
    },
    "2456": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "SUB",
      "path": "7"
    },
    "2457": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "SWAP1",
      "path": "7"
    },
    "2458": {
      "fn": "ERC20._mint",
      "offset": [10010, 10047],
      "op": "LOG1",
      "path": "7"
    },
    "2459": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "POP",
      "path": "7"
    },
    "2460": {
      "fn": "ERC20.mint",
      "offset": [9471, 9586],
      "op": "POP",
      "path": "7"
    },
    "2461": {
      "fn": "ERC20.mint",
      "jump": "o",
      "offset": [9471, 9586],
      "op": "JUMP",
      "path": "7"
    },
    "2462": {
      "fn": "Ownable._transferOwnership",
      "offset": [2353, 2544],
      "op": "JUMPDEST",
      "path": "8"
    },
    "2463": {
      "fn": "Ownable._transferOwnership",
      "offset": [2427, 2443],
      "op": "PUSH1",
      "path": "8",
      "value": "0x0"
    },
    "2465": {
      "fn": "Ownable._transferOwnership",
      "offset": [2446, 2452],
      "op": "DUP1",
      "path": "8"
    },
    "2466": {
      "fn": "Ownable._transferOwnership",
      "offset": [2446, 2452],
      "op": "SLOAD",
      "path": "8"
    },
    "2467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2473": {
      "op": "SHL"
    },
    "2474": {
      "op": "SUB"
    },
    "2475": {
      "fn": "Ownable._transferOwnership",
      "offset": [2463, 2480],
      "op": "DUP4",
      "path": "8",
      "statement": 38
    },
    "2476": {
      "fn": "Ownable._transferOwnership",
      "offset": [2463, 2480],
      "op": "DUP2",
      "path": "8"
    },
    "2477": {
      "fn": "Ownable._transferOwnership",
      "offset": [2463, 2480],
      "op": "AND",
      "path": "8"
    },
    "2478": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2482": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2484": {
      "op": "SHL"
    },
    "2485": {
      "op": "SUB"
    },
    "2486": {
      "op": "NOT"
    },
    "2487": {
      "fn": "Ownable._transferOwnership",
      "offset": [2463, 2480],
      "op": "DUP4",
      "path": "8"
    },
    "2488": {
      "fn": "Ownable._transferOwnership",
      "offset": [2463, 2480],
      "op": "AND",
      "path": "8"
    },
    "2489": {
      "fn": "Ownable._transferOwnership",
      "offset": [2463, 2480],
      "op": "DUP2",
      "path": "8"
    },
    "2490": {
      "fn": "Ownable._transferOwnership",
      "offset": [2463, 2480],
      "op": "OR",
      "path": "8"
    },
    "2491": {
      "fn": "Ownable._transferOwnership",
      "offset": [2463, 2480],
      "op": "DUP5",
      "path": "8"
    },
    "2492": {
      "fn": "Ownable._transferOwnership",
      "offset": [2463, 2480],
      "op": "SSTORE",
      "path": "8"
    },
    "2493": {
      "fn": "Ownable._transferOwnership",
      "offset": [2496, 2536],
      "op": "PUSH1",
      "path": "8",
      "statement": 39,
      "value": "0x40"
    },
    "2495": {
      "fn": "Ownable._transferOwnership",
      "offset": [2496, 2536],
      "op": "MLOAD",
      "path": "8"
    },
    "2496": {
      "fn": "Ownable._transferOwnership",
      "offset": [2446, 2452],
      "op": "SWAP2",
      "path": "8"
    },
    "2497": {
      "fn": "Ownable._transferOwnership",
      "offset": [2446, 2452],
      "op": "SWAP1",
      "path": "8"
    },
    "2498": {
      "fn": "Ownable._transferOwnership",
      "offset": [2446, 2452],
      "op": "SWAP3",
      "path": "8"
    },
    "2499": {
      "fn": "Ownable._transferOwnership",
      "offset": [2446, 2452],
      "op": "AND",
      "path": "8"
    },
    "2500": {
      "fn": "Ownable._transferOwnership",
      "offset": [2446, 2452],
      "op": "SWAP3",
      "path": "8"
    },
    "2501": {
      "fn": "Ownable._transferOwnership",
      "offset": [2446, 2452],
      "op": "DUP4",
      "path": "8"
    },
    "2502": {
      "fn": "Ownable._transferOwnership",
      "offset": [2446, 2452],
      "op": "SWAP2",
      "path": "8"
    },
    "2503": {
      "fn": "Ownable._transferOwnership",
      "offset": [2496, 2536],
      "op": "PUSH32",
      "path": "8",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "2536": {
      "fn": "Ownable._transferOwnership",
      "offset": [2496, 2536],
      "op": "SWAP2",
      "path": "8"
    },
    "2537": {
      "fn": "Ownable._transferOwnership",
      "offset": [2427, 2443],
      "op": "SWAP1",
      "path": "8"
    },
    "2538": {
      "fn": "Ownable._transferOwnership",
      "offset": [2496, 2536],
      "op": "LOG3",
      "path": "8"
    },
    "2539": {
      "fn": "Ownable._transferOwnership",
      "offset": [2416, 2544],
      "op": "POP",
      "path": "8"
    },
    "2540": {
      "fn": "Ownable._transferOwnership",
      "offset": [2353, 2544],
      "op": "POP",
      "path": "8"
    },
    "2541": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [2353, 2544],
      "op": "JUMP",
      "path": "8"
    },
    "2542": {
      "fn": "ERC20._burn",
      "offset": [10449, 11040],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2543": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2549": {
      "op": "SHL"
    },
    "2550": {
      "op": "SUB"
    },
    "2551": {
      "fn": "ERC20._burn",
      "offset": [10533, 10554],
      "op": "DUP3",
      "path": "7",
      "statement": 40
    },
    "2552": {
      "branch": 54,
      "fn": "ERC20._burn",
      "offset": [10533, 10554],
      "op": "AND",
      "path": "7"
    },
    "2553": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA4E"
    },
    "2556": {
      "branch": 54,
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "JUMPI",
      "path": "7"
    },
    "2557": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2559": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "MLOAD",
      "path": "7"
    },
    "2560": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2564": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2566": {
      "op": "SHL"
    },
    "2567": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "DUP2",
      "path": "7"
    },
    "2568": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "MSTORE",
      "path": "7"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2571": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2573": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "DUP3",
      "path": "7"
    },
    "2574": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "ADD",
      "path": "7"
    },
    "2575": {
      "op": "MSTORE"
    },
    "2576": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "2578": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2580": {
      "op": "DUP3"
    },
    "2581": {
      "op": "ADD"
    },
    "2582": {
      "op": "MSTORE"
    },
    "2583": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2618": {
      "op": "DUP3"
    },
    "2619": {
      "op": "ADD"
    },
    "2620": {
      "op": "MSTORE"
    },
    "2621": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "2623": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "2625": {
      "op": "SHL"
    },
    "2626": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2628": {
      "op": "DUP3"
    },
    "2629": {
      "op": "ADD"
    },
    "2630": {
      "op": "MSTORE"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2633": {
      "op": "ADD"
    },
    "2634": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "2637": {
      "op": "JUMP"
    },
    "2638": {
      "fn": "ERC20._burn",
      "offset": [10525, 10592],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2641": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2643": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2645": {
      "op": "SHL"
    },
    "2646": {
      "op": "SUB"
    },
    "2647": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "DUP3",
      "path": "7"
    },
    "2648": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "AND",
      "path": "7"
    },
    "2649": {
      "fn": "ERC20._burn",
      "offset": [10667, 10689],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2651": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "SWAP1",
      "path": "7"
    },
    "2652": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "DUP2",
      "path": "7"
    },
    "2653": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "MSTORE",
      "path": "7"
    },
    "2654": {
      "fn": "ERC20._burn",
      "offset": [10692, 10701],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2656": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2658": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "MSTORE",
      "path": "7"
    },
    "2659": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2661": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "SWAP1",
      "path": "7"
    },
    "2662": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "KECCAK256",
      "path": "7"
    },
    "2663": {
      "fn": "ERC20._burn",
      "offset": [10692, 10710],
      "op": "SLOAD",
      "path": "7"
    },
    "2664": {
      "fn": "ERC20._burn",
      "offset": [10729, 10753],
      "op": "DUP2",
      "path": "7",
      "statement": 41
    },
    "2665": {
      "fn": "ERC20._burn",
      "offset": [10729, 10753],
      "op": "DUP2",
      "path": "7"
    },
    "2666": {
      "fn": "ERC20._burn",
      "offset": [10729, 10753],
      "op": "LT",
      "path": "7"
    },
    "2667": {
      "branch": 55,
      "fn": "ERC20._burn",
      "offset": [10729, 10753],
      "op": "ISZERO",
      "path": "7"
    },
    "2668": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAC2"
    },
    "2671": {
      "branch": 55,
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "JUMPI",
      "path": "7"
    },
    "2672": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2674": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "MLOAD",
      "path": "7"
    },
    "2675": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2679": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2681": {
      "op": "SHL"
    },
    "2682": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "DUP2",
      "path": "7"
    },
    "2683": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "MSTORE",
      "path": "7"
    },
    "2684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2686": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2688": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "DUP3",
      "path": "7"
    },
    "2689": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "ADD",
      "path": "7"
    },
    "2690": {
      "op": "MSTORE"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2693": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2695": {
      "op": "DUP3"
    },
    "2696": {
      "op": "ADD"
    },
    "2697": {
      "op": "MSTORE"
    },
    "2698": {
      "op": "PUSH32",
      "value": "0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2733": {
      "op": "DUP3"
    },
    "2734": {
      "op": "ADD"
    },
    "2735": {
      "op": "MSTORE"
    },
    "2736": {
      "op": "PUSH2",
      "value": "0x6365"
    },
    "2739": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2741": {
      "op": "SHL"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2744": {
      "op": "DUP3"
    },
    "2745": {
      "op": "ADD"
    },
    "2746": {
      "op": "MSTORE"
    },
    "2747": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2749": {
      "op": "ADD"
    },
    "2750": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "PUSH2",
      "path": "7",
      "value": "0x382"
    },
    "2753": {
      "op": "JUMP"
    },
    "2754": {
      "fn": "ERC20._burn",
      "offset": [10721, 10792],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2761": {
      "op": "SHL"
    },
    "2762": {
      "op": "SUB"
    },
    "2763": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "DUP4",
      "path": "7",
      "statement": 42
    },
    "2764": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "AND",
      "path": "7"
    },
    "2765": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2767": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "SWAP1",
      "path": "7"
    },
    "2768": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "DUP2",
      "path": "7"
    },
    "2769": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "MSTORE",
      "path": "7"
    },
    "2770": {
      "fn": "ERC20._burn",
      "offset": [10828, 10837],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2772": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2774": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "MSTORE",
      "path": "7"
    },
    "2775": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2777": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "DUP2",
      "path": "7"
    },
    "2778": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "KECCAK256",
      "path": "7"
    },
    "2779": {
      "fn": "ERC20._burn",
      "offset": [10849, 10872],
      "op": "DUP4",
      "path": "7"
    },
    "2780": {
      "fn": "ERC20._burn",
      "offset": [10849, 10872],
      "op": "DUP4",
      "path": "7"
    },
    "2781": {
      "fn": "ERC20._burn",
      "offset": [10849, 10872],
      "op": "SUB",
      "path": "7"
    },
    "2782": {
      "fn": "ERC20._burn",
      "offset": [10828, 10872],
      "op": "SWAP1",
      "path": "7"
    },
    "2783": {
      "fn": "ERC20._burn",
      "offset": [10828, 10872],
      "op": "SSTORE",
      "path": "7"
    },
    "2784": {
      "fn": "ERC20._burn",
      "offset": [10894, 10906],
      "op": "PUSH1",
      "path": "7",
      "statement": 43,
      "value": "0x3"
    },
    "2786": {
      "fn": "ERC20._burn",
      "offset": [10894, 10916],
      "op": "DUP1",
      "path": "7"
    },
    "2787": {
      "fn": "ERC20._burn",
      "offset": [10894, 10916],
      "op": "SLOAD",
      "path": "7"
    },
    "2788": {
      "fn": "ERC20._burn",
      "offset": [10866, 10872],
      "op": "DUP5",
      "path": "7"
    },
    "2789": {
      "fn": "ERC20._burn",
      "offset": [10866, 10872],
      "op": "SWAP3",
      "path": "7"
    },
    "2790": {
      "fn": "ERC20._burn",
      "offset": [10828, 10846],
      "op": "SWAP1",
      "path": "7"
    },
    "2791": {
      "fn": "ERC20._burn",
      "offset": [10894, 10916],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAF1"
    },
    "2794": {
      "fn": "ERC20._burn",
      "offset": [10894, 10916],
      "op": "SWAP1",
      "path": "7"
    },
    "2795": {
      "fn": "ERC20._burn",
      "offset": [10866, 10872],
      "op": "DUP5",
      "path": "7"
    },
    "2796": {
      "fn": "ERC20._burn",
      "offset": [10866, 10872],
      "op": "SWAP1",
      "path": "7"
    },
    "2797": {
      "fn": "ERC20._burn",
      "offset": [10894, 10916],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD07"
    },
    "2800": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [10894, 10916],
      "op": "JUMP",
      "path": "7"
    },
    "2801": {
      "fn": "ERC20._burn",
      "offset": [10894, 10916],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2802": {
      "fn": "ERC20._burn",
      "offset": [10894, 10916],
      "op": "SWAP1",
      "path": "7"
    },
    "2803": {
      "fn": "ERC20._burn",
      "offset": [10894, 10916],
      "op": "SWAP2",
      "path": "7"
    },
    "2804": {
      "fn": "ERC20._burn",
      "offset": [10894, 10916],
      "op": "SSTORE",
      "path": "7"
    },
    "2805": {
      "op": "POP"
    },
    "2806": {
      "op": "POP"
    },
    "2807": {
      "fn": "ERC20._burn",
      "offset": [10934, 10971],
      "op": "PUSH1",
      "path": "7",
      "statement": 44,
      "value": "0x40"
    },
    "2809": {
      "fn": "ERC20._burn",
      "offset": [10934, 10971],
      "op": "MLOAD",
      "path": "7"
    },
    "2810": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2812": {
      "op": "DUP1"
    },
    "2813": {
      "op": "MLOAD"
    },
    "2814": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2816": {
      "op": "PUSH2",
      "value": "0xD1F"
    },
    "2819": {
      "op": "DUP4"
    },
    "2820": {
      "op": "CODECOPY"
    },
    "2821": {
      "op": "DUP2"
    },
    "2822": {
      "op": "MLOAD"
    },
    "2823": {
      "op": "SWAP2"
    },
    "2824": {
      "op": "MSTORE"
    },
    "2825": {
      "fn": "ERC20._burn",
      "offset": [10934, 10971],
      "op": "SWAP1",
      "path": "7"
    },
    "2826": {
      "fn": "ERC20._burn",
      "offset": [10934, 10971],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71E"
    },
    "2829": {
      "fn": "ERC20._burn",
      "offset": [10934, 10971],
      "op": "SWAP1",
      "path": "7"
    },
    "2830": {
      "fn": "ERC20._burn",
      "offset": [10943, 10950],
      "op": "DUP6",
      "path": "7"
    },
    "2831": {
      "fn": "ERC20._burn",
      "offset": [10943, 10950],
      "op": "SWAP1",
      "path": "7"
    },
    "2832": {
      "fn": "ERC20._burn",
      "offset": [10960, 10961],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2834": {
      "fn": "ERC20._burn",
      "offset": [10960, 10961],
      "op": "SWAP1",
      "path": "7"
    },
    "2835": {
      "fn": "ERC20._burn",
      "offset": [10964, 10970],
      "op": "DUP7",
      "path": "7"
    },
    "2836": {
      "fn": "ERC20._burn",
      "offset": [10964, 10970],
      "op": "SWAP1",
      "path": "7"
    },
    "2837": {
      "fn": "ERC20._burn",
      "offset": [10934, 10971],
      "op": "PUSH2",
      "path": "7",
      "value": "0xCE3"
    },
    "2840": {
      "fn": "ERC20._burn",
      "jump": "i",
      "offset": [10934, 10971],
      "op": "JUMP",
      "path": "7"
    },
    "2841": {
      "op": "JUMPDEST"
    },
    "2842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2846": {
      "op": "DUP1"
    },
    "2847": {
      "op": "DUP4"
    },
    "2848": {
      "op": "MSTORE"
    },
    "2849": {
      "op": "DUP4"
    },
    "2850": {
      "op": "MLOAD"
    },
    "2851": {
      "op": "DUP1"
    },
    "2852": {
      "op": "DUP3"
    },
    "2853": {
      "op": "DUP6"
    },
    "2854": {
      "op": "ADD"
    },
    "2855": {
      "op": "MSTORE"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2858": {
      "op": "JUMPDEST"
    },
    "2859": {
      "op": "DUP2"
    },
    "2860": {
      "op": "DUP2"
    },
    "2861": {
      "op": "LT"
    },
    "2862": {
      "op": "ISZERO"
    },
    "2863": {
      "op": "PUSH2",
      "value": "0xB46"
    },
    "2866": {
      "op": "JUMPI"
    },
    "2867": {
      "op": "DUP6"
    },
    "2868": {
      "op": "DUP2"
    },
    "2869": {
      "op": "ADD"
    },
    "2870": {
      "op": "DUP4"
    },
    "2871": {
      "op": "ADD"
    },
    "2872": {
      "op": "MLOAD"
    },
    "2873": {
      "op": "DUP6"
    },
    "2874": {
      "op": "DUP3"
    },
    "2875": {
      "op": "ADD"
    },
    "2876": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2878": {
      "op": "ADD"
    },
    "2879": {
      "op": "MSTORE"
    },
    "2880": {
      "op": "DUP3"
    },
    "2881": {
      "op": "ADD"
    },
    "2882": {
      "op": "PUSH2",
      "value": "0xB2A"
    },
    "2885": {
      "op": "JUMP"
    },
    "2886": {
      "op": "JUMPDEST"
    },
    "2887": {
      "op": "DUP2"
    },
    "2888": {
      "op": "DUP2"
    },
    "2889": {
      "op": "GT"
    },
    "2890": {
      "op": "ISZERO"
    },
    "2891": {
      "op": "PUSH2",
      "value": "0xB58"
    },
    "2894": {
      "op": "JUMPI"
    },
    "2895": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2899": {
      "op": "DUP4"
    },
    "2900": {
      "op": "DUP8"
    },
    "2901": {
      "op": "ADD"
    },
    "2902": {
      "op": "ADD"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "JUMPDEST"
    },
    "2905": {
      "op": "POP"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2908": {
      "op": "ADD"
    },
    "2909": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2911": {
      "op": "NOT"
    },
    "2912": {
      "op": "AND"
    },
    "2913": {
      "op": "SWAP3"
    },
    "2914": {
      "op": "SWAP1"
    },
    "2915": {
      "op": "SWAP3"
    },
    "2916": {
      "op": "ADD"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2919": {
      "op": "ADD"
    },
    "2920": {
      "op": "SWAP4"
    },
    "2921": {
      "op": "SWAP3"
    },
    "2922": {
      "op": "POP"
    },
    "2923": {
      "op": "POP"
    },
    "2924": {
      "op": "POP"
    },
    "2925": {
      "jump": "o",
      "op": "JUMP"
    },
    "2926": {
      "op": "JUMPDEST"
    },
    "2927": {
      "op": "DUP1"
    },
    "2928": {
      "op": "CALLDATALOAD"
    },
    "2929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2931": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2933": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2935": {
      "op": "SHL"
    },
    "2936": {
      "op": "SUB"
    },
    "2937": {
      "op": "DUP2"
    },
    "2938": {
      "op": "AND"
    },
    "2939": {
      "op": "DUP2"
    },
    "2940": {
      "op": "EQ"
    },
    "2941": {
      "op": "PUSH2",
      "value": "0xB85"
    },
    "2944": {
      "op": "JUMPI"
    },
    "2945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2947": {
      "op": "DUP1"
    },
    "2948": {
      "op": "REVERT"
    },
    "2949": {
      "op": "JUMPDEST"
    },
    "2950": {
      "op": "SWAP2"
    },
    "2951": {
      "op": "SWAP1"
    },
    "2952": {
      "op": "POP"
    },
    "2953": {
      "jump": "o",
      "op": "JUMP"
    },
    "2954": {
      "op": "JUMPDEST"
    },
    "2955": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2957": {
      "op": "DUP1"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2960": {
      "op": "DUP4"
    },
    "2961": {
      "op": "DUP6"
    },
    "2962": {
      "op": "SUB"
    },
    "2963": {
      "op": "SLT"
    },
    "2964": {
      "op": "ISZERO"
    },
    "2965": {
      "op": "PUSH2",
      "value": "0xB9D"
    },
    "2968": {
      "op": "JUMPI"
    },
    "2969": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2971": {
      "op": "DUP1"
    },
    "2972": {
      "op": "REVERT"
    },
    "2973": {
      "op": "JUMPDEST"
    },
    "2974": {
      "op": "PUSH2",
      "value": "0xBA6"
    },
    "2977": {
      "op": "DUP4"
    },
    "2978": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "2981": {
      "jump": "i",
      "op": "JUMP"
    },
    "2982": {
      "op": "JUMPDEST"
    },
    "2983": {
      "op": "SWAP5"
    },
    "2984": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2986": {
      "op": "SWAP4"
    },
    "2987": {
      "op": "SWAP1"
    },
    "2988": {
      "op": "SWAP4"
    },
    "2989": {
      "op": "ADD"
    },
    "2990": {
      "op": "CALLDATALOAD"
    },
    "2991": {
      "op": "SWAP4"
    },
    "2992": {
      "op": "POP"
    },
    "2993": {
      "op": "POP"
    },
    "2994": {
      "op": "POP"
    },
    "2995": {
      "jump": "o",
      "op": "JUMP"
    },
    "2996": {
      "op": "JUMPDEST"
    },
    "2997": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2999": {
      "op": "DUP1"
    },
    "3000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3002": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3004": {
      "op": "DUP5"
    },
    "3005": {
      "op": "DUP7"
    },
    "3006": {
      "op": "SUB"
    },
    "3007": {
      "op": "SLT"
    },
    "3008": {
      "op": "ISZERO"
    },
    "3009": {
      "op": "PUSH2",
      "value": "0xBC9"
    },
    "3012": {
      "op": "JUMPI"
    },
    "3013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3015": {
      "op": "DUP1"
    },
    "3016": {
      "op": "REVERT"
    },
    "3017": {
      "op": "JUMPDEST"
    },
    "3018": {
      "op": "PUSH2",
      "value": "0xBD2"
    },
    "3021": {
      "op": "DUP5"
    },
    "3022": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "3025": {
      "jump": "i",
      "op": "JUMP"
    },
    "3026": {
      "op": "JUMPDEST"
    },
    "3027": {
      "op": "SWAP3"
    },
    "3028": {
      "op": "POP"
    },
    "3029": {
      "op": "PUSH2",
      "value": "0xBE0"
    },
    "3032": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3034": {
      "op": "DUP6"
    },
    "3035": {
      "op": "ADD"
    },
    "3036": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "3039": {
      "jump": "i",
      "op": "JUMP"
    },
    "3040": {
      "op": "JUMPDEST"
    },
    "3041": {
      "op": "SWAP2"
    },
    "3042": {
      "op": "POP"
    },
    "3043": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3045": {
      "op": "DUP5"
    },
    "3046": {
      "op": "ADD"
    },
    "3047": {
      "op": "CALLDATALOAD"
    },
    "3048": {
      "op": "SWAP1"
    },
    "3049": {
      "op": "POP"
    },
    "3050": {
      "op": "SWAP3"
    },
    "3051": {
      "op": "POP"
    },
    "3052": {
      "op": "SWAP3"
    },
    "3053": {
      "op": "POP"
    },
    "3054": {
      "op": "SWAP3"
    },
    "3055": {
      "jump": "o",
      "op": "JUMP"
    },
    "3056": {
      "op": "JUMPDEST"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3061": {
      "op": "DUP3"
    },
    "3062": {
      "op": "DUP5"
    },
    "3063": {
      "op": "SUB"
    },
    "3064": {
      "op": "SLT"
    },
    "3065": {
      "op": "ISZERO"
    },
    "3066": {
      "op": "PUSH2",
      "value": "0xC02"
    },
    "3069": {
      "op": "JUMPI"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3072": {
      "op": "DUP1"
    },
    "3073": {
      "op": "REVERT"
    },
    "3074": {
      "op": "JUMPDEST"
    },
    "3075": {
      "op": "PUSH2",
      "value": "0xC0B"
    },
    "3078": {
      "op": "DUP3"
    },
    "3079": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "3082": {
      "jump": "i",
      "op": "JUMP"
    },
    "3083": {
      "op": "JUMPDEST"
    },
    "3084": {
      "op": "SWAP4"
    },
    "3085": {
      "op": "SWAP3"
    },
    "3086": {
      "op": "POP"
    },
    "3087": {
      "op": "POP"
    },
    "3088": {
      "op": "POP"
    },
    "3089": {
      "jump": "o",
      "op": "JUMP"
    },
    "3090": {
      "op": "JUMPDEST"
    },
    "3091": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3093": {
      "op": "DUP1"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3096": {
      "op": "DUP4"
    },
    "3097": {
      "op": "DUP6"
    },
    "3098": {
      "op": "SUB"
    },
    "3099": {
      "op": "SLT"
    },
    "3100": {
      "op": "ISZERO"
    },
    "3101": {
      "op": "PUSH2",
      "value": "0xC25"
    },
    "3104": {
      "op": "JUMPI"
    },
    "3105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3107": {
      "op": "DUP1"
    },
    "3108": {
      "op": "REVERT"
    },
    "3109": {
      "op": "JUMPDEST"
    },
    "3110": {
      "op": "PUSH2",
      "value": "0xC2E"
    },
    "3113": {
      "op": "DUP4"
    },
    "3114": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "3117": {
      "jump": "i",
      "op": "JUMP"
    },
    "3118": {
      "op": "JUMPDEST"
    },
    "3119": {
      "op": "SWAP2"
    },
    "3120": {
      "op": "POP"
    },
    "3121": {
      "op": "PUSH2",
      "value": "0xC3C"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3126": {
      "op": "DUP5"
    },
    "3127": {
      "op": "ADD"
    },
    "3128": {
      "op": "PUSH2",
      "value": "0xB6E"
    },
    "3131": {
      "jump": "i",
      "op": "JUMP"
    },
    "3132": {
      "op": "JUMPDEST"
    },
    "3133": {
      "op": "SWAP1"
    },
    "3134": {
      "op": "POP"
    },
    "3135": {
      "op": "SWAP3"
    },
    "3136": {
      "op": "POP"
    },
    "3137": {
      "op": "SWAP3"
    },
    "3138": {
      "op": "SWAP1"
    },
    "3139": {
      "op": "POP"
    },
    "3140": {
      "jump": "o",
      "op": "JUMP"
    },
    "3141": {
      "op": "JUMPDEST"
    },
    "3142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3144": {
      "op": "DUP2"
    },
    "3145": {
      "op": "DUP2"
    },
    "3146": {
      "op": "SHR"
    },
    "3147": {
      "op": "SWAP1"
    },
    "3148": {
      "op": "DUP3"
    },
    "3149": {
      "op": "AND"
    },
    "3150": {
      "op": "DUP1"
    },
    "3151": {
      "op": "PUSH2",
      "value": "0xC59"
    },
    "3154": {
      "op": "JUMPI"
    },
    "3155": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "3157": {
      "op": "DUP3"
    },
    "3158": {
      "op": "AND"
    },
    "3159": {
      "op": "SWAP2"
    },
    "3160": {
      "op": "POP"
    },
    "3161": {
      "op": "JUMPDEST"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3164": {
      "op": "DUP3"
    },
    "3165": {
      "op": "LT"
    },
    "3166": {
      "op": "DUP2"
    },
    "3167": {
      "op": "EQ"
    },
    "3168": {
      "op": "ISZERO"
    },
    "3169": {
      "op": "PUSH2",
      "value": "0xC7A"
    },
    "3172": {
      "op": "JUMPI"
    },
    "3173": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3183": {
      "op": "MSTORE"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3188": {
      "op": "MSTORE"
    },
    "3189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3193": {
      "op": "REVERT"
    },
    "3194": {
      "op": "JUMPDEST"
    },
    "3195": {
      "op": "POP"
    },
    "3196": {
      "op": "SWAP2"
    },
    "3197": {
      "op": "SWAP1"
    },
    "3198": {
      "op": "POP"
    },
    "3199": {
      "jump": "o",
      "op": "JUMP"
    },
    "3200": {
      "op": "JUMPDEST"
    },
    "3201": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "3206": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3208": {
      "op": "SHL"
    },
    "3209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3211": {
      "op": "MSTORE"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3216": {
      "op": "MSTORE"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3219": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3221": {
      "op": "REVERT"
    },
    "3222": {
      "op": "JUMPDEST"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3225": {
      "op": "DUP3"
    },
    "3226": {
      "op": "NOT"
    },
    "3227": {
      "op": "DUP3"
    },
    "3228": {
      "op": "GT"
    },
    "3229": {
      "op": "ISZERO"
    },
    "3230": {
      "op": "PUSH2",
      "value": "0xCA9"
    },
    "3233": {
      "op": "JUMPI"
    },
    "3234": {
      "op": "PUSH2",
      "value": "0xCA9"
    },
    "3237": {
      "op": "PUSH2",
      "value": "0xC80"
    },
    "3240": {
      "jump": "i",
      "op": "JUMP"
    },
    "3241": {
      "op": "JUMPDEST"
    },
    "3242": {
      "op": "POP"
    },
    "3243": {
      "op": "ADD"
    },
    "3244": {
      "op": "SWAP1"
    },
    "3245": {
      "jump": "o",
      "op": "JUMP"
    },
    "3246": {
      "op": "JUMPDEST"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3249": {
      "op": "DUP1"
    },
    "3250": {
      "op": "DUP3"
    },
    "3251": {
      "op": "MSTORE"
    },
    "3252": {
      "op": "DUP2"
    },
    "3253": {
      "op": "DUP2"
    },
    "3254": {
      "op": "ADD"
    },
    "3255": {
      "op": "MSTORE"
    },
    "3256": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3289": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3291": {
      "op": "DUP3"
    },
    "3292": {
      "op": "ADD"
    },
    "3293": {
      "op": "MSTORE"
    },
    "3294": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3296": {
      "op": "ADD"
    },
    "3297": {
      "op": "SWAP1"
    },
    "3298": {
      "jump": "o",
      "op": "JUMP"
    },
    "3299": {
      "op": "JUMPDEST"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3304": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3306": {
      "op": "SHL"
    },
    "3307": {
      "op": "SUB"
    },
    "3308": {
      "op": "SWAP4"
    },
    "3309": {
      "op": "DUP5"
    },
    "3310": {
      "op": "AND"
    },
    "3311": {
      "op": "DUP2"
    },
    "3312": {
      "op": "MSTORE"
    },
    "3313": {
      "op": "SWAP2"
    },
    "3314": {
      "op": "SWAP1"
    },
    "3315": {
      "op": "SWAP3"
    },
    "3316": {
      "op": "AND"
    },
    "3317": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3319": {
      "op": "DUP3"
    },
    "3320": {
      "op": "ADD"
    },
    "3321": {
      "op": "MSTORE"
    },
    "3322": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3324": {
      "op": "DUP2"
    },
    "3325": {
      "op": "ADD"
    },
    "3326": {
      "op": "SWAP2"
    },
    "3327": {
      "op": "SWAP1"
    },
    "3328": {
      "op": "SWAP2"
    },
    "3329": {
      "op": "MSTORE"
    },
    "3330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "3332": {
      "op": "ADD"
    },
    "3333": {
      "op": "SWAP1"
    },
    "3334": {
      "jump": "o",
      "op": "JUMP"
    },
    "3335": {
      "op": "JUMPDEST"
    },
    "3336": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3338": {
      "op": "DUP3"
    },
    "3339": {
      "op": "DUP3"
    },
    "3340": {
      "op": "LT"
    },
    "3341": {
      "op": "ISZERO"
    },
    "3342": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "3345": {
      "op": "JUMPI"
    },
    "3346": {
      "op": "PUSH2",
      "value": "0xD19"
    },
    "3349": {
      "op": "PUSH2",
      "value": "0xC80"
    },
    "3352": {
      "jump": "i",
      "op": "JUMP"
    },
    "3353": {
      "op": "JUMPDEST"
    },
    "3354": {
      "op": "POP"
    },
    "3355": {
      "op": "SUB"
    },
    "3356": {
      "op": "SWAP1"
    },
    "3357": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "3a8f91104241d4d7177acc693d54ba80f32b6e8a",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/ERC20.sol)\npragma solidity ^0.8.0;\nimport \"./Ownable.sol\";\n\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, Ownable {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    event Transfer(address from, address to, uint256 value);\n    event Approval(address owner, address spender, uint256 value);\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount)\n        public\n        virtual\n        returns (bool)\n    {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender)\n        public\n        view\n        virtual\n        returns (uint256)\n    {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount)\n        public\n        virtual\n        returns (bool)\n    {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) public virtual returns (bool) {\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\n        if (currentAllowance != type(uint256).max) {\n            require(\n                currentAllowance >= amount,\n                \"ERC20: transfer amount exceeds allowance\"\n            );\n            unchecked {\n                _approve(sender, _msgSender(), currentAllowance - amount);\n            }\n        }\n\n        _transfer(sender, recipient, amount);\n\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        _approve(\n            _msgSender(),\n            spender,\n            _allowances[_msgSender()][spender] + addedValue\n        );\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue)\n        public\n        virtual\n        returns (bool)\n    {\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\n        require(\n            currentAllowance >= subtractedValue,\n            \"ERC20: decreased allowance below zero\"\n        );\n        unchecked {\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        uint256 senderBalance = _balances[sender];\n        require(\n            senderBalance >= amount,\n            \"ERC20: transfer amount exceeds balance\"\n        );\n        unchecked {\n            _balances[sender] = senderBalance - amount;\n        }\n        _balances[recipient] += amount;\n\n        emit Transfer(sender, recipient, amount);\n\n        _afterTokenTransfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n\n    function mint(address account, uint256 amount) external virtual onlyOwner {\n        _mint(account, amount);\n    }\n\n    function burn(address account, uint256 amount) external virtual onlyOwner {\n        _burn(account, amount);\n    }\n\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n",
  "sourceMap": "1588:11726:7:-:0;;;2297:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;929:30:8;948:10;929:18;:30::i;:::-;2364:13:7;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2388:17:7;;;;:7;;:17;;;;;:::i;:::-;;2297:116;;1588:11726;;2353:191:8;2427:16;2446:6;;-1:-1:-1;;;;;2463:17:8;;;-1:-1:-1;;;;;;2463:17:8;;;;;;2496:40;;2446:6;;;;;;;2496:40;;2427:16;2496:40;2416:128;2353:191;:::o;1588:11726:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1588:11726:7;;;-1:-1:-1;1588:11726:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:19;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:19;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:19;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:19:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:19;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;:::-;1588:11726:7;;;;;;",
  "sourcePath": "contracts/utils/ERC20.sol",
  "type": "contract"
}
