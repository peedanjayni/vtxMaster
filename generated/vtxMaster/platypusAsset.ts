// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import { ethereum, JSONValue, TypedMap, Entity, Bytes, Address, BigInt } from "@graphprotocol/graph-ts";

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CashAdded extends ethereum.Event {
  get params(): CashAdded__Params {
    return new CashAdded__Params(this);
  }
}

export class CashAdded__Params {
  _event: CashAdded;

  constructor(event: CashAdded) {
    this._event = event;
  }

  get previousCashPosition(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get cashBeingAdded(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class CashRemoved extends ethereum.Event {
  get params(): CashRemoved__Params {
    return new CashRemoved__Params(this);
  }
}

export class CashRemoved__Params {
  _event: CashRemoved;

  constructor(event: CashRemoved) {
    this._event = event;
  }

  get previousCashPosition(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get cashBeingRemoved(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LiabilityAdded extends ethereum.Event {
  get params(): LiabilityAdded__Params {
    return new LiabilityAdded__Params(this);
  }
}

export class LiabilityAdded__Params {
  _event: LiabilityAdded;

  constructor(event: LiabilityAdded) {
    this._event = event;
  }

  get previousLiabilityPosition(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get liabilityBeingAdded(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class LiabilityRemoved extends ethereum.Event {
  get params(): LiabilityRemoved__Params {
    return new LiabilityRemoved__Params(this);
  }
}

export class LiabilityRemoved__Params {
  _event: LiabilityRemoved;

  constructor(event: LiabilityRemoved) {
    this._event = event;
  }

  get previousLiabilityPosition(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get liabilityBeingRemoved(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MaxSupplyUpdated extends ethereum.Event {
  get params(): MaxSupplyUpdated__Params {
    return new MaxSupplyUpdated__Params(this);
  }
}

export class MaxSupplyUpdated__Params {
  _event: MaxSupplyUpdated;

  constructor(event: MaxSupplyUpdated) {
    this._event = event;
  }

  get previousMaxSupply(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newMaxSupply(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolUpdated extends ethereum.Event {
  get params(): PoolUpdated__Params {
    return new PoolUpdated__Params(this);
  }
}

export class PoolUpdated__Params {
  _event: PoolUpdated;

  constructor(event: PoolUpdated) {
    this._event = event;
  }

  get previousPool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newPool(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class platypusAsset extends ethereum.SmartContract {
  static bind(address: Address): platypusAsset {
    return new platypusAsset("platypusAsset", address);
  }

  // _name(): string {
  //   let result = super.call("_name", "_name():(string)", []);

  //   return result[0].toString();
  // }

  try__name(): ethereum.CallResult<string> {
    let result = super.tryCall("_name", "_name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  _symbol(): string {
    let result = super.call("_symbol", "_symbol():(string)", []);

    return result[0].toString();
  }

  try__symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("_symbol", "_symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  aggregateAccount(): Address {
    let result = super.call("aggregateAccount", "aggregateAccount():(address)", []);

    return result[0].toAddress();
  }

  try_aggregateAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall("aggregateAccount", "aggregateAccount():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call("allowance", "allowance(address,address):(uint256)", [
      ethereum.Value.fromAddress(owner),
      ethereum.Value.fromAddress(spender),
    ]);

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("allowance", "allowance(address,address):(uint256)", [
      ethereum.Value.fromAddress(owner),
      ethereum.Value.fromAddress(spender),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [ethereum.Value.fromAddress(account)]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [ethereum.Value.fromAddress(account)]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  cash(): BigInt {
    let result = super.call("cash", "cash():(uint256)", []);

    return result[0].toBigInt();
  }

  try_cash(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("cash", "cash():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  decreaseAllowance(spender: Address, subtractedValue: BigInt): boolean {
    let result = super.call("decreaseAllowance", "decreaseAllowance(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(subtractedValue),
    ]);

    return result[0].toBoolean();
  }

  try_decreaseAllowance(spender: Address, subtractedValue: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("decreaseAllowance", "decreaseAllowance(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(subtractedValue),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  increaseAllowance(spender: Address, addedValue: BigInt): boolean {
    let result = super.call("increaseAllowance", "increaseAllowance(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(addedValue),
    ]);

    return result[0].toBoolean();
  }

  try_increaseAllowance(spender: Address, addedValue: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("increaseAllowance", "increaseAllowance(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(addedValue),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  liability(): BigInt {
    let result = super.call("liability", "liability():(uint256)", []);

    return result[0].toBigInt();
  }

  try_liability(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("liability", "liability():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  maxSupply(): BigInt {
    let result = super.call("maxSupply", "maxSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_maxSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("maxSupply", "maxSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pool(): Address {
    let result = super.call("pool", "pool():(address)", []);

    return result[0].toAddress();
  }

  try_pool(): ethereum.CallResult<Address> {
    let result = super.tryCall("pool", "pool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(recipient: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);

    return result[0].toBoolean();
  }

  try_transfer(recipient: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(sender: Address, recipient: Address, amount: BigInt): boolean {
    let result = super.call("transferFrom", "transferFrom(address,address,uint256):(bool)", [
      ethereum.Value.fromAddress(sender),
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);

    return result[0].toBoolean();
  }

  try_transferFrom(sender: Address, recipient: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("transferFrom", "transferFrom(address,address,uint256):(bool)", [
      ethereum.Value.fromAddress(sender),
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  underlyingToken(): Address {
    let result = super.call("underlyingToken", "underlyingToken():(address)", []);

    return result[0].toAddress();
  }

  try_underlyingToken(): ethereum.CallResult<Address> {
    let result = super.tryCall("underlyingToken", "underlyingToken():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  underlyingTokenBalance(): BigInt {
    let result = super.call("underlyingTokenBalance", "underlyingTokenBalance():(uint256)", []);

    return result[0].toBigInt();
  }

  try_underlyingTokenBalance(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("underlyingTokenBalance", "underlyingTokenBalance():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddCashCall extends ethereum.Call {
  get inputs(): AddCashCall__Inputs {
    return new AddCashCall__Inputs(this);
  }

  get outputs(): AddCashCall__Outputs {
    return new AddCashCall__Outputs(this);
  }
}

export class AddCashCall__Inputs {
  _call: AddCashCall;

  constructor(call: AddCashCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddCashCall__Outputs {
  _call: AddCashCall;

  constructor(call: AddCashCall) {
    this._call = call;
  }
}

export class AddLiabilityCall extends ethereum.Call {
  get inputs(): AddLiabilityCall__Inputs {
    return new AddLiabilityCall__Inputs(this);
  }

  get outputs(): AddLiabilityCall__Outputs {
    return new AddLiabilityCall__Outputs(this);
  }
}

export class AddLiabilityCall__Inputs {
  _call: AddLiabilityCall;

  constructor(call: AddLiabilityCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddLiabilityCall__Outputs {
  _call: AddLiabilityCall;

  constructor(call: AddLiabilityCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class BurnCall extends ethereum.Call {
  get inputs(): BurnCall__Inputs {
    return new BurnCall__Inputs(this);
  }

  get outputs(): BurnCall__Outputs {
    return new BurnCall__Outputs(this);
  }
}

export class BurnCall__Inputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BurnCall__Outputs {
  _call: BurnCall;

  constructor(call: BurnCall) {
    this._call = call;
  }
}

export class DecreaseAllowanceCall extends ethereum.Call {
  get inputs(): DecreaseAllowanceCall__Inputs {
    return new DecreaseAllowanceCall__Inputs(this);
  }

  get outputs(): DecreaseAllowanceCall__Outputs {
    return new DecreaseAllowanceCall__Outputs(this);
  }
}

export class DecreaseAllowanceCall__Inputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get subtractedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class DecreaseAllowanceCall__Outputs {
  _call: DecreaseAllowanceCall;

  constructor(call: DecreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class IncreaseAllowanceCall extends ethereum.Call {
  get inputs(): IncreaseAllowanceCall__Inputs {
    return new IncreaseAllowanceCall__Inputs(this);
  }

  get outputs(): IncreaseAllowanceCall__Outputs {
    return new IncreaseAllowanceCall__Outputs(this);
  }
}

export class IncreaseAllowanceCall__Inputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get addedValue(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class IncreaseAllowanceCall__Outputs {
  _call: IncreaseAllowanceCall;

  constructor(call: IncreaseAllowanceCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get underlyingToken_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get name_(): string {
    return this._call.inputValues[1].value.toString();
  }

  get symbol_(): string {
    return this._call.inputValues[2].value.toString();
  }

  get aggregateAccount_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class RemoveCashCall extends ethereum.Call {
  get inputs(): RemoveCashCall__Inputs {
    return new RemoveCashCall__Inputs(this);
  }

  get outputs(): RemoveCashCall__Outputs {
    return new RemoveCashCall__Outputs(this);
  }
}

export class RemoveCashCall__Inputs {
  _call: RemoveCashCall;

  constructor(call: RemoveCashCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveCashCall__Outputs {
  _call: RemoveCashCall;

  constructor(call: RemoveCashCall) {
    this._call = call;
  }
}

export class RemoveLiabilityCall extends ethereum.Call {
  get inputs(): RemoveLiabilityCall__Inputs {
    return new RemoveLiabilityCall__Inputs(this);
  }

  get outputs(): RemoveLiabilityCall__Outputs {
    return new RemoveLiabilityCall__Outputs(this);
  }
}

export class RemoveLiabilityCall__Inputs {
  _call: RemoveLiabilityCall;

  constructor(call: RemoveLiabilityCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveLiabilityCall__Outputs {
  _call: RemoveLiabilityCall;

  constructor(call: RemoveLiabilityCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetAggregateAccountCall extends ethereum.Call {
  get inputs(): SetAggregateAccountCall__Inputs {
    return new SetAggregateAccountCall__Inputs(this);
  }

  get outputs(): SetAggregateAccountCall__Outputs {
    return new SetAggregateAccountCall__Outputs(this);
  }
}

export class SetAggregateAccountCall__Inputs {
  _call: SetAggregateAccountCall;

  constructor(call: SetAggregateAccountCall) {
    this._call = call;
  }

  get aggregateAccount_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAggregateAccountCall__Outputs {
  _call: SetAggregateAccountCall;

  constructor(call: SetAggregateAccountCall) {
    this._call = call;
  }
}

export class SetMaxSupplyCall extends ethereum.Call {
  get inputs(): SetMaxSupplyCall__Inputs {
    return new SetMaxSupplyCall__Inputs(this);
  }

  get outputs(): SetMaxSupplyCall__Outputs {
    return new SetMaxSupplyCall__Outputs(this);
  }
}

export class SetMaxSupplyCall__Inputs {
  _call: SetMaxSupplyCall;

  constructor(call: SetMaxSupplyCall) {
    this._call = call;
  }

  get maxSupply_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxSupplyCall__Outputs {
  _call: SetMaxSupplyCall;

  constructor(call: SetMaxSupplyCall) {
    this._call = call;
  }
}

export class SetPoolCall extends ethereum.Call {
  get inputs(): SetPoolCall__Inputs {
    return new SetPoolCall__Inputs(this);
  }

  get outputs(): SetPoolCall__Outputs {
    return new SetPoolCall__Outputs(this);
  }
}

export class SetPoolCall__Inputs {
  _call: SetPoolCall;

  constructor(call: SetPoolCall) {
    this._call = call;
  }

  get pool_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPoolCall__Outputs {
  _call: SetPoolCall;

  constructor(call: SetPoolCall) {
    this._call = call;
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferUnderlyingTokenCall extends ethereum.Call {
  get inputs(): TransferUnderlyingTokenCall__Inputs {
    return new TransferUnderlyingTokenCall__Inputs(this);
  }

  get outputs(): TransferUnderlyingTokenCall__Outputs {
    return new TransferUnderlyingTokenCall__Outputs(this);
  }
}

export class TransferUnderlyingTokenCall__Inputs {
  _call: TransferUnderlyingTokenCall;

  constructor(call: TransferUnderlyingTokenCall) {
    this._call = call;
  }

  get to(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferUnderlyingTokenCall__Outputs {
  _call: TransferUnderlyingTokenCall;

  constructor(call: TransferUnderlyingTokenCall) {
    this._call = call;
  }
}
