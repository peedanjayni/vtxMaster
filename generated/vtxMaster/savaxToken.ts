// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AccrueRewards extends ethereum.Event {
  get params(): AccrueRewards__Params {
    return new AccrueRewards__Params(this);
  }
}

export class AccrueRewards__Params {
  _event: AccrueRewards;

  constructor(event: AccrueRewards) {
    this._event = event;
  }

  get value(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class Approval extends ethereum.Event {
  get params(): Approval__Params {
    return new Approval__Params(this);
  }
}

export class Approval__Params {
  _event: Approval;

  constructor(event: Approval) {
    this._event = event;
  }

  get owner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get spender(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class CooldownPeriodUpdated extends ethereum.Event {
  get params(): CooldownPeriodUpdated__Params {
    return new CooldownPeriodUpdated__Params(this);
  }
}

export class CooldownPeriodUpdated__Params {
  _event: CooldownPeriodUpdated;

  constructor(event: CooldownPeriodUpdated) {
    this._event = event;
  }

  get oldCooldownPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newCooldownPeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Deposit extends ethereum.Event {
  get params(): Deposit__Params {
    return new Deposit__Params(this);
  }
}

export class Deposit__Params {
  _event: Deposit;

  constructor(event: Deposit) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class MintingPaused extends ethereum.Event {
  get params(): MintingPaused__Params {
    return new MintingPaused__Params(this);
  }
}

export class MintingPaused__Params {
  _event: MintingPaused;

  constructor(event: MintingPaused) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class MintingResumed extends ethereum.Event {
  get params(): MintingResumed__Params {
    return new MintingResumed__Params(this);
  }
}

export class MintingResumed__Params {
  _event: MintingResumed;

  constructor(event: MintingResumed) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Redeem extends ethereum.Event {
  get params(): Redeem__Params {
    return new Redeem__Params(this);
  }
}

export class Redeem__Params {
  _event: Redeem;

  constructor(event: Redeem) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unlockRequestedAt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get shareAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get avaxAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class RedeemOverdueShares extends ethereum.Event {
  get params(): RedeemOverdueShares__Params {
    return new RedeemOverdueShares__Params(this);
  }
}

export class RedeemOverdueShares__Params {
  _event: RedeemOverdueShares;

  constructor(event: RedeemOverdueShares) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shareAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RedeemPeriodUpdated extends ethereum.Event {
  get params(): RedeemPeriodUpdated__Params {
    return new RedeemPeriodUpdated__Params(this);
  }
}

export class RedeemPeriodUpdated__Params {
  _event: RedeemPeriodUpdated;

  constructor(event: RedeemPeriodUpdated) {
    this._event = event;
  }

  get oldRedeemPeriod(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newRedeemPeriod(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Submitted extends ethereum.Event {
  get params(): Submitted__Params {
    return new Submitted__Params(this);
  }
}

export class Submitted__Params {
  _event: Submitted;

  constructor(event: Submitted) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get avaxAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get shareAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class TotalPooledAvaxCapUpdated extends ethereum.Event {
  get params(): TotalPooledAvaxCapUpdated__Params {
    return new TotalPooledAvaxCapUpdated__Params(this);
  }
}

export class TotalPooledAvaxCapUpdated__Params {
  _event: TotalPooledAvaxCapUpdated;

  constructor(event: TotalPooledAvaxCapUpdated) {
    this._event = event;
  }

  get oldTotalPooldAvaxCap(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newTotalPooledAvaxCap(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Transfer extends ethereum.Event {
  get params(): Transfer__Params {
    return new Transfer__Params(this);
  }
}

export class Transfer__Params {
  _event: Transfer;

  constructor(event: Transfer) {
    this._event = event;
  }

  get from(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get to(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get value(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UnlockCancelled extends ethereum.Event {
  get params(): UnlockCancelled__Params {
    return new UnlockCancelled__Params(this);
  }
}

export class UnlockCancelled__Params {
  _event: UnlockCancelled;

  constructor(event: UnlockCancelled) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get unlockRequestedAt(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get shareAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class UnlockRequested extends ethereum.Event {
  get params(): UnlockRequested__Params {
    return new UnlockRequested__Params(this);
  }
}

export class UnlockRequested__Params {
  _event: UnlockRequested;

  constructor(event: UnlockRequested) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shareAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Withdraw extends ethereum.Event {
  get params(): Withdraw__Params {
    return new Withdraw__Params(this);
  }
}

export class Withdraw__Params {
  _event: Withdraw;

  constructor(event: Withdraw) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class savaxToken__getPaginatedUnlockRequestsResultValue0Struct extends ethereum.Tuple {
  get startedAt(): BigInt {
    return this[0].toBigInt();
  }

  get shareAmount(): BigInt {
    return this[1].toBigInt();
  }
}

export class savaxToken__getPaginatedUnlockRequestsResult {
  value0: Array<savaxToken__getPaginatedUnlockRequestsResultValue0Struct>;
  value1: Array<BigInt>;

  constructor(
    value0: Array<savaxToken__getPaginatedUnlockRequestsResultValue0Struct>,
    value1: Array<BigInt>
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromTupleArray(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigIntArray(this.value1));
    return map;
  }
}

export class savaxToken__userUnlockRequestsResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class savaxToken extends ethereum.SmartContract {
  static bind(address: Address): savaxToken {
    return new savaxToken("savaxToken", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_ACCRUE_REWARDS(): Bytes {
    let result = super.call(
      "ROLE_ACCRUE_REWARDS",
      "ROLE_ACCRUE_REWARDS():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_ROLE_ACCRUE_REWARDS(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ROLE_ACCRUE_REWARDS",
      "ROLE_ACCRUE_REWARDS():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_DEPOSIT(): Bytes {
    let result = super.call("ROLE_DEPOSIT", "ROLE_DEPOSIT():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_DEPOSIT(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROLE_DEPOSIT", "ROLE_DEPOSIT():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_PAUSE(): Bytes {
    let result = super.call("ROLE_PAUSE", "ROLE_PAUSE():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_PAUSE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROLE_PAUSE", "ROLE_PAUSE():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_PAUSE_MINTING(): Bytes {
    let result = super.call(
      "ROLE_PAUSE_MINTING",
      "ROLE_PAUSE_MINTING():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_ROLE_PAUSE_MINTING(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ROLE_PAUSE_MINTING",
      "ROLE_PAUSE_MINTING():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_RESUME(): Bytes {
    let result = super.call("ROLE_RESUME", "ROLE_RESUME():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_RESUME(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ROLE_RESUME", "ROLE_RESUME():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_RESUME_MINTING(): Bytes {
    let result = super.call(
      "ROLE_RESUME_MINTING",
      "ROLE_RESUME_MINTING():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_ROLE_RESUME_MINTING(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ROLE_RESUME_MINTING",
      "ROLE_RESUME_MINTING():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_SET_TOTAL_POOLED_AVAX_CAP(): Bytes {
    let result = super.call(
      "ROLE_SET_TOTAL_POOLED_AVAX_CAP",
      "ROLE_SET_TOTAL_POOLED_AVAX_CAP():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_ROLE_SET_TOTAL_POOLED_AVAX_CAP(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ROLE_SET_TOTAL_POOLED_AVAX_CAP",
      "ROLE_SET_TOTAL_POOLED_AVAX_CAP():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  ROLE_WITHDRAW(): Bytes {
    let result = super.call("ROLE_WITHDRAW", "ROLE_WITHDRAW():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ROLE_WITHDRAW(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "ROLE_WITHDRAW",
      "ROLE_WITHDRAW():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  allowance(owner: Address, spender: Address): BigInt {
    let result = super.call(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );

    return result[0].toBigInt();
  }

  try_allowance(owner: Address, spender: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allowance",
      "allowance(address,address):(uint256)",
      [ethereum.Value.fromAddress(owner), ethereum.Value.fromAddress(spender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  approve(spender: Address, amount: BigInt): boolean {
    let result = super.call("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_approve(spender: Address, amount: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("approve", "approve(address,uint256):(bool)", [
      ethereum.Value.fromAddress(spender),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  balanceOf(account: Address): BigInt {
    let result = super.call("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBigInt();
  }

  try_balanceOf(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("balanceOf", "balanceOf(address):(uint256)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  cooldownPeriod(): BigInt {
    let result = super.call("cooldownPeriod", "cooldownPeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_cooldownPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "cooldownPeriod",
      "cooldownPeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  decimals(): i32 {
    let result = super.call("decimals", "decimals():(uint8)", []);

    return result[0].toI32();
  }

  try_decimals(): ethereum.CallResult<i32> {
    let result = super.tryCall("decimals", "decimals():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getPaginatedUnlockRequests(
    user: Address,
    from: BigInt,
    to: BigInt
  ): savaxToken__getPaginatedUnlockRequestsResult {
    let result = super.call(
      "getPaginatedUnlockRequests",
      "getPaginatedUnlockRequests(address,uint256,uint256):((uint256,uint256)[],uint256[])",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(from),
        ethereum.Value.fromUnsignedBigInt(to)
      ]
    );

    return new savaxToken__getPaginatedUnlockRequestsResult(
      result[0].toTupleArray<
        savaxToken__getPaginatedUnlockRequestsResultValue0Struct
      >(),
      result[1].toBigIntArray()
    );
  }

  try_getPaginatedUnlockRequests(
    user: Address,
    from: BigInt,
    to: BigInt
  ): ethereum.CallResult<savaxToken__getPaginatedUnlockRequestsResult> {
    let result = super.tryCall(
      "getPaginatedUnlockRequests",
      "getPaginatedUnlockRequests(address,uint256,uint256):((uint256,uint256)[],uint256[])",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromUnsignedBigInt(from),
        ethereum.Value.fromUnsignedBigInt(to)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new savaxToken__getPaginatedUnlockRequestsResult(
        value[0].toTupleArray<
          savaxToken__getPaginatedUnlockRequestsResultValue0Struct
        >(),
        value[1].toBigIntArray()
      )
    );
  }

  getPooledAvaxByShares(shareAmount: BigInt): BigInt {
    let result = super.call(
      "getPooledAvaxByShares",
      "getPooledAvaxByShares(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(shareAmount)]
    );

    return result[0].toBigInt();
  }

  try_getPooledAvaxByShares(shareAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPooledAvaxByShares",
      "getPooledAvaxByShares(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(shareAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getRoleMember(role: Bytes, index: BigInt): Address {
    let result = super.call(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );

    return result[0].toAddress();
  }

  try_getRoleMember(role: Bytes, index: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoleMember",
      "getRoleMember(bytes32,uint256):(address)",
      [
        ethereum.Value.fromFixedBytes(role),
        ethereum.Value.fromUnsignedBigInt(index)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleMemberCount(role: Bytes): BigInt {
    let result = super.call(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );

    return result[0].toBigInt();
  }

  try_getRoleMemberCount(role: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getRoleMemberCount",
      "getRoleMemberCount(bytes32):(uint256)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getSharesByPooledAvax(avaxAmount: BigInt): BigInt {
    let result = super.call(
      "getSharesByPooledAvax",
      "getSharesByPooledAvax(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(avaxAmount)]
    );

    return result[0].toBigInt();
  }

  try_getSharesByPooledAvax(avaxAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getSharesByPooledAvax",
      "getSharesByPooledAvax(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(avaxAmount)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getUnlockRequestCount(user: Address): BigInt {
    let result = super.call(
      "getUnlockRequestCount",
      "getUnlockRequestCount(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );

    return result[0].toBigInt();
  }

  try_getUnlockRequestCount(user: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getUnlockRequestCount",
      "getUnlockRequestCount(address):(uint256)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  historicalExchangeRateTimestamps(param0: BigInt): BigInt {
    let result = super.call(
      "historicalExchangeRateTimestamps",
      "historicalExchangeRateTimestamps(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_historicalExchangeRateTimestamps(
    param0: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "historicalExchangeRateTimestamps",
      "historicalExchangeRateTimestamps(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  historicalExchangeRatesByTimestamp(param0: BigInt): BigInt {
    let result = super.call(
      "historicalExchangeRatesByTimestamp",
      "historicalExchangeRatesByTimestamp(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_historicalExchangeRatesByTimestamp(
    param0: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "historicalExchangeRatesByTimestamp",
      "historicalExchangeRatesByTimestamp(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  mintingPaused(): boolean {
    let result = super.call("mintingPaused", "mintingPaused():(bool)", []);

    return result[0].toBoolean();
  }

  try_mintingPaused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("mintingPaused", "mintingPaused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  redeemPeriod(): BigInt {
    let result = super.call("redeemPeriod", "redeemPeriod():(uint256)", []);

    return result[0].toBigInt();
  }

  try_redeemPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("redeemPeriod", "redeemPeriod():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  stakerCount(): BigInt {
    let result = super.call("stakerCount", "stakerCount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_stakerCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("stakerCount", "stakerCount():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  symbol(): string {
    let result = super.call("symbol", "symbol():(string)", []);

    return result[0].toString();
  }

  try_symbol(): ethereum.CallResult<string> {
    let result = super.tryCall("symbol", "symbol():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  totalPooledAvax(): BigInt {
    let result = super.call(
      "totalPooledAvax",
      "totalPooledAvax():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalPooledAvax(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalPooledAvax",
      "totalPooledAvax():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalPooledAvaxCap(): BigInt {
    let result = super.call(
      "totalPooledAvaxCap",
      "totalPooledAvaxCap():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalPooledAvaxCap(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalPooledAvaxCap",
      "totalPooledAvaxCap():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalShares(): BigInt {
    let result = super.call("totalShares", "totalShares():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalShares(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalShares", "totalShares():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  totalSupply(): BigInt {
    let result = super.call("totalSupply", "totalSupply():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalSupply(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalSupply", "totalSupply():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  transfer(recipient: Address, amount: BigInt): boolean {
    let result = super.call("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);

    return result[0].toBoolean();
  }

  try_transfer(
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall("transfer", "transfer(address,uint256):(bool)", [
      ethereum.Value.fromAddress(recipient),
      ethereum.Value.fromUnsignedBigInt(amount)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  transferFrom(sender: Address, recipient: Address, amount: BigInt): boolean {
    let result = super.call(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );

    return result[0].toBoolean();
  }

  try_transferFrom(
    sender: Address,
    recipient: Address,
    amount: BigInt
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "transferFrom",
      "transferFrom(address,address,uint256):(bool)",
      [
        ethereum.Value.fromAddress(sender),
        ethereum.Value.fromAddress(recipient),
        ethereum.Value.fromUnsignedBigInt(amount)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  userSharesInCustody(param0: Address): BigInt {
    let result = super.call(
      "userSharesInCustody",
      "userSharesInCustody(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_userSharesInCustody(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userSharesInCustody",
      "userSharesInCustody(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  userUnlockRequests(
    param0: Address,
    param1: BigInt
  ): savaxToken__userUnlockRequestsResult {
    let result = super.call(
      "userUnlockRequests",
      "userUnlockRequests(address,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new savaxToken__userUnlockRequestsResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_userUnlockRequests(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<savaxToken__userUnlockRequestsResult> {
    let result = super.tryCall(
      "userUnlockRequests",
      "userUnlockRequests(address,uint256):(uint256,uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new savaxToken__userUnlockRequestsResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }
}

export class AccrueRewardsCall extends ethereum.Call {
  get inputs(): AccrueRewardsCall__Inputs {
    return new AccrueRewardsCall__Inputs(this);
  }

  get outputs(): AccrueRewardsCall__Outputs {
    return new AccrueRewardsCall__Outputs(this);
  }
}

export class AccrueRewardsCall__Inputs {
  _call: AccrueRewardsCall;

  constructor(call: AccrueRewardsCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AccrueRewardsCall__Outputs {
  _call: AccrueRewardsCall;

  constructor(call: AccrueRewardsCall) {
    this._call = call;
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get spender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class CancelPendingUnlockRequestsCall extends ethereum.Call {
  get inputs(): CancelPendingUnlockRequestsCall__Inputs {
    return new CancelPendingUnlockRequestsCall__Inputs(this);
  }

  get outputs(): CancelPendingUnlockRequestsCall__Outputs {
    return new CancelPendingUnlockRequestsCall__Outputs(this);
  }
}

export class CancelPendingUnlockRequestsCall__Inputs {
  _call: CancelPendingUnlockRequestsCall;

  constructor(call: CancelPendingUnlockRequestsCall) {
    this._call = call;
  }
}

export class CancelPendingUnlockRequestsCall__Outputs {
  _call: CancelPendingUnlockRequestsCall;

  constructor(call: CancelPendingUnlockRequestsCall) {
    this._call = call;
  }
}

export class CancelRedeemableUnlockRequestsCall extends ethereum.Call {
  get inputs(): CancelRedeemableUnlockRequestsCall__Inputs {
    return new CancelRedeemableUnlockRequestsCall__Inputs(this);
  }

  get outputs(): CancelRedeemableUnlockRequestsCall__Outputs {
    return new CancelRedeemableUnlockRequestsCall__Outputs(this);
  }
}

export class CancelRedeemableUnlockRequestsCall__Inputs {
  _call: CancelRedeemableUnlockRequestsCall;

  constructor(call: CancelRedeemableUnlockRequestsCall) {
    this._call = call;
  }
}

export class CancelRedeemableUnlockRequestsCall__Outputs {
  _call: CancelRedeemableUnlockRequestsCall;

  constructor(call: CancelRedeemableUnlockRequestsCall) {
    this._call = call;
  }
}

export class CancelUnlockRequestCall extends ethereum.Call {
  get inputs(): CancelUnlockRequestCall__Inputs {
    return new CancelUnlockRequestCall__Inputs(this);
  }

  get outputs(): CancelUnlockRequestCall__Outputs {
    return new CancelUnlockRequestCall__Outputs(this);
  }
}

export class CancelUnlockRequestCall__Inputs {
  _call: CancelUnlockRequestCall;

  constructor(call: CancelUnlockRequestCall) {
    this._call = call;
  }

  get unlockIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CancelUnlockRequestCall__Outputs {
  _call: CancelUnlockRequestCall;

  constructor(call: CancelUnlockRequestCall) {
    this._call = call;
  }
}

export class DepositCall extends ethereum.Call {
  get inputs(): DepositCall__Inputs {
    return new DepositCall__Inputs(this);
  }

  get outputs(): DepositCall__Outputs {
    return new DepositCall__Outputs(this);
  }
}

export class DepositCall__Inputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class DepositCall__Outputs {
  _call: DepositCall;

  constructor(call: DepositCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _cooldownPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _redeemPeriod(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseMintingCall extends ethereum.Call {
  get inputs(): PauseMintingCall__Inputs {
    return new PauseMintingCall__Inputs(this);
  }

  get outputs(): PauseMintingCall__Outputs {
    return new PauseMintingCall__Outputs(this);
  }
}

export class PauseMintingCall__Inputs {
  _call: PauseMintingCall;

  constructor(call: PauseMintingCall) {
    this._call = call;
  }
}

export class PauseMintingCall__Outputs {
  _call: PauseMintingCall;

  constructor(call: PauseMintingCall) {
    this._call = call;
  }
}

export class RedeemCall extends ethereum.Call {
  get inputs(): RedeemCall__Inputs {
    return new RedeemCall__Inputs(this);
  }

  get outputs(): RedeemCall__Outputs {
    return new RedeemCall__Outputs(this);
  }
}

export class RedeemCall__Inputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class RedeemCall__Outputs {
  _call: RedeemCall;

  constructor(call: RedeemCall) {
    this._call = call;
  }
}

export class Redeem1Call extends ethereum.Call {
  get inputs(): Redeem1Call__Inputs {
    return new Redeem1Call__Inputs(this);
  }

  get outputs(): Redeem1Call__Outputs {
    return new Redeem1Call__Outputs(this);
  }
}

export class Redeem1Call__Inputs {
  _call: Redeem1Call;

  constructor(call: Redeem1Call) {
    this._call = call;
  }

  get unlockIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class Redeem1Call__Outputs {
  _call: Redeem1Call;

  constructor(call: Redeem1Call) {
    this._call = call;
  }
}

export class RedeemOverdueSharesCall extends ethereum.Call {
  get inputs(): RedeemOverdueSharesCall__Inputs {
    return new RedeemOverdueSharesCall__Inputs(this);
  }

  get outputs(): RedeemOverdueSharesCall__Outputs {
    return new RedeemOverdueSharesCall__Outputs(this);
  }
}

export class RedeemOverdueSharesCall__Inputs {
  _call: RedeemOverdueSharesCall;

  constructor(call: RedeemOverdueSharesCall) {
    this._call = call;
  }
}

export class RedeemOverdueSharesCall__Outputs {
  _call: RedeemOverdueSharesCall;

  constructor(call: RedeemOverdueSharesCall) {
    this._call = call;
  }
}

export class RedeemOverdueShares1Call extends ethereum.Call {
  get inputs(): RedeemOverdueShares1Call__Inputs {
    return new RedeemOverdueShares1Call__Inputs(this);
  }

  get outputs(): RedeemOverdueShares1Call__Outputs {
    return new RedeemOverdueShares1Call__Outputs(this);
  }
}

export class RedeemOverdueShares1Call__Inputs {
  _call: RedeemOverdueShares1Call;

  constructor(call: RedeemOverdueShares1Call) {
    this._call = call;
  }

  get unlockIndex(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RedeemOverdueShares1Call__Outputs {
  _call: RedeemOverdueShares1Call;

  constructor(call: RedeemOverdueShares1Call) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RequestUnlockCall extends ethereum.Call {
  get inputs(): RequestUnlockCall__Inputs {
    return new RequestUnlockCall__Inputs(this);
  }

  get outputs(): RequestUnlockCall__Outputs {
    return new RequestUnlockCall__Outputs(this);
  }
}

export class RequestUnlockCall__Inputs {
  _call: RequestUnlockCall;

  constructor(call: RequestUnlockCall) {
    this._call = call;
  }

  get shareAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RequestUnlockCall__Outputs {
  _call: RequestUnlockCall;

  constructor(call: RequestUnlockCall) {
    this._call = call;
  }
}

export class ResumeCall extends ethereum.Call {
  get inputs(): ResumeCall__Inputs {
    return new ResumeCall__Inputs(this);
  }

  get outputs(): ResumeCall__Outputs {
    return new ResumeCall__Outputs(this);
  }
}

export class ResumeCall__Inputs {
  _call: ResumeCall;

  constructor(call: ResumeCall) {
    this._call = call;
  }
}

export class ResumeCall__Outputs {
  _call: ResumeCall;

  constructor(call: ResumeCall) {
    this._call = call;
  }
}

export class ResumeMintingCall extends ethereum.Call {
  get inputs(): ResumeMintingCall__Inputs {
    return new ResumeMintingCall__Inputs(this);
  }

  get outputs(): ResumeMintingCall__Outputs {
    return new ResumeMintingCall__Outputs(this);
  }
}

export class ResumeMintingCall__Inputs {
  _call: ResumeMintingCall;

  constructor(call: ResumeMintingCall) {
    this._call = call;
  }
}

export class ResumeMintingCall__Outputs {
  _call: ResumeMintingCall;

  constructor(call: ResumeMintingCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetCooldownPeriodCall extends ethereum.Call {
  get inputs(): SetCooldownPeriodCall__Inputs {
    return new SetCooldownPeriodCall__Inputs(this);
  }

  get outputs(): SetCooldownPeriodCall__Outputs {
    return new SetCooldownPeriodCall__Outputs(this);
  }
}

export class SetCooldownPeriodCall__Inputs {
  _call: SetCooldownPeriodCall;

  constructor(call: SetCooldownPeriodCall) {
    this._call = call;
  }

  get newCooldownPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetCooldownPeriodCall__Outputs {
  _call: SetCooldownPeriodCall;

  constructor(call: SetCooldownPeriodCall) {
    this._call = call;
  }
}

export class SetRedeemPeriodCall extends ethereum.Call {
  get inputs(): SetRedeemPeriodCall__Inputs {
    return new SetRedeemPeriodCall__Inputs(this);
  }

  get outputs(): SetRedeemPeriodCall__Outputs {
    return new SetRedeemPeriodCall__Outputs(this);
  }
}

export class SetRedeemPeriodCall__Inputs {
  _call: SetRedeemPeriodCall;

  constructor(call: SetRedeemPeriodCall) {
    this._call = call;
  }

  get newRedeemPeriod(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRedeemPeriodCall__Outputs {
  _call: SetRedeemPeriodCall;

  constructor(call: SetRedeemPeriodCall) {
    this._call = call;
  }
}

export class SetTotalPooledAvaxCapCall extends ethereum.Call {
  get inputs(): SetTotalPooledAvaxCapCall__Inputs {
    return new SetTotalPooledAvaxCapCall__Inputs(this);
  }

  get outputs(): SetTotalPooledAvaxCapCall__Outputs {
    return new SetTotalPooledAvaxCapCall__Outputs(this);
  }
}

export class SetTotalPooledAvaxCapCall__Inputs {
  _call: SetTotalPooledAvaxCapCall;

  constructor(call: SetTotalPooledAvaxCapCall) {
    this._call = call;
  }

  get newTotalPooledAvaxCap(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTotalPooledAvaxCapCall__Outputs {
  _call: SetTotalPooledAvaxCapCall;

  constructor(call: SetTotalPooledAvaxCapCall) {
    this._call = call;
  }
}

export class SubmitCall extends ethereum.Call {
  get inputs(): SubmitCall__Inputs {
    return new SubmitCall__Inputs(this);
  }

  get outputs(): SubmitCall__Outputs {
    return new SubmitCall__Outputs(this);
  }
}

export class SubmitCall__Inputs {
  _call: SubmitCall;

  constructor(call: SubmitCall) {
    this._call = call;
  }
}

export class SubmitCall__Outputs {
  _call: SubmitCall;

  constructor(call: SubmitCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class TransferCall extends ethereum.Call {
  get inputs(): TransferCall__Inputs {
    return new TransferCall__Inputs(this);
  }

  get outputs(): TransferCall__Outputs {
    return new TransferCall__Outputs(this);
  }
}

export class TransferCall__Inputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get recipient(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class TransferCall__Outputs {
  _call: TransferCall;

  constructor(call: TransferCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class TransferFromCall extends ethereum.Call {
  get inputs(): TransferFromCall__Inputs {
    return new TransferFromCall__Inputs(this);
  }

  get outputs(): TransferFromCall__Outputs {
    return new TransferFromCall__Outputs(this);
  }
}

export class TransferFromCall__Inputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferFromCall__Outputs {
  _call: TransferFromCall;

  constructor(call: TransferFromCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
